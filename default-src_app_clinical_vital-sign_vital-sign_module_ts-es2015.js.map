{"version":3,"sources":["./node_modules/@angular-material-components/file-input/__ivy_ngcc__/fesm2015/angular-material-components-file-input.js","./src/app/clinical/vital-sign/master/vital-sign.ts","./src/app/clinical/vital-sign/services/vital-sign.service.ts","./src/app/clinical/vital-sign/vital-sign-routing.module.ts","./src/app/clinical/vital-sign/vital-sign.component.ts","./src/app/clinical/vital-sign/vital-sign.module.ts","./src/app/group-parameter-mapping/masters/fouom-type.ts","./src/app/group-parameter-mapping/masters/fouom.ts","./src/app/group-parameter-mapping/masters/vital-parameter.ts","./src/app/group-parameter-mapping/services/group-parameter-mappingin.service.ts","./src/app/master/group-master/masters/group-type.ts","./src/app/master/group-master/masters/groups.ts","./src/app/clinical/vital-sign/vital-sign.component.css","./src/app/clinical/vital-sign/vital-sign.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8D;AACb;AAC4H;AACtG;AACK;AACW;AACxD;AACgB;AACY;AACJ;AACE;;AAEjB;AACQ;AACP;AACQ;AACE;AACI;AACb;AACO;;AAEjD;AACA;AACA,gEAAgE;AAChE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uEAAe;AAC7C;AACA;AACA,oEAAoE,yCAAyC;AAC7G,yCAAyC,+DAAwB,EAAE,0EAA0E;AAC7I,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD,gCAAgC,yCAAO;AACvC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,mBAAmB,+BAA+B;AAClD,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,4EAAqB;AAC9C;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,4EAAqB,QAAQ;AACxE,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,4EAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"default-src_app_clinical_vital-sign_vital-sign_module_ts-es2015.js","sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directive, Component, ViewEncapsulation, forwardRef, ElementRef, ChangeDetectorRef, Optional, Self, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from '@angular/material/icon';\n\nconst _c0 = [\"inputFile\"];\nconst _c1 = [\"inputValue\"];\nfunction NgxMatFileInputComponent_mat_icon_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\", 7);\n    ɵngcc0.ɵɵtext(1, \"attach_file\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c2 = [[[\"\", \"ngxMatFileInputIcon\", \"\"]]];\nconst _c3 = [\"[ngxMatFileInputIcon]\"];\nlet nextUniqueId = 0;\r\nclass NgxMatInputBase {\r\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \r\n    /** @docs-private */\r\n    ngControl) {\r\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\r\n        this._parentForm = _parentForm;\r\n        this._parentFormGroup = _parentFormGroup;\r\n        this.ngControl = ngControl;\r\n    }\r\n}\r\nconst _NgxMatInputMixinBase = mixinErrorState(NgxMatInputBase);\r\nclass NgxMatFileInputIcon {\r\n}\nNgxMatFileInputIcon.ɵfac = function NgxMatFileInputIcon_Factory(t) { return new (t || NgxMatFileInputIcon)(); };\nNgxMatFileInputIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxMatFileInputIcon, selectors: [[\"\", \"ngxMatFileInputIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMatFileInputIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxMatFileInputIcon]'\n            }]\n    }], null, null); })();\r\nclass NgxMatFileInputComponent extends _NgxMatInputMixinBase {\r\n    constructor(_elementRef, _platform, _cd, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher) {\r\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n        this._elementRef = _elementRef;\r\n        this._platform = _platform;\r\n        this._cd = _cd;\r\n        this.ngControl = ngControl;\r\n        this.color = 'primary';\r\n        this.fileNames = null;\r\n        this._uid = `ngx-mat-fileinput-${nextUniqueId++}`;\r\n        this.stateChanges = new Subject();\r\n        this.focused = false;\r\n        this.controlType = 'ngx-mat-file-input';\r\n        this.autofilled = false;\r\n        /** Function when touched */\r\n        this._onTouched = () => { };\r\n        /** Function when changed */\r\n        this._onChange = () => { };\r\n        this._disabled = false;\r\n        this._multiple = false;\r\n        this.placeholder = 'Choose a file';\r\n        this.separator = ',';\r\n        this._required = false;\r\n        this._readonly = true;\r\n        this.id = this.id;\r\n        if (this.ngControl) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n    get disabled() {\r\n        if (this.ngControl && this.ngControl.disabled !== null) {\r\n            return this.ngControl.disabled;\r\n        }\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        if (this.focused) {\r\n            this.focused = false;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    get id() { return this._id; }\r\n    set id(value) { this._id = value || this._uid; }\r\n    get multiple() { return this._multiple; }\r\n    set multiple(value) {\r\n        this._multiple = coerceBooleanProperty(value);\r\n    }\r\n    get required() { return this._required; }\r\n    set required(value) { this._required = coerceBooleanProperty(value); }\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    get readonly() { return this._readonly; }\r\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\r\n    /**\r\n     * Limiting accepted file types\r\n     * Example: accept=\"image/png, image/jpeg\" or accept=\".png, .jpg, .jpeg\" — Accept PNG or JPEG files.\r\n     */\r\n    get accept() { return this._accept; }\r\n    set accept(value) {\r\n        this._accept = value;\r\n    }\r\n    ngOnChanges() {\r\n        this.stateChanges.next();\r\n    }\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n    }\r\n    ngDoCheck() {\r\n        if (this.ngControl) {\r\n            this.updateErrorState();\r\n        }\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    writeValue(value) {\r\n        this._updateInputValue(value);\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.stateChanges.next();\r\n    }\r\n    /** Focuses the input. */\r\n    focus(options) {\r\n        this._inputValueRef.nativeElement.focus(options);\r\n    }\r\n    _focusChanged(isFocused) {\r\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\r\n            this.focused = isFocused;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    /** Mark the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._cd.markForCheck();\r\n        this.stateChanges.next();\r\n    }\r\n    _isBadInput() {\r\n        let validity = this._inputValueRef.nativeElement.validity;\r\n        return validity && validity.badInput;\r\n    }\r\n    get empty() {\r\n        return !this._inputValueRef.nativeElement.value && !this._isBadInput() &&\r\n            !this.autofilled;\r\n    }\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n    setDescribedByIds(ids) {\r\n        this._ariaDescribedby = ids.join(' ');\r\n    }\r\n    openFilePicker(event) {\r\n        this._inputFileRef.nativeElement.click();\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        this._markAsTouched();\r\n    }\r\n    handleFiles(filelist) {\r\n        if (filelist.length > 0) {\r\n            const files = new Array();\r\n            for (let i = 0; i < filelist.length; i++) {\r\n                files.push(filelist.item(i));\r\n            }\r\n            this._updateInputValue(files);\r\n            this._resetInputFile();\r\n            this._onChange(this.multiple ? files : files[0]);\r\n        }\r\n    }\r\n    /** Handles a click on the control's container. */\r\n    onContainerClick(event) { }\r\n    ;\r\n    _resetInputFile() {\r\n        this._inputFileRef.nativeElement.value = \"\";\r\n    }\r\n    _updateInputValue(files) {\r\n        let text = null;\r\n        if (files) {\r\n            if (Array.isArray(files)) {\r\n                text = this._multiple\r\n                    ? files.map(x => x.name).join(this.separator)\r\n                    : files[0].name;\r\n            }\r\n            else {\r\n                text = files.name != null ? files.name : null;\r\n            }\r\n        }\r\n        this._inputValueRef.nativeElement.value = text;\r\n    }\r\n}\nNgxMatFileInputComponent.ɵfac = function NgxMatFileInputComponent_Factory(t) { return new (t || NgxMatFileInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher)); };\nNgxMatFileInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxMatFileInputComponent, selectors: [[\"ngx-mat-file-input\"]], contentQueries: function NgxMatFileInputComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxMatFileInputIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function NgxMatFileInputComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputFileRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputValueRef = _t.first);\n    } }, hostAttrs: [1, \"ngx-mat-file-input\"], inputs: { color: \"color\", placeholder: \"placeholder\", separator: \"separator\", id: \"id\", disabled: \"disabled\", multiple: \"multiple\", required: \"required\", value: \"value\", readonly: \"readonly\", accept: \"accept\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"ngx-mat-file-input\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: forwardRef(() => NgxMatFileInputComponent) }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 8, vars: 13, consts: [[\"autocomplete\", \"off\", 1, \"mat-input-element\", \"mat-form-field-autofill-control\", 3, \"disabled\", \"required\"], [\"inputValue\", \"\"], [1, \"mat-form-field-suffix\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"type\", \"button\", 1, \"button-browse\", 3, \"color\", \"disabled\", \"click\"], [\"class\", \"ngx-mat-file-input--default-icon\", 4, \"ngIf\"], [\"type\", \"file\", 1, \"input-file\", 3, \"multiple\", \"accept\", \"change\"], [\"inputFile\", \"\"], [1, \"ngx-mat-file-input--default-icon\"]], template: function NgxMatFileInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelement(0, \"input\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function NgxMatFileInputComponent_Template_button_click_3_listener($event) { return ctx.openFilePicker($event); });\n        ɵngcc0.ɵɵtemplate(4, NgxMatFileInputComponent_mat_icon_4_Template, 2, 0, \"mat-icon\", 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxMatFileInputComponent_Template_input_change_6_listener($event) { return ctx.handleFiles($event.target.files); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"multiple\", ctx.multiple)(\"accept\", ctx.accept);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.MatSuffix, ɵngcc6.NgIf, ɵngcc7.MatIcon], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{display:flex;line-height:18px;height:18px;align-items:center}.ngx-mat-file-input .input-file{display:block;visibility:hidden;width:0;height:0}\"], encapsulation: 2 });\r\n/** @nocollapse */\r\nNgxMatFileInputComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Platform },\r\n    { type: ChangeDetectorRef },\r\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\r\n    { type: NgForm, decorators: [{ type: Optional }] },\r\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\r\n    { type: ErrorStateMatcher }\r\n];\r\nNgxMatFileInputComponent.propDecorators = {\r\n    _inputFileRef: [{ type: ViewChild, args: ['inputFile', { static: true },] }],\r\n    _inputValueRef: [{ type: ViewChild, args: ['inputValue', { static: true },] }],\r\n    _customIcon: [{ type: ContentChild, args: [NgxMatFileInputIcon,] }],\r\n    color: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    id: [{ type: Input }],\r\n    multiple: [{ type: Input }],\r\n    placeholder: [{ type: Input }],\r\n    separator: [{ type: Input }],\r\n    required: [{ type: Input }],\r\n    errorStateMatcher: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    readonly: [{ type: Input }],\r\n    accept: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMatFileInputComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-mat-file-input',\n                template: \"<input #inputValue autocomplete=\\\"off\\\" class=\\\"mat-input-element mat-form-field-autofill-control\\\" [attr.id]='id'\\r\\n  [attr.placeholder]='placeholder' [disabled]='disabled' [required]='required' [attr.readonly]='readonly || null'\\r\\n  [attr.aria-describedby]='_ariaDescribedby || null' [attr.aria-invalid]='errorState'\\r\\n  [attr.aria-required]='required.toString()'>\\r\\n<div class=\\\"mat-form-field-suffix\\\">\\r\\n  <button matSuffix mat-icon-button [color]=\\\"color\\\" class=\\\"button-browse\\\"  (click)=\\\"openFilePicker($event)\\\" type=\\\"button\\\"\\r\\n   [disabled]=\\\"disabled\\\">\\r\\n    <mat-icon *ngIf=\\\"!_customIcon\\\" class=\\\"ngx-mat-file-input--default-icon\\\">attach_file</mat-icon>\\r\\n    <ng-content select=\\\"[ngxMatFileInputIcon]\\\"></ng-content>\\r\\n  </button>\\r\\n</div>\\r\\n<input type=\\\"file\\\" #inputFile (change)=\\\"handleFiles($event.target.files)\\\" class=\\\"input-file\\\"\\r\\n  [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\">\",\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'class': 'ngx-mat-file-input'\n                },\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: forwardRef(() => NgxMatFileInputComponent) }\n                ],\n                exportAs: 'ngx-mat-file-input',\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{display:flex;line-height:18px;height:18px;align-items:center}.ngx-mat-file-input .input-file{display:block;visibility:hidden;width:0;height:0}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }]; }, { color: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], separator: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], accept: [{\n            type: Input\n        }], _inputFileRef: [{\n            type: ViewChild,\n            args: ['inputFile', { static: true }]\n        }], _inputValueRef: [{\n            type: ViewChild,\n            args: ['inputValue', { static: true }]\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [NgxMatFileInputIcon]\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\n\nclass NgxMatFileInputModule {\r\n}\nNgxMatFileInputModule.ɵfac = function NgxMatFileInputModule_Factory(t) { return new (t || NgxMatFileInputModule)(); };\nNgxMatFileInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxMatFileInputModule });\nNgxMatFileInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatIconModule,\n            MatFormFieldModule,\n            MatInputModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMatFileInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxMatFileInputComponent,\n                    NgxMatFileInputIcon\n                ],\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatIconModule,\n                    MatFormFieldModule,\n                    MatInputModule\n                ],\n                exports: [\n                    NgxMatFileInputComponent,\n                    NgxMatFileInputIcon\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMatFileInputModule, { declarations: function () { return [NgxMatFileInputComponent, NgxMatFileInputIcon]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatInputModule]; }, exports: function () { return [NgxMatFileInputComponent, NgxMatFileInputIcon]; } }); })();\n\nfunction calculFileSize(number) {\r\n    if (number < 1024) {\r\n        return number + 'bytes';\r\n    }\r\n    else if (number >= 1024 && number < 1048576) {\r\n        return (number / 1024).toFixed(1) + 'KB';\r\n    }\r\n    else if (number >= 1048576) {\r\n        return (number / 1048576).toFixed(1) + 'MB';\r\n    }\r\n}\n\n/**\r\n * Validator for size of file\r\n * @param max Max of size of file (in bytes)\r\n */\r\nfunction MaxSizeValidator(max) {\r\n    return (ctrl) => {\r\n        max = Number(max);\r\n        if (isNaN(max)) {\r\n            throw 'MaxSizeValidator: max of size of file is invalid';\r\n        }\r\n        if (!ctrl.value)\r\n            return null;\r\n        let files = ctrl.value;\r\n        if (!Array.isArray(ctrl.value)) {\r\n            files = [ctrl.value];\r\n        }\r\n        if (!files.length)\r\n            return null;\r\n        const add = (a, b) => a + b;\r\n        const sumSize = files.map(x => x.size).reduce(add);\r\n        if (sumSize > max) {\r\n            return {\r\n                maxSize: true\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n}\n\n/**\r\n *\r\n * @param accept Allowable type of file\r\n */\r\nfunction AcceptValidator(accept) {\r\n    return (ctrl) => {\r\n        if (!accept) {\r\n            throw ('AcceptValidator: allowable type of file can not be empty');\r\n        }\r\n        if (ctrl.value == null)\r\n            return null;\r\n        if (!accept.includes(ctrl.value.type)) {\r\n            return {\r\n                accept: true\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n}\n\n/*\r\n * Public API Surface of file-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AcceptValidator, MaxSizeValidator, NgxMatFileInputComponent, NgxMatFileInputIcon, NgxMatFileInputModule, calculFileSize };\n\n//# sourceMappingURL=angular-material-components-file-input.js.map","import { FOUom } from \"../../../group-parameter-mapping/masters/fouom\";\r\nimport { VitalParameters } from \"../../../group-parameter-mapping/masters/vital-parameter\";\r\nimport { Groups } from \"../../../master/group-master/masters/groups\";\r\nimport { Visit } from \"../../../encounter/masters/visit\";\r\nimport { Department } from \"../../../master/department/masters/department\";\r\nimport { LookupEntity } from \"../../../master/lookup-module/masters/lookup-entity\";\r\nimport { BaseEntity } from \"../../../master/masters/base-entity\";\r\nimport { Branch } from \"../../../master/service-center/masters/branch\";\r\nimport { ServiceCenter } from \"../../../master/service-center/masters/service-center\";\r\nimport { Patient } from \"../../../patient/master/patient\";\r\n\r\nexport class VitalSign extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\t\r\n\tcontrolType: LookupEntity =  new LookupEntity;\r\n\tcurrentValue: number;\r\n\tdepartment : Department = new Department;\r\n\tdistinguisherId: number;\r\n\tenteredDateTime= new Date();\r\n\tgroup: Groups  = new Groups();\r\n\tlocation: ServiceCenter = new ServiceCenter;\r\n\tlowerRefRange: number;\r\n\tparameter : VitalParameters = new VitalParameters();\r\n\tparameterValue: string;\r\n\tpatient : Patient = new Patient;\r\n\tremarks: string;\r\n\tsite: Branch = new Branch;\r\n\tuom: FOUom  = new FOUom();\r\n\tupperRefRange: number;\r\n\tvisit: Visit = new Visit();\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { MainService } from '../../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VitalSignService {\r\n    \r\n    \n\tbaseUrl =\"\"\n  constructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n  \tgetVitalSignList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/vitalSign/get`)\r\n\t}\r\n\tgetVitalSignById(id):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/vitalSign/getById/${id}`)\r\n\t}\r\n\tgetVitalSignListByPatientId(patientId: any):any {\r\n       return this.http.get(`${this.baseUrl}/vitalSign/getByPatientId/${patientId}`)\r\n    }\r\n\t\r\n\tgetVitalSignByGroupId(groupId: number):any {\r\n        return this.http.get(`${this.baseUrl}/vitalSign/getByGroupId/${groupId}`)\r\n    }\r\n\tcreateVitalSign(vitalSign):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/vitalSign/add`,vitalSign)\r\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VitalSignComponent } from './vital-sign.component';\r\n\nconst routes: Routes = [\n\t{path: '', component: VitalSignComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VitalSignRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ParameterToGrpMap } from '../../group-parameter-mapping/masters/group-parameter-mapping';\r\nimport { GroupParameterMappinginService } from '../../group-parameter-mapping/services/group-parameter-mappingin.service';\r\nimport { Patient } from '../../patient/master/patient';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { VitalSign } from './master/vital-sign';\r\nimport { VitalSignService } from './services/vital-sign.service';\r\n\r\n@Component({\r\n  selector: 'app-vital-sign',\r\n  templateUrl: './vital-sign.component.html',\r\n  styleUrls: ['./vital-sign.component.css'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class VitalSignComponent implements OnInit {\r\n\tvitalSignList: Array<VitalSign> = new Array<VitalSign>();\r\n\tvitalSign: VitalSign = new VitalSign;\r\n\tvitalParameterGroupMappingList: Array<ParameterToGrpMap> = [];\r\n\tcurrentValue: Array<number> = new Array<number>();\r\n\tbmi: any = null;\r\n\tgcs: any = null;\r\n\tmap:any = null;\r\n\tpatient = new Patient();\r\n\tgroupId : number;\r\n\t\r\n\t@Input() isFromClinicalDetails : boolean = false;\r\n  constructor(\r\n\tprivate vitalSignService: VitalSignService,\r\n  \tprivate groupParameterMappingService: GroupParameterMappinginService,\r\n  \tprivate dialog: MatDialog\r\n  \t) { }\r\n\r\n  ngOnInit(): void {\r\n\tthis.reloadData();\r\n  }\r\n  ngOnLoad(){\r\n\t\r\n\t}\r\n  \treloadData(){\r\n\t\tthis.patient = JSON.parse(localStorage.getItem('patient'));\r\n\t\r\n\t\tthis.vitalSignService.getVitalSignList().subscribe(data =>{\r\n\t\t\tconsole.log(data,\"VitalSignList\");\r\n\t\t\tthis.vitalSignList = data;\r\n\t\t})\r\n\t\tthis.groupParameterMappingService.getGroupParameterMappingList().subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.vitalParameterGroupMappingList = [];\r\n\t\t\t//console.log(document.getElementById('vitalSign').click())\r\n\t\t})\r\n\t\tconsole.log(window.document.getElementById('vitalSign').click())\r\n\t}\r\n\tonSubmit(vitalSignForm){\r\n\t\t\r\n\t}\r\n\tshowVitalParameterGroupListByGroupId(num){\r\n\t\tthis.groupId = num;\r\n\t\tthis.groupParameterMappingService.getGroupParameterMappingByGroupId(num).subscribe(data =>{\r\n\t\t\tthis.vitalParameterGroupMappingList = data;\r\n\t\t})\r\n\r\n\t}\r\n\tcalculateBMI(vitalSign){\r\n\t\t//console.log(vitalSign.parameter.formula)\r\n\t\tif(vitalSign.parameter.parameterId == 1){\r\n\t\t\tlet formula = vitalSign.parameter.formula;\r\n\t\t\tvar signs = formula.split(\"_\");\r\n\t\t\tvar weight = signs[1];\r\n\t\t\tvar height = signs[3];\r\n\t\t\tvar finalWeight;\r\n\t\t\tlet finalHeight;\r\n\t\t\t//let weight,height= formula.split(\"_\");\r\n\t\t\t//console.log(weight,height)\r\n\t\t\tthis.vitalParameterGroupMappingList.forEach((value,index) =>{\r\n\t\t\t\tif(value.parameter.parameterId == weight){\r\n\t\t\t\t\tfinalWeight = this.currentValue[index];\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == height){\r\n\t\t\t\t\tfinalHeight = this.currentValue[index]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.bmi = (finalWeight/(finalHeight*finalHeight))*10000;\r\n\t\t\tthis.bmi = this.bmi.toFixed(2);\r\n\t\t\t//console.log(this.bmi)\r\n\t\t}\r\n\t\telse if(vitalSign.parameter.parameterId == 2){\r\n\t\t\tconsole.log(vitalSign.parameter.formula);\r\n\t\t}\r\n\t\telse if(vitalSign.parameter.parameterId == 3){\r\n\t\t\tthis.map = 0;\r\n\t\t\tlet formula = vitalSign.parameter.formula;\r\n\t\t\tvar signs = formula.split(\"_\");\r\n\t\t\t//console.log(signs)\r\n\t\t\tvar sys = signs[0];\r\n\t\t\tvar dys = signs[2];\r\n\t\t\tvar finalSys :number =0;\r\n\t\t\tvar finalDys:number = 0;\r\n\t\t\tthis.vitalParameterGroupMappingList.forEach((value,index) =>{\r\n\t\t\t\tif(value.parameter.parameterId == sys){\r\n\t\t\t\t\tfinalSys = Number(this.currentValue[index]);\r\n\t\t\t\t\t//console.log(finalSys)\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == dys){\r\n\t\t\t\t\tfinalDys = Number(this.currentValue[index]);\r\n\t\t\t\t\t//console.log(finalDys+finalSys)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.map = (finalSys + 2*(finalDys))/3\r\n\t\t\tthis.map = this.map.toFixed(2)\r\n\t\t\t//console.log(this.map);\r\n\t\t}\r\n\t\telse if(vitalSign.parameter.parameterId == 4){\r\n\t\t\tlet formula = vitalSign.parameter.formula;\r\n\t\t\tvar signs = formula.split(\"_\");\r\n\t\t\tconsole.log(signs)\r\n\t\t\tvar e = signs[0];\r\n\t\t\tvar v = signs[2];\r\n\t\t\tvar m = signs[4]\r\n\t\t\tvar finalE;\r\n\t\t\tvar finalV;\r\n\t\t\tvar finalM\r\n\t\t\tthis.vitalParameterGroupMappingList.forEach((value,index) =>{\r\n\t\t\t\tif(value.parameter.parameterId == e){\r\n\t\t\t\t\tfinalE = Number(this.currentValue[index]);\r\n\t\t\t\t\tconsole.log(finalE)\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == v){\r\n\t\t\t\t\tfinalV = Number(this.currentValue[index]);\r\n\t\t\t\t\tconsole.log(finalV)\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == m){\r\n\t\t\t\t\tfinalM = Number(this.currentValue[index]);\r\n\t\t\t\t\tconsole.log(finalM)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.gcs = finalE+finalV+finalM;\r\n\t\t\tconsole.log(this.gcs)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tgotoBack(){\r\n\t\thistory.back();\r\n\t}\r\n\tsaveVitalSign(vitalParameterGroupMappingList){\r\n\t\tvitalParameterGroupMappingList.forEach((data,index) =>{\r\n\t\t\tlet vitalSign = new VitalSign();\r\n\t\t\tvitalSign.group = data.group;\r\n\t\t\tvitalSign.parameter = data.parameter;\r\n\t\t\tvitalSign.currentValue=this.currentValue[index];\r\n\t\t\tif(this.currentValue[index] == null){\r\n\t\t\t\tif(data.parameter.parameterId  == 1){\r\n\t\t\t\t\tvitalSign.currentValue = this.bmi;\r\n\t\t\t\t}\r\n\t\t\t\telse if(data.parameter.parameterId  == 3){\r\n\t\t\t\t\tvitalSign.currentValue = this.map;\r\n\t\t\t\t}\r\n\t\t\t\telse if(data.parameter.parameterId  == 4){\r\n\t\t\t\t\tvitalSign.currentValue = this.gcs;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvitalSign.enteredDateTime = new Date();\r\n\t\t\tlet ref = data.parameter.referenceRange.split(\"-\");\r\n\t\t\tvitalSign.lowerRefRange = ref[0];\r\n\t\t\tvitalSign.upperRefRange = ref[1];\r\n\t\t\tvitalSign.controlType = data.parameter.controlType;\r\n\t\t\tvitalSign.department = null\r\n\t\t\tvitalSign.location = null;\r\n\t\t\tvitalSign.patient = this.patient;\r\n\t\t\tvitalSign.site = null;\r\n\t\t\tvitalSign.visit = null;\r\n\t\t\tvitalSign.uom = data.parameter.uom;\r\n\t\t\tthis.storeVitalSign(vitalSign);\r\n\t\t})\r\n\t}\r\n\tstoreVitalSign(vitalSign){\r\n\t\tthis.vitalSignService.createVitalSign(vitalSign).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\talert(\"Vital Sign Updated Successfully\")\r\n\t\t})\r\n\t}\r\n\t/*showFilePath(event){\r\n\t\tconsole.log(event)\r\n\t\tconsole.log(event.target)\r\n\t\tconsole.log(event.target.value)\r\n\t\tconsole.log(event.target.files[0].path)\r\n\t}*/\r\n\tshowVitalSignList(popUp){\r\n\t\tthis.vitalSignService.getVitalSignByGroupId(this.groupId).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.vitalSignList = data;\r\n\t\t})\r\n\t\t/*this.vitalSignService.getVitalSignListByPatientId(this.patient.mrn).subscribe(data =>{\r\n\t\t\t\r\n\t\t})*/\r\n\t\tthis.dialog.open(popUp);\r\n\t}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VitalSignRoutingModule } from './vital-sign-routing.module';\r\nimport { VitalSignComponent } from './vital-sign.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../material/material.module';\r\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VitalSignComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    VitalSignRoutingModule,\r\n    PageHeaderModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    MaterialModule,\r\n    NgxMatFileInputModule\r\n  ],\r\n  exports: [\r\n\tVitalSignComponent\r\n]\r\n})\r\nexport class VitalSignModule { }\r\n","import { BaseEntity } from \"../../master/masters/base-entity\";\r\n\r\nexport class FOUOMType extends BaseEntity{\r\n\tid: number;\r\n\tdescription: string;\r\n\tactive : boolean = true;\r\n\tname: string;\r\n}","import { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { FOUOMType } from \"./fouom-type\";\r\n\r\nexport class FOUom extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\tcode: string;\r\n\tname: string;\r\n\tconversionFactor: number;\r\n\tnoOfDecimalPlaces: number;\r\n\tuomType: FOUOMType = new FOUOMType ;\r\n\tactive : boolean = true;\r\n\tderived: boolean  = false;\r\n\tbaseUOMId : string;\r\n\t\r\n}","import { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { FOUom } from \"./fouom\";\r\n\r\nexport class VitalParameters extends BaseEntity {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tparameterId: number;\r\n\tparameterCode: string;\r\n\tparameterName: string\r\n\tvisitTypeApplicable: LookupEntity = new LookupEntity;\r\n\tdataType: LookupEntity = new LookupEntity;\r\n\tcontrolType: LookupEntity = new LookupEntity;\r\n\tisChartRequired: boolean;\r\n\tformula: string;\r\n\tactive: boolean;\r\n\tuom: FOUom = new FOUom;\r\n\tgenderWise : boolean  = false;\r\n\tageWise: boolean = false;\r\n\tparameterOrder: number;\r\n\treferenceRange: string;\r\n\t\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { MainService } from '../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupParameterMappinginService {\n\tbaseUrl = \"\"\n  constructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl(); }\r\n\tgetGroupParameterMappingList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/parameterToGrpMap/get`);\r\n\t}\r\n\tgetGroupParameterMappingById(id):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/parameterToGrpMap/getById/${id}`);\r\n\t}\r\n\tgetGroupParameterMappingByGroupId(id):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/parameterToGrpMap/getByGroupId/${id}`)\r\n\t}\r\n\tcreateGroupParameterMapping(groupParameterMapping):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/parameterToGrpMap/add`,groupParameterMapping);\r\n\t}\r\n\tdeleteGroupParameterMapping(id):any{\r\n\t\treturn this.http.delete(`${this.baseUrl}/parameterToGrpMap/delete/${id}`)\r\n\t}\n}\n","import { BaseEntity } from \"../../masters/base-entity\";\r\n\r\nexport class GroupType extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\tgroupTypeId: number;\r\n\tgroupTypeName: string;\r\n\tactive: boolean;\r\n\tlevel: number;\r\n\t\r\n}","import { BaseEntity } from \"../../masters/base-entity\";\r\nimport { GroupType } from \"./group-type\";\r\n\r\nexport class Groups extends BaseEntity{\r\n\tgroupId : number;\r\n\tgroupName: string;\r\n\tdescription: string;\r\n\tgroupType : GroupType = new GroupType;\r\n\tactive: boolean;\r\n\tmapGroupId: number;\r\n\tparentGroupPath: string;\r\n\tsortOrder: number;\r\n\topSalesAccount: number;\r\n\topDiscountAccount: number;\r\n\tipSalesAccount: number;\r\n\tipDiscountAccount: number;\r\n\tserviceCodeType: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aXRhbC1zaWduLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\r\\n<div [@routerTransition] *ngIf = \\\"!isFromClinicalDetails\\\">\\r\\n\\t<app-page-header [mainhead]=\\\"'DoctorsWorkBench'\\\"\\r\\n\\t\\t[mainheadLink]=\\\"'/doctorsWorkbench'\\\" [heading]=\\\"'Vital Sign'\\\"\\r\\n\\t\\t[icon]=\\\"'fa-cog'\\\"></app-page-header>\\r\\n</div>\\r\\n<div class=\\\"card \\\">\\r\\n\\t<div class=\\\"card-head\\\">\\r\\n\\t\\t<nav class=\\\"navbar  bg-dark text-white\\\">\\r\\n\\t\\t\\t<h3>Vital Sign</h3>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<img src =\\\"./assets/images/close.ico\\\" matTooltip = \\\"Back\\\" style =\\\"height:35px;width:35px;\\\" (click) = \\\"gotoBack()\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</nav>\\r\\n\\t</div>\\r\\n<!-- \\t<mat-form-field>\\r\\n   <ngx-mat-file-input (change) = \\\"showFilePath($event) [accept] = true\\\">\\r\\n   </ngx-mat-file-input>\\r\\n</mat-form-field>\\r\\n\\t<input matInput type =\\\"File\\\" (change) = \\\"showFilePath($event)\\\"> -->\\r\\n\\t<div class='card-body'>\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-2 \\\">\\r\\n\\t\\t\\t\\t<div class=\\\"card pt-0\\\">\\r\\n\\t\\t\\t\\t\\t<ul ngbNav #nav=\\\"ngbNav\\\" class=\\\"nav-pills\\\" orientation=\\\"vertical\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"vitalsign\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a ngbNavLink id = \\\"vitalSign\\\" (click) = \\\"showVitalParameterGroupListByGroupId(1010)\\\"> Vital Sign </a> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template ngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card  \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Vital Sign</h2>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" class =\\\"btn btn-sm btn-warning\\\" (click) = \\\"showVitalSignList(vitalSignPopup)\\\">View All</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class =\\\"btn btn-sm btn-warning\\\" (click) = \\\"saveVitalSign(vitalParameterGroupMappingList)\\\">Save</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table  table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let vitalsign of vitalParameterGroupMappingList; let i =index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\">{{vitalsign.parameter.parameterName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngIf = \\\"vitalsign.parameter.controlType.lookupId != 192; else showImg\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control  \\\"  [(ngModel)] = \\\"currentValue[i]\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #showImg>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of BMI -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\" vitalsign.parameter.parameterId == 1\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Height and Weight first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of Test -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of MAP -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Systolic BP and Diastolic BP \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map!=null && map != 'NaN'\\\">{{map}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of GCS -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter E,V and M first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs!=null && gcs != 'NaN'\\\">{{gcs}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src = \\\"./assets/images/calculator.png\\\" style = \\\"height:25px;width: 25px;\\\" (click) = \\\"calculateBMI(vitalsign)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\"><label *ngIf =\\\"vitalsign.parameter.uom != null\\\">{{vitalsign.parameter.uom.name}}</label></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\">{{vitalsign.parameter.referenceRange}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-4\\\"><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"  /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"bloodsugar\\\"><a ngbNavLink (click) = \\\"showVitalParameterGroupListByGroupId(89)\\\"> Blood Sugarssss</a> <ng-template\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Blood Sugar</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" class =\\\"btn btn-sm btn-warning\\\">View All</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class =\\\"btn btn-sm btn-warning\\\">Save</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table  table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let vitalsign of vitalParameterGroupMappingList; let i =index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"height: 10px; width: 10px\\\">{{vitalsign.parameter.parameterName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngIf = \\\"vitalsign.parameter.controlType.lookupId != 192; else showImg\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)] = \\\"currentValue[i]\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #showImg>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of BMI -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\" vitalsign.parameter.parameterId == 1\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Height and Weight first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of Test -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of MAP -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Systolic BP and Diastolic BP \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map!=null && map != 'NaN'\\\">{{map}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of GCS -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter E,V and M first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs!=null && gcs != 'NaN'\\\">{{gcs}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src = \\\"./assets/images/calculator.png\\\" style = \\\"height:25px;width: 25px;\\\" (click) = \\\"calculateBMI(vitalsign)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><label *ngIf =\\\"vitalsign.parameter.uom != null\\\">{{vitalsign.parameter.uom.name}}</label></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{vitalsign.parameter.referenceRange}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"  /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template></li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"painscale\\\"><a ngbNavLink>Pain Scale</a> <ng-template\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white  justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Pain Scale</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"height: 10px; width: 10px\\\">PainScale</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row p-1 m-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" size=5 class=\\\"col-md-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" size=\\\"3\\\" [(ngModel)]=\\\"painScaleValue\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row p-1 m-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale1.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('0')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>0</label> <label> No Hurt</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale2.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('2')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>2</label> <label> Hurts Little Bit</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale3.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('4')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>4</label> <label>Hurts Little More</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale4.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('6')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>6</label> <label>Hurts Even More</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale5.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('8')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>8</label> <label>Hurts Whole Lot</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale6.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('10')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>10</label> <label>Hurts Worst</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row p-1 m-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table border border-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td colspan=2>Selected Value : &nbsp;{{painValue}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>0-0 : No Pain</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>1-2 : Mid Pain</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>3-4 : Moderate</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>5-6 : Above Moderate</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>7-8 : Severe</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>9-10 : Worst</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>0.0 - 10.0</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr> -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template></li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"gcs\\\"><a ngbNavLink>GCS</a> <ng-template\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\" border=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white  justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>GCS</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <tr *ngFor=\\\"let gcs of gcsList\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"height: 10px; width: 10px\\\">{{gcs.vitalSign}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" [(ngModel)]=\\\"gcs.currentValue\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{gcs.unit}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{gcs.referenceRange}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" [(ngModel)]=\\\"gcs.remarks\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-10 \\r\\n\\t\\t\\t+\\\">\\r\\n\\t\\t\\t\\t<div [ngbNavOutlet]=\\\"nav\\\" ></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #vitalSignPopup>\\r\\n\\t<div class =\\\"card border\\\">\\r\\n\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t<h3>Vital Sign List</h3>\\r\\n\\t\\t</nav>\\r\\n\\t\\t<div class =\\\"card-body\\\">\\r\\n\\t\\t\\t<table class =\\\"table table-responsive\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr class =\\\"bg-secondary\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th class =\\\"border border-dark\\\">Data/Time-></th>\\r\\n\\t\\t\\t\\t\\t\\t<th *ngFor =\\\"let vitalSig of vitalSignList;let i = index\\\" class =\\\"border border-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{vitalSig.parameter.parameterName}}\\r\\n\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t<tr >\\r\\n\\t\\t\\t\\t\\t\\t<td class =\\\"border border-dark\\\">Date/Time</td>\\r\\n\\t\\t\\t\\t\\t\\t<td class =\\\"border border-dark\\\" *ngFor =\\\"let vitalSig of vitalSignList;let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{vitalSig.currentValue}}\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t<!--  <td *ngFor =\\\"let vitalSign of vitalSignList\\\">{{vitalSign.parameter.parameterName}}</td>-->\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</ng-template>\";"],"sourceRoot":"webpack:///"}