{"version":3,"sources":["./src/app/appointment/masters/appointment.ts","./src/app/appointment/services/appointment.service.ts","./src/app/encounter/masters/consultant.ts","./src/app/encounter/masters/encounter.ts","./src/app/encounter/masters/visit.ts","./src/app/encounter/services/consultant.service.ts","./src/app/encounter/services/encounter.service.ts"],"names":[],"mappings":"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","file":"src_app_appointment_services_appointment_service_ts-src_app_encounter_masters_encounter_ts-sr-6b1384-es2015.js","sourcesContent":["import { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { Department } from \"../../master/department/masters/department\";\r\nimport { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { Branch } from \"../../master/service-center/masters/branch\";\r\nimport { Employee } from \"../../master/unit-master/masters/Employee\";\r\nimport { Unit } from \"../../master/unit-master/masters/unit\";\r\nimport { Patient } from \"../../patient/master/patient\";\r\n\r\n\r\nexport class Appointment extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tappointmentId: number;\r\n\tbranch: Branch = new Branch();\r\n\tdepartment :Department = new Department();\r\n\tunit: Unit = new Unit();\r\n\tdoctor: Employee = new Employee();\r\n\tpatient: Patient = new Patient();\r\n\tfromDate : Date = new Date();\r\n\ttoDate : Date = new Date();\r\n\tappointment : String = \"appointment\";\r\n\tappointmentDateTime: Date = new Date() ;\r\n\tappointmentStatus : LookupEntity;\r\n\tappointmentStatusType : LookupEntity;\r\n\tvisitDate: Date = new Date();\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MainService } from '../../main.service';\r\nimport { Appointment } from '../masters/appointment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n  baseUrl = \"\";\r\n  constructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n  getAppointmentTimeList(startTime,endTime,interval): any{\r\n\treturn this.http.get(`${this.baseUrl}/appointmentTimeList/${startTime}/${endTime}/${interval}`);\r\n}\r\n\tcreateAppointment(appointment): any{\r\n\t\treturn this.http.post(`${this.baseUrl}/appointment/add`,appointment);\r\n\t}\r\n\tgetAppointmentList(): any{\r\n\t\treturn this.http.get(`${this.baseUrl}/appointment/get`);\r\n\t}\r\n\t\r\n\tgetAppointmentListByFilter(selectedDate,doctorId,departmentId,branchId):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/appointmentList/${selectedDate}/${doctorId}/${departmentId}/${branchId}`)\r\n\t}\r\n\t\r\n\t\r\n\tupdateAppointment(appointmentId, appointment: Appointment):any{\r\n\t\treturn this.http.put(`${this.baseUrl}/appointment/update/${appointmentId}`,appointment);\r\n\t}\r\n\tdeleteAppointment(appointmentId): any{\r\n\t\treturn this.http.delete(`${this.baseUrl}/appointment/${appointmentId}`);\r\n\t}\r\n}\r\n","import { ServiceCenter } from \"../../master/service-center/masters/service-center\";\r\n\r\nexport class Consultant {\n\tconsultantId: number;\n\tserviceCenter: ServiceCenter = new ServiceCenter;\n\tconsultantName: string;\n\tfirstVisitFee: string;\n\tfollowupVisitFee: string;\n\testablishVisitFee: string;\n\t\n}\n","import { Appointment } from \"../../appointment/masters/appointment\";\r\nimport { Department } from \"../../master/department/masters/department\";\r\nimport { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { ServiceCenter } from \"../../master/service-center/masters/service-center\";\r\nimport { Patient } from \"../../patient/master/patient\";\r\nimport { Consultant } from \"./consultant\";\r\nimport { Visit } from \"./visit\";\r\n\r\nexport class Encounter {\n\tencounterId : number;\n\tdepartment: Department = new Department;\n\tserviceCenter: ServiceCenter = new ServiceCenter;\n\tconsultant: Consultant = new Consultant;\n\tprintCaseSheet: boolean;\n\tpaymentType: LookupEntity = new LookupEntity;\n\tbilling: LookupEntity = new LookupEntity;\n\tcomplaints: String;\n\twaitingPatientsForConsultation: Array<Patient>;\n\texpectedTimeForConsultation: Date = new Date();\n\tappointmentOrderedCptCode: String;\n\teligibilityNumber: String;\n\tconsultationCategory: String;\n\tconsultantType: LookupEntity = new LookupEntity;\n\tcptCode: String;\n\tmailSend: boolean;\n\tpatient: Patient = new Patient;\r\n\tencounterTime: Date = new Date();\r\n\tappointment : Appointment = new Appointment;\r\n\tencounterStatus : LookupEntity = new LookupEntity();\r\n\tencounterDate: Date = new Date();\r\n\tqueueNo: number;\r\n\tvisit: Visit = new Visit();\r\n\t\n}\n","import { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { Patient } from \"../../patient/master/patient\";\r\n\r\nexport class Visit{\r\n\tvisitId: number;\r\n\tpatientName: string;\r\n\tage: number;\r\n\tvisitStatus: string;\r\n\tisVisited: boolean;\r\n\tlastModifiedBy: number;\r\n\tvisitType: LookupEntity  = new LookupEntity();\r\n\tpatientCategory: LookupEntity = new LookupEntity();\r\n\tpaymentType : LookupEntity  = new LookupEntity;\r\n\tpatientStatus: LookupEntity = new LookupEntity;\r\n\tinsuredYesNo: boolean;\r\n\tpatient: Patient = new Patient;\r\n\tvisitDate: Date = new Date();\r\n\tpatientVisitId: string;\r\n\tvisitCleared: boolean;\r\n\tvisitClearanceRemarks: string;\r\n\tclearedBy: number;\r\n\tclearedDateTime: Date = new Date();\r\n\tisReceived: boolean;\r\n\tvisitPatientStatus: LookupEntity = new LookupEntity;\r\n\tmarkedForDischargeDate: Date = new Date();\r\n\tfollowUpVisit: boolean;\r\n\tweight: number;\r\n\tvalidDate: Date = new Date();\r\n\tencounterType : number;\r\n\tencounterStartType: number;\r\n\tencounterEndType: number;\r\n\t\r\n\t\r\n\t\r\n\t\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MainService } from '../../main.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsultantService {\r\n\tbaseUrl = \"\"\r\n  constructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n  getConsultantList(): any{\r\n\treturn this.http.get(`${this.baseUrl}/consultant/get`)\r\n}\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { MainService } from '../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncounterService {\r\n   \r\n\n private baseUrl = '';\n  constructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\n  getEncounter(): any {\n\treturn this.http.get(`${this.baseUrl}/encounter/get`);\n  }\n  CreateEncounter(encounter):any{\n\tconsole.error(encounter)\n\treturn this.http.post(`${this.baseUrl}/encounter/create`,encounter);\n}\r\n getEncounterByAppointment(appointment: any) {\r\n        return this.http.get(`${this.baseUrl}/encounter/getByAppointment`,appointment)\r\n    }\r\n   \r\n\tgetEncounterById(encounterId):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/encounter/getById/${encounterId}`)\r\n\t}\n}\n"],"sourceRoot":"webpack:///"}