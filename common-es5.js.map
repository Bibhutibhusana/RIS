{"version":3,"sources":["webpack:///src/app/Common-Security-Services/common-service.service.ts","webpack:///src/app/enterprise-user/masters/enterprise-user.ts","webpack:///src/app/enterprise-user/services/enterprise-user.service.ts","webpack:///src/app/layout/alert/alert.service.ts","webpack:///src/app/main.service.ts","webpack:///src/app/master/country-category/masters/country.ts","webpack:///src/app/master/department/masters/department.ts","webpack:///src/app/master/drug-generic/masters/age-group.ts","webpack:///src/app/master/drug-generic/masters/drug-dosages.ts","webpack:///src/app/master/drug-generic/masters/drug-generics.ts","webpack:///src/app/master/drug-generic/masters/frequency.ts","webpack:///src/app/master/drug-generic/masters/strength.ts","webpack:///src/app/master/drug-generic/services/drug-generic.service.ts","webpack:///src/app/master/item-master/masters/subBase-Entity.ts","webpack:///src/app/master/lookup-module/masters/lookup-entity.ts","webpack:///src/app/master/masters/base-entity.ts","webpack:///src/app/master/service-center/masters/branch.ts","webpack:///src/app/master/unit-master/masters/Employee.ts","webpack:///src/app/master/unit-master/masters/PrefixMaster.ts","webpack:///src/app/master/unit-master/masters/enterpriseUser.ts","webpack:///src/app/preferences/services/preference.service.ts"],"names":["CommonSecurityService","JSON","parse","localStorage","getItem","patient","setItem","stringify","removeItem","preferences","user","Injectable","providedIn","EnterpriseUser","globalProjectStore","globalStore","globalBranch","globalDepartment","globalServiceCenter","employee","Employee","userType","LookupEntity","pswModifiedDate","Date","isPswExpires","pswChangeReqd","SubBaseEntity","EnterpriseUserService","http","router","mainService","baseUrl","getBaseUrl","get","userId","userName","password","post","enterpriseUserId","enterpriseUser","put","formData","HttpClient","Router","MainService","AlertService","subject","Subject","keepAfterRouteChange","events","subscribe","event","NavigationStart","clear","asObservable","message","next","type","text","_baseUrl","Country","Department","site","Branch","AgeGroup","DrugDosages","ageGroupRefId","dosageFrequencyRefId","Frequency","doseUnitsRefId","doseTypesRefId","maxDoseUnitsRefId","drugFormRefId","DrugGenerics","dosageRefId","drugClassRefId","drugTapper","groups","Groups","genericDrugFormOfAdminDetails","Array","genericDrugRouteOfAdminDetails","genericStrengths","GenericStrength","drgDosages","DrugGenericService","drugGenerics","drugAvailableForms","BaseEntity","dob","employeeStatus","gender","maritalStatus","empNationality","nationality","empCategory","empEmployeementStatus","department","bloodGroup","empHealthCardValidUpto","empDesignation","branch","validDate","empPrefix","PrefixMaster","slot","PreferencesService","preferencesId"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { EnterpriseUser } from '../enterprise-user/masters/enterprise-user';\r\nimport { User } from '../login/master/user';\r\nimport { Patient } from '../patient/master/patient';\r\nimport { Preferences } from '../preferences/masters/preferences';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonSecurityService\r\n {\r\n\t\r\n  constructor() { }\r\n  \r\n  /************ Patient services goes here **************************************************** */\r\n\tgetPatient():any{\r\n\t\treturn JSON.parse(localStorage.getItem('patient'))\r\n\t}\r\n\tsetPatient(patient:Patient){\r\n\t\tlocalStorage.setItem('patient',JSON.stringify(patient));\r\n\t}\r\n\tpublic cleanPatient(){\r\n\t\tlocalStorage.removeItem('patient');\r\n\t}\r\n\t\r\n\t/****************************************  Preferences Services Goes here **************** */\r\n\t\r\n\tpublic getPreferences():any{\r\n\t\treturn JSON.parse(localStorage.getItem('preferences'));\r\n\t}\r\n\tpublic setPreferences(preferences: Preferences){\r\n\t\tif(preferences){\r\n\t\t\tlocalStorage.setItem('preferences',JSON.stringify(preferences));\t\t\t\r\n\t\t}\r\n\t}\r\n\tpublic cleanPreferences(){\r\n\t\tlocalStorage.removeItem('preferences');\r\n\t}\r\n\t\r\n\t/*******************************************  User Services Goes here ************************************/\r\n\tpublic setUser(user:EnterpriseUser){\r\n\t\tif(user){\r\n\t\t\tlocalStorage.setItem('user',JSON.stringify(user));\r\n\t\t}\r\n\t}\r\n\tpublic getUser():any{\r\n\t\treturn JSON.parse(localStorage.getItem('user'));\r\n\t}\r\n\tpublic cleanUser(){\r\n\t\tlocalStorage.removeItem('user');\r\n\t}\r\n}\r\n","\r\nimport { Employee } from \"../../master/unit-master/masters/Employee\";\r\nimport { SubBaseEntity } from \"../../master/item-master/masters/subBase-Entity\";\r\nimport { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\n\r\nexport class EnterpriseUser extends SubBaseEntity {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\t/*//userCode: string;\r\n\t//branch : Branch  = new Branch();\r\n\t//department: Department = new Department;\r\n\t//location: Location = new Location();\r\n\t//globalPurOrg: boolean;\r\n\t//timeZone: string;\r\n\t//priveleges : List<String> ;*/\r\n\t\r\n\tuserName: string;\r\n\tuserFullName: string;\r\n\tpassword: string;\r\n\tisActive:boolean;\r\n\tglobalProject: boolean ;\r\n\tglobalProjectStore :boolean = false;\r\n\tglobalStore: boolean = false;\r\n\tglobalBranch: boolean = false;\r\n\tglobalDepartment: boolean  = false;\r\n\tglobalServiceCenter: boolean = false;\r\n\temailId: string;\r\n\temployeeNo:number;\r\n\temployee: Employee =new Employee();\r\n\tuserType: LookupEntity = new LookupEntity();\r\n\tpswModifiedDate = new Date();\r\n\tmaxFailedLoginAttempt: number;\r\n\tisPswExpires: boolean = false;\r\n\tpswExpiryDays: number;\r\n\tpswChangeReqd: boolean = false;\r\n\timageName: string;\r\n\timage: string;\r\n\tremarks: string;\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { MainService } from '../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnterpriseUserService {\r\n   \r\n    \n\tbaseUrl = \"\"\n  constructor(private http:HttpClient,private router: Router,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n\tgetEnterpriseUserList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/enterpriseUser/get`)\r\n\t}\r\n\tgetEnterpriseUserById(userId):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/enterpriseUser/getById/${userId}`);\r\n\t}\r\n\tgetEnterpriseUserByUserName(userName,password):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/enterpriseUser/getByUserName/${userName}`,password);\r\n\t\t\r\n\t}\r\n\tupdateEnterpriseUser(enterpriseUserId,enterpriseUser):any{\r\n\t\treturn this.http.put(`${this.baseUrl}/enterpriseUser/update/${enterpriseUserId}`,enterpriseUser)\r\n\t}\r\n\tcreateEnterpriseUser(enterpriseUser):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/enterpriseUser/add`,enterpriseUser)\r\n\t\t\r\n\t}\r\n\t createEnterpriseUserWithImage(formData):any {\r\n        return this.http.post(`${this.baseUrl}/enterpriseUser/addWithImage`,formData)\r\n    }\r\n    createEnterpriseUserWithImageInServer(formData):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/enterpriseUser/addWithImageInServer`,formData)\r\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private subject = new Subject<any>();\n    private keepAfterRouteChange = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterRouteChange) {\n                    // only keep for a single route change\n                    this.keepAfterRouteChange = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    getAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterRouteChange = false) {\n        this.keepAfterRouteChange = keepAfterRouteChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    clear() {\n        // clear by calling subject.next() without parameters\n        this.subject.next();\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\tprivate _baseUrl = \"http://localhost:8080/springboot/api/v1\"\n  constructor() { }\n  getBaseUrl():any{\n\treturn this._baseUrl;\n}\n}\n","export class Country {\n\tcountryId: number;\n\tcountryName: String;\n\tcountryCode: String;\n\tcountryPhoneCode: boolean;\n\tactive: boolean;\n\tidentification: String;\n}\n","import { Branch } from \"../../service-center/masters/branch\";\r\n\r\n\r\n\r\nexport class Department {\n\tdepartmentId :number;\n\tdepartmentCode :string;\n\tdepartmentName :string;\n\tdescription : string;\n\tstartedOn : Date;\n\tdepartmentTypeId : number;\n\thod : string;\n\tactive : boolean;\n\tprofitCenterAccode : string;\n\tcostCenterAccode : string;\n\tmalaffiCode : string;\n\timageName : string;\n\tcreatedBy:string;\n\tcreatedDate: Date;\n\tupdatedBy : string;\n\tupdatedDatetime: Date; \n\tversionNo: number;\n\tsite: Branch = new Branch;\n}\n","export class AgeGroup {\r\n\tageGroupId : number;\r\n\tageGroupName : string;\r\n\tageFrom : number;\r\n\tageTo : number;\r\n\tisActive : Boolean;\r\n}","\r\nimport { LookupEntity } from \"../../lookup-module/masters/lookup-entity\";\r\nimport { AgeGroup } from \"./age-group\";\r\nimport { Frequency } from \"./frequency\";\r\n\r\n\r\nexport class DrugDosages {\r\n\tdrugDosageDetailId : number;\r\n\tageGroupRefId: AgeGroup = new AgeGroup();\r\n\tweight : number;\r\n\tquantity : number;\r\n\tdosageFrequencyRefId : Frequency = new Frequency();\r\n\tminDays : number;\r\n\tmaxDays : number;\r\n\tisApplicable : Boolean;\r\n\tdoseUnitsRefId : LookupEntity = new LookupEntity();\r\n\tdoseTypesRefId : LookupEntity = new LookupEntity();\r\n\tmaxDose : number;\r\n\tmaxDoseUnitsRefId : LookupEntity = new LookupEntity();\r\n\tremarks : string;\r\n\tisActive : Boolean;\r\n\tdrugFormRefId : LookupEntity = new LookupEntity();\r\n\t\r\n}","\r\nimport { Groups } from \"../../group-master/masters/groups\";\r\nimport { LookupEntity } from \"../../lookup-module/masters/lookup-entity\";\r\n\r\nimport { DrugAvailableForms } from \"./drug-available-forms\";\r\nimport { DrugDosages } from \"./drug-dosages\";\r\nimport { GenericDrugFormOfAdminDetails } from \"./generic-drug-form-of-admin-details\";\r\nimport { GenericDrugRouteOfAdminDetails } from \"./generic-drug-route-of-admin-details\";\r\nimport { GenericStrength } from \"./strength\";\r\n\r\n\r\nexport class DrugGenerics{\r\n\tdrugGenericCode : string;\r\n\tdrugGenericName : string;\r\n\tnumantics : string;\r\n\tquickReferencees : string;\r\n\tdosageRefId : LookupEntity = new LookupEntity();\r\n\tdrugClassRefId : LookupEntity = new LookupEntity();\r\n\tdrugTapper : LookupEntity = new LookupEntity();\r\n\tformulaItem : Boolean;\r\n\tisActive: Boolean;\r\n\tauthorizationIndicator: Boolean;\r\n\tdosage: Boolean;\r\n\tgroups : Groups = new Groups();\r\n\taffectsPsychoMotor: Boolean;\r\n\taffectsBreastFeed: Boolean;\r\n\taffectsByAlchohol: Boolean;\r\n\taffectsPregnency: Boolean;\r\n\tdiscolorationurine: Boolean;\r\n\taffectsLabResults: Boolean;\r\n\tkidneyFailure: Boolean;\r\n\theartFailure: Boolean;\r\n\tliverFailure: Boolean;\r\n\tcontraIndications: string;\r\n\tonsetofEffect: string;\r\n\toverdosageMax: string;\r\n\tdurationOfAction: string;\r\n\tadverseEffects: string;\r\n\tindications: string;\r\n\tmechanismOfAction: string;\r\n\tsummary : string;\r\n\tgenericDrugFormOfAdminDetails : Array<GenericDrugFormOfAdminDetails> = new Array<GenericDrugFormOfAdminDetails>();\r\n\tgenericDrugRouteOfAdminDetails : Array<GenericDrugRouteOfAdminDetails> = new Array<GenericDrugRouteOfAdminDetails>();\r\n\t//drugRisks : DrugRiskDetails = new DrugRiskDetails();\r\n\tdrgAvailableForms : Array<DrugAvailableForms>;\r\n\tgenericStrengths : GenericStrength = new GenericStrength();\r\n\tdrgDosages : DrugDosages = new DrugDosages(); \r\n\tisAntibiotic : Boolean;\r\n\tisRestrictedDrug : Boolean;\r\n\tisNarcotics : Boolean;\r\n\tcontrolledDrug : Boolean;\r\n\tsemiControlledDrug : Boolean;\r\n\tcimsRef : string;\r\n\tdrugGeneric : Boolean;\r\n\t\r\n}","export class Frequency {\r\n\tfrequencyId : number;\r\n\tfrequencyCode : string;\r\n\tfrequencyName : string;\r\n\tfrequencyValue :number;\r\n\tquantityCalcTableFlag : Boolean;\r\n\tremarks : string;\r\n\tisActive : Boolean;\r\n\tfrequencyDesc  : string;\r\n\tfrequencyType : number;\r\n\tcustom : Boolean;\r\n\torderFrequency : number;\r\n}","export class GenericStrength {\r\n\tgenericStrengthId : number;\r\n\tstrength : string;\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MainService } from '../../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrugGenericService {\n\t//private baseUrl = 'http://localhost:8080/springboot/api/v1';\n\tbaseUrl='';\n  constructor(private http : HttpClient, private mainService : MainService) { \n\tthis.baseUrl= this.mainService.getBaseUrl();\n}\n\t\n\tgetdrugGenerics():Observable<any>{\n\t\treturn this.http.get(`${this.baseUrl}/drugGenerics/get`);\n\t}\n\t\n\tcreateDrugGenerics(drugGenerics):Observable<any>{\n\t\treturn this.http.post(`${this.baseUrl}/drugGenerics/add`,drugGenerics);\n\t}\n\t\n\tcreateDrugAvailableForms(drugAvailableForms): Observable<any>{\n\t\treturn this.http.post(`${this.baseUrl}/createDrugAvailForms/add`,drugAvailableForms)\n\t}\n\t\n}\n","export class SubBaseEntity{\r\n\t\r\n}","import { BaseEntity } from \"../../masters/base-entity\";\r\nimport { LookupCategory } from \"./lookup-category\";\r\n\r\nexport class LookupEntity  extends BaseEntity{\n\tlookupId : number;\n\tlookupCode : string;\n\tlookupValue : string;\n\tdescription : string;\n\tactive : boolean ;\n\torderBy: number;\n\tcategory: LookupCategory;\r\n\t\r\n\tconstructor(){\r\n        super();\r\n\t\t\r\n\t}\r\n}\n","\texport class BaseEntity {\r\n\t\tcreatedBy : number;\r\n\t\tcreatedDate: Date;\r\n\t\tupdatedBy : number ;\r\n\t\tupdatedDate : Date;\r\n\t\tversionNo : number;\t\r\n\t}","import { BaseEntity } from \"../../masters/base-entity\";\r\nimport { Department } from \"../../department/masters/department\";\r\n\r\nexport class Branch extends BaseEntity{\n\tid: number;\n\tbranchName : string;\n\tbranchCode: string;\n\tdescription:string;\n\tbranchId:number;\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\n}\n","\r\nimport { Country } from \"../../country-category/masters/country\";\r\nimport { Department } from \"../../department/masters/department\";\r\nimport { LookupEntity } from \"../../lookup-module/masters/lookup-entity\";\r\nimport { BaseEntity } from \"../../masters/base-entity\";\r\nimport { Branch } from \"../../service-center/masters/branch\";\r\nimport { EmployeeContactDetails } from \"./EmployeeContactDetails\";\r\nimport { EmployeeDependent } from \"./employeeDependent\";\r\nimport { EmployeeQualification } from \"./employeeQualification\";\r\nimport { Employment } from \"./Employment\";\r\nimport { EnterpriseUser } from \"./enterpriseUser\";\r\nimport { PrefixMaster } from \"./PrefixMaster\";\r\n\r\nexport class Employee extends BaseEntity{\r\n\temployeeId : number;\r\n\temployeeNo : string;\r\n\tfirstName: string;\r\n\tmiddleName: string;\r\n\tlastName: string;\r\n\taliasName: string;\r\n\tfatherName: string;\r\n\tdob: Date  = new Date();\r\n\temployeeStatus :LookupEntity  = new LookupEntity;\r\n\tgender :LookupEntity  = new LookupEntity;\r\n\tmaritalStatus :LookupEntity  = new LookupEntity();\r\n\tempNationality :LookupEntity  = new LookupEntity();\r\n\tnationality : Country = new Country;\r\n\tempCategory :LookupEntity  = new LookupEntity();\r\n\tempEmployeementStatus :LookupEntity  = new LookupEntity();\r\n\tdepartment :Department  = new Department();\r\n\tbloodGroup :LookupEntity  = new LookupEntity();\r\n\tempHealthCardValidUpto : Date = new Date;\r\n\tempDesignation : LookupEntity  = new LookupEntity();\r\n\tempdependent: Array<EmployeeDependent>;\r\n\tempContactDetails: Array<EmployeeContactDetails>;\r\n\temployment: Array<Employment>;\r\n\tempqualification: Array<EmployeeQualification>;\r\n\tmobileNo: string;\r\n\tuser: EnterpriseUser  = new EnterpriseUser;\r\n\tbranch : Branch = new Branch();\r\n\temployeeFullName : string;\r\n\temployeeStatusId : number;\r\n\tqualification: string;\r\n\tspeciality: string;\r\n\tphoneNo: string;\r\n\temail: string;\r\n\tvalidDate: Date = new Date;\r\n\treportingAuthority : number;\r\n\tempPrefix: PrefixMaster  = new PrefixMaster();\r\n\tfullNameWithPrefix: string;\r\n\temployeeName : string;\r\n\tlicenseNo: string;\r\n\tloginId : string;\r\n\tpassword: string;\r\n\trestrictedEmp: boolean;\r\n\tsiteId: number;\r\n\tdiscPercentage : number;\r\n\tnewPatient: number;\r\n\texistingPatient: number;\r\n\tfollowupPatient: number;\r\n\tslot: LookupEntity = new LookupEntity;\r\n\t\r\n\t\r\n}","import { LookupEntity } from \"../../lookup-module/masters/lookup-entity\";\r\n\r\n\r\nexport class PrefixMaster {\r\n\tid: number;\r\n\tprefix :string;\r\n\tprefixType: string;\r\n\tcomment: string;\r\n\tgender : LookupEntity = new LookupEntity();\r\n\tactive: Boolean;\r\n}","import { Department } from \"../../department/masters/department\";\r\nimport { LookupEntity } from \"../../lookup-module/masters/lookup-entity\";\r\nimport { Branch } from \"../../service-center/masters/branch\";\r\n\r\n\r\nexport class EnterpriseUser {\r\n\tid: number;\r\n\t//userCode: String;\r\n\tuserName: string;\r\n\tuserFullName : string;\r\n\tpassword : string;\r\n\tisActive: boolean;\r\n\t//branch : Branch = new Branch();\r\n\t//department : Department = new Department;\r\n\tglobalProject : boolean;\r\n\tglobalProjectStore: boolean;\r\n\tglobalStore: boolean;\r\n\tglobalPurOrg: boolean;\r\n\tglobalBranch : boolean;\r\n\tglobalDepartment: boolean;\r\n\tglobalServiceCenter : boolean;\r\n\t//timeZone: string;\r\n\t//priveleges: Array<string>;\r\n\temialId : string;\r\n\temployeeNo: number;\r\n\tuserType : LookupEntity = new LookupEntity;\r\n\tpswModifiedDate : Date;\r\n\tmaxFailedLoginAttempt: number;\r\n\tisPswExpires: boolean;\r\n\tpswExpiryDays: number;\r\n\tpswChangeReqd: Boolean;\r\n\timageName : String;\r\n\tremarks : String;\r\n\t\r\n\t\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MainService } from '../../main.service';\r\nimport { Preferences } from '../masters/preferences';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreferencesService {\nbaseUrl = \"http://192.168.1.24:8080/springboot/api/v1\";\n  constructor(private http:HttpClient,private mainService: MainService\t\n\t) {\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\n\tgetPreferencesList():any{\n\t\treturn this.http.get(`${this.baseUrl}/preferences/get`);\n\t\t\n\t}\n\t\tcreatePreferences(preferences: Preferences):any{\n\t\treturn this.http.post(`${this.baseUrl}/preferences/add`,preferences);\n\t\t\n\t}\n\t\tupdatePreferences(preferencesId : number, preferences:Preferences ):any{\n\t\treturn this.http.post(`${this.baseUrl}/preferences/update/${preferencesId}`,preferences);\n\t\t\n\t}\n\tgetPreferenceByUserId(userId): any{\n\t\treturn this.http.get(`${this.baseUrl}/preferences/getByUserId/${userId}`)\n\t}\n\t\n}\n"]}