{"version":3,"sources":["webpack:///src/app/encounter/encounter-routing.module.ts","webpack:///src/app/encounter/encounter.component.ts","webpack:///src/app/encounter/encounter.module.ts","webpack:///src/app/encounter/masters/consultant.ts","webpack:///src/app/encounter/masters/encounter.ts","webpack:///src/app/encounter/services/consultant.service.ts","webpack:///src/app/encounter/services/encounter.service.ts","webpack:///src/app/encounter/encounter.component.css","webpack:///src/app/encounter/encounter.component.html"],"names":["routes","path","component","EncounterComponent","EncounterRoutingModule","NgModule","imports","RouterModule","exports","modalService","config","encounterService","departmentService","lookupService","fb","serviceCenterService","consultantService","patientService","consultant","Consultant","patientList","Array","patient","Patient","lookupEntityList","encounter","Encounter","department","Department","serviceCenter","ServiceCenter","waitingPatientsForConsultation","createEncounter","appointment","Appointment","history","state","encounterForm","group","FormControl","printCaseSheet","paymentType","billing","complaints","expectedTimeForConsultation","appointmentOrderedCptCode","eligibilityNumber","consultantType","cptCode","mailSend","reloadData","getAllDepartments","subscribe","data","departmentList","getServiceCenter","serviceCenterList","getConsultantList","consultantList","console","log","getPatientList","getAllLookupEntities","value","consultationCategory","consultationfee","error","Object","entries","consultation","i","toString","values","CreateEncounter","alert","reset","event","departmentId","serviceCenterId","consultantId","firstVisitFee","container","open","visitType","LookupEntity","lookupValue","lookupId","push","dismissAll","NgbModal","NgbModalConfig","EncounterService","DepartmentService","LookupService","FormBuilder","BranchServiceService","ConsultantService","PatientService","Component","selector","template","animations","routerTransition","EncounterModule","declarations","CommonModule","StatModule","PageHeaderModule","ReactiveFormsModule","AppointmentModule","PatientControlModule","Date","http","baseUrl","get","HttpClient","Injectable","providedIn","post"],"mappings":"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","file":"src_app_encounter_encounter_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EncounterComponent } from './encounter.component';\r\n\r\nconst routes: Routes = [\r\n\t{path: '', component: EncounterComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EncounterRoutingModule { }\r\n","import { Component, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { NgbModal, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Appointment } from '../appointment/masters/appointment';\r\nimport { Department } from '../master/department/masters/department';\r\nimport { DepartmentService } from '../master/department/services/department.service';\r\nimport { LookupEntity } from '../master/lookup-module/masters/lookup-entity';\r\nimport { LookupService } from '../master/lookup-module/services/lookup.service';\r\nimport { ServiceCenter } from '../master/service-center/masters/service-center';\r\nimport { BranchServiceService } from '../master/service-center/services/branch-service.service';\r\nimport { Patient } from '../patient/master/patient';\r\nimport { PatientService } from '../patient/service/patient.service';\r\nimport { routerTransition } from '../router.animations';\r\nimport { Consultant } from './masters/consultant';\r\nimport { Encounter } from './masters/encounter';\r\nimport { ConsultantService } from './services/consultant.service';\r\nimport { EncounterService } from './services/encounter.service';\r\n\r\n@Component({\r\n  selector: 'app-encounter',\r\n  templateUrl: './encounter.component.html',\r\n  styleUrls: ['./encounter.component.css'],\r\n  animations: [routerTransition()],\r\n})\r\nexport class EncounterComponent implements OnInit {\r\n\tdepartmentList: Array<Department>;\r\n    serviceCenterList: Array<ServiceCenter>;\r\n    departmentId : number;\r\n\tserviceCenterId: number;\r\n\tconsultantList: Array<Consultant>;\r\n    consultantId: any;\r\n\tconsultant: Consultant = new Consultant();\r\n\tconsultationfee: String;\r\n    patientList: Array<Patient> = new Array<Patient>();\r\n\tpatient : Patient = new Patient;\r\n\tlookupEntityList : Array<LookupEntity> =[];\r\n\tencounter: Encounter = new Encounter;\r\n\tencounterForm: FormGroup;\r\n\tdepartment: Department =  new Department();\r\n\tserviceCenter: ServiceCenter = new ServiceCenter();\r\n\twaitingPatientsForConsultation: Array<Patient> = [];\r\n\tcreateEncounter : Encounter = new Encounter();\r\n\tconsultationCategory :String;\r\n\tappointment : Appointment = new Appointment;\r\n\t\r\n  constructor(\r\n\tprivate modalService: NgbModal,\r\n\tprivate config: NgbModalConfig,\r\n\tprivate encounterService: EncounterService,\r\n\tprivate departmentService: DepartmentService,\r\n\tpublic lookupService:LookupService,\r\n\tprivate fb: FormBuilder,\r\n\tprivate serviceCenterService: BranchServiceService,\r\n\tprivate consultantService: ConsultantService,\r\n\tprivate patientService: PatientService,\r\n\t){ }\r\n\r\n\r\n \r\nngOnInit() {\r\n\tthis.appointment = history.state;\r\n\tthis.encounterForm = this.fb.group({\r\n\t\tdepartment: new FormControl(this.appointment.department),\r\n\t\tserviceCenter: new FormControl(null),\r\n\t\tconsultant: new FormControl(null),\r\n\t\tprintCaseSheet: new FormControl(null),\r\n\t\tpaymentType: new FormControl(null),\r\n\t\tbilling: new FormControl(null),\r\n\t\tcomplaints: new FormControl(null),\r\n\t\twaitingPatientsForConsultation: new FormControl(null),\r\n\t\texpectedTimeForConsultation: new FormControl(null),\r\n\t\tappointmentOrderedCptCode: new FormControl(null),\r\n\t\teligibilityNumber: new FormControl(null),\r\n\t\tconsultantType: new FormControl(null),\r\n\t\tcptCode: new FormControl(null),\r\n\t\tmailSend: new FormControl(null),\r\n\t});\r\n    this.reloadData();\r\n  }\r\n\r\n  reloadData() {\r\n    this.departmentService.getAllDepartments().subscribe(data => {\r\n\tthis.departmentList = data;\r\n\t\t});\r\n \t\r\n    this.serviceCenterService.getServiceCenter().subscribe(data => {\r\n\tthis.serviceCenterList = data;\r\n\t\t});\r\n\t \r\n\tthis.consultantService.getConsultantList().subscribe(data => {\r\n\tthis.consultantList = data;\r\n\tconsole.log(this.consultantList)\r\n\t});\r\n\t\r\n\tthis.patientService.getPatientList().subscribe(data => {\r\n\tthis.patientList = data;\r\n\t});\r\n\tthis.lookupService.getAllLookupEntities().subscribe(data =>{\r\n\t\tthis.lookupEntityList= data;\r\n\t\t//console.log(this.lookupEntityList);\r\n\t})\r\n}\r\n\r\nonSubmit(encounterForm){\r\n\t//console.log(\"On Submit is called!!!!!!\")\r\n\tconsole.log(encounterForm.value);\r\n\tthis.createEncounter = encounterForm.value;\r\n\tthis.createEncounter.department = this.department;\r\n\tthis.createEncounter.serviceCenter = this.serviceCenter ;\r\n\tthis.createEncounter.consultant = this.consultant; \r\n\tthis.createEncounter.consultationCategory= this.consultationfee;\r\n\tconsole.error(this.consultationfee)\r\n\r\n\tfor(let consultation of Object.entries(this.consultant)){\r\n\t\t//console.warn(consultation);\r\n\t\t//console.warn(this.consultationfee)\r\n\t\tfor(let i of consultation){\r\n\t\t\tif(i.toString() == this.consultationfee.toString()){\r\n\t\t\tconsole.log(\"hii\")\r\n\t\t\tthis.consultationCategory = Object.values(consultation)[1].toString();\r\n\t\t\t\r\n\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tthis.createEncounter.consultationCategory = this.consultationCategory;\r\n\tthis.createEncounter.patient = this.patient;\r\n\tconsole.error(this.createEncounter.consultantType)\r\n\tconsole.error(this.createEncounter)\r\n\tthis.createEncounter.consultantType = encounterForm.value.consultantType;\r\n\tthis.encounterService.CreateEncounter(this.createEncounter).subscribe(data =>{\r\n\t\talert(\"successfully created!!\")\r\n\t})\r\n\tthis.encounterForm.reset();\r\n}\r\nshowServiceCenter(event){\r\n\tthis.departmentId = event;\r\n\tfor(let department of this.departmentList){\r\n\t\tif(department.departmentId == this.departmentId){\r\n\t\t\tthis.department = department;\r\n\t\t}\r\n\t}\r\n\t//console.log(event);\r\n}\r\nshowConsultant(event){\r\n\tthis.serviceCenterId = event;\r\n\t for(let serviceCenter of this.serviceCenterList){\r\n\t\tif(serviceCenter.serviceCenterId == this.serviceCenterId){\r\n\t\t\tthis.serviceCenter = serviceCenter;\r\n\t\t}\r\n\t}\r\n\t//console.log(this.serviceCenterId)\r\n}\r\nshowFees(consultantId){\r\n\t//console.warn(consultantId)\r\n\tfor(let consultant of this.consultantList){\r\n\t\tif(consultant.consultantId == consultantId ){\r\n\t\t\tthis.consultant = consultant;\r\n\t\t\tthis.consultationfee = this.consultant.firstVisitFee;\r\n\t\t}\r\n\t}\r\n\t}\r\nshowFeesForEveryVisit(value){\r\n\t//console.log(this.consultant)\r\n\tthis.consultationfee= value;\r\n\t\r\n}\r\nonCreate(container) {\r\n\tthis.modalService.open(container);\r\n   \r\n}\r\n onAdd(patient){\r\n\tthis.patient = patient;\r\n\tif(this.patient.visitType == null){\r\n\t\tthis.patient.visitType = new LookupEntity();\r\n\t\tthis.patient.visitType.lookupValue = \"firstVisit\";\r\n\t\tthis.patient.visitType.lookupId  = 47;\r\n\t\t}\r\n\tthis.waitingPatientsForConsultation = [];\r\n\tthis.waitingPatientsForConsultation.push(patient);\r\n\tthis.modalService.dismissAll();\r\n}\r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EncounterRoutingModule } from './encounter-routing.module';\r\nimport { EncounterComponent } from './encounter.component';\r\nimport { PageHeaderModule, StatModule } from '../shared';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppointmentModule } from '../appointment/appointment.module';\r\nimport { PatientControlModule } from '../patient/patient-control/patient-control.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EncounterComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    EncounterRoutingModule,\r\n    StatModule,\r\n    PageHeaderModule,\r\n    ReactiveFormsModule,\r\n    AppointmentModule,\r\n    PatientControlModule\r\n  ]\r\n})\r\nexport class EncounterModule { }\r\n","import { ServiceCenter } from \"../../master/service-center/masters/service-center\";\r\n\r\nexport class Consultant {\n\tconsultantId: number;\n\tserviceCenter: ServiceCenter = new ServiceCenter;\n\tconsultantName: string;\n\tfirstVisitFee: string;\n\tfollowupVisitFee: string;\n\testablishVisitFee: string;\n\t\n}\n","import { Department } from \"../../master/department/masters/department\";\r\nimport { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { ServiceCenter } from \"../../master/service-center/masters/service-center\";\r\nimport { Patient } from \"../../patient/master/patient\";\r\nimport { Consultant } from \"./consultant\";\r\n\r\nexport class Encounter {\n\tencounterId : number;\n\tdepartment: Department = new Department;\n\tserviceCenter: ServiceCenter = new ServiceCenter;\n\tconsultant: Consultant = new Consultant;\n\tprintCaseSheet: boolean;\n\tpaymentType: LookupEntity = new LookupEntity;\n\tbilling: LookupEntity = new LookupEntity;\n\tcomplaints: String;\n\twaitingPatientsForConsultation: Array<Patient>;\n\texpectedTimeForConsultation: Date = new Date();\n\tappointmentOrderedCptCode: String;\n\teligibilityNumber: String;\n\tconsultationCategory: String;\n\tconsultantType: LookupEntity = new LookupEntity;\n\tcptCode: String;\n\tmailSend: boolean;\n\tpatient: Patient = new Patient;\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsultantService {\r\n\tbaseUrl = \"http://localhost:8080/springboot/api/v1\"\r\n  constructor(private http: HttpClient) { }\r\n  getConsultantList(): any{\r\n\treturn this.http.get(`${this.baseUrl}/consultant/get`)\r\n}\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncounterService {\n private baseUrl = 'http://localhost:8080/springboot/api/v1';\n  constructor(private http:HttpClient) { }\n  getEncounter(): any {\n\treturn this.http.get(`${this.baseUrl}/encounter`);\n  }\n  CreateEncounter(encounter):any{\n\tconsole.error(encounter)\n\treturn this.http.post(`${this.baseUrl}/encounter`,encounter);\n}\n}\n","export default \".form-control{\\r\\n\\tpadding: 0;\\r\\n\\tmargin: 0.25rem;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVuY291bnRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsVUFBVTtDQUNWLGVBQWU7QUFDaEIiLCJmaWxlIjoiZW5jb3VudGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250cm9se1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwLjI1cmVtO1xyXG59Il19 */\";","export default \"<div [@routerTransition]>\\n\\t<app-page-header [mainhead]=\\\"'Encounter'\\\"\\n\\t\\t[mainheadLink]=\\\"'/encounter'\\\" [heading]=\\\"'New Encounter'\\\"\\n\\t\\t[icon]=\\\"'fa-cog'\\\"></app-page-header>\\n<!--<nav class=\\\"navbar bg-dark text-white text-center\\\">\\n   <label><b>Patient Name:</b></label>&nbsp;\\n  <label><b>{{patient.firstName}}&nbsp;{{patient.lastName}}</b></label>\\n\\n  <div>\\n   <label><b>MR NO. :</b></label>&nbsp;\\n    <label ><b>{{patient.mrno}}</b></label>\\n   <button class=\\\"button\\\" class=\\\"ml-auto btn btn-success\\\" (click)=\\\"onCreate(container)\\\">add patient</button>\\n  </div>  \\n  <h3 style = \\\"font-family: Sanse Serif\\\"> Patient Details</h3>\\n     <button class=\\\"button\\\" class=\\\"ml-auto btn btn-success\\\" (click)=\\\"onCreate(container)\\\">add patient</button>\\n</nav>-->\\n<div class=\\\"bg-light border border-dark\\\">\\n\\t<app-patient-control  [patient]=\\\"patient\\\"></app-patient-control>\\n</div>\\n<div class = \\\"card\\\">\\n\\t<div class =\\\"card-head\\\">\\n\\t\\t<nav class=\\\" bg-dark text-center text-white p-0 m-0\\\">\\n\\t\\t\\t<h2 style = \\\"font-family: Sanse Serif\\\">Create Encounter</h2>\\n\\t\\t</nav>\\n\\t</div>\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<form [formGroup] = \\\"encounterForm\\\" (ngSubmit)=\\\"onSubmit(encounterForm)\\\">\\n\\t\\t\\t<div class='row justify-content-end'>\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-2\\\">Department:</label> \\n\\t\\t\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName = \\\"department\\\"\\n\\t\\t\\t\\t\\t\\t(change)=\\\"showServiceCenter($event.target.value)\\\">\\n\\t\\t\\t\\t\\t\\t<option [ngValue] = \\\"null\\\">---select---</option>\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let department of departmentList\\\"\\n\\t\\t\\t\\t\\t\\t[value]=\\\"department.departmentId\\\" >{{department.departmentName}}</option>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-2\\\">Service Center: </label> \\n\\t\\t\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<select class=\\\" form-control\\\" formControlName = \\\"serviceCenter\\\"\\n\\t\\t\\t\\t\\t\\t(change)=\\\"showConsultant($event.target.value)\\\" >\\n\\t\\t\\t\\t\\t\\t<option selected=\\\"selected\\\">---select---</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let serviceCenter of serviceCenterList\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"serviceCenter.department.departmentId == departmentId \\\"\\n\\t\\t\\t\\t\\t\\t\\t[value]=\\\"serviceCenter.serviceCenterId\\\">{{serviceCenter.serviceCenterName}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-2\\\">Consultant:</label>\\n\\t\\t\\t\\t<div class = \\\"col-md-2\\\"> \\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" style=\\\"border-width: 2px;\\\" formControlName = \\\"consultant\\\"\\n\\t\\t\\t\\t\\t\\t(change)=\\\"showFees($event.target.value)\\\">\\n\\t\\t\\t\\t\\t\\t<option selected=\\\"selected\\\">---select---</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let consultant of consultantList\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"consultant.serviceCenter.serviceCenterId == serviceCenterId\\\"\\n\\t\\t\\t\\t\\t\\t\\t[value]=\\\"consultant.consultantId\\\">{{consultant.consultantName}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-2\\\">Consultation Type:</label> \\n\\t\\t\\t\\t<div class= \\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<select formControlName = \\\"consultantType\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" style=\\\"border-width: 2px;\\\">\\n\\t\\t\\t\\t\\t\\t<option value = \\\"\\\">---select---</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntit of lookupEntityList\\\" >\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf = \\\"lookupEntit.category.categoryId == 4\\\" [ngValue]=\\\"lookupEntit\\\">{{lookupEntit.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-2\\\">CPT Code:</label> \\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<input formControlName = \\\"cptCode\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"cptCode\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-2 \\\">Complaints:</label>\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" formControlName = \\\"complaints\\\" cols=\\\"15\\\" ></textarea>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2 mt-1 \\\">Eligibility Number:</label>\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName = \\\"eligibilityNumber\\\" type=\\\"text\\\" value=\\\"\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2  \\\">Appointment Ordered CPT Code:</label>\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<input type = \\\"text\\\" class = \\\"form-control\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2\\\">print case sheet</label>\\n\\t\\t\\t\\t<div class=\\\"col-md-2  pl-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class= \\\"float-center\\\" formControlName = \\\"printCaseSheet\\\" value=\\\"print\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-2 \\\">consultation category:</label>\\n\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<select class=\\\"form-control\\\"(change)= \\\"showFeesForEveryVisit($event.target.value)\\\">\\n\\t\\n\\t\\t\\t\\t\\t\\t<option selected=\\\"selected\\\" [value]=\\\"consultant.firstVisitFee\\\">First\\n\\t\\t\\t\\t\\t\\t\\tvisit</option>\\n\\t\\t\\t\\t\\t\\t<option [value]=\\\"consultant.followupVisitFee\\\">Follow-up\\n\\t\\t\\t\\t\\t\\t\\tvisit</option>\\n\\t\\t\\t\\t\\t\\t<option [value]=\\\"consultant.establishVisitFee\\\">Establish\\n\\t\\t\\t\\t\\t\\t\\tvisit</option>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class = \\\"col-md-2\\\">\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" value={{consultationfee}} readonly />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<h6 class=\\\"col-md-2 mt-2\\\">Mail send: </h6>\\n\\t\\t\\t\\t<div class=\\\"col-md-2 mt-2\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" name=\\\"mail-send\\\" formControlName = \\\"mailSend\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class = \\\"col-md-2\\\"></div>\\n\\t\\t\\t\\t<label class=\\\"col-md-3 mt-2\\\">Waiting patients for consultaion:</label>\\n\\t\\t\\t\\t<div class = \\\"col-md-3 border border-black\\\"></div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-3 mt-2 \\\"><h6>Expected time for consultation:</h6></label>\\n\\t\\t\\t\\t<div class=\\\"col-md-3 border border-black\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-3 mt-2\\\"><h6>Payment type:</h6></label>\\n\\t\\t\\t\\t<div class = \\\"col-md-3 mt-2\\\">\\n\\t\\t\\t\\t\\t<ng-container  *ngFor = \\\"let lookupEntit of lookupEntityList\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container  *ngIf = \\\"lookupEntit.category.categoryId == 22\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"paymentType\\\" formControlName = \\\"paymentType\\\" [value]=\\\"lookupEntit\\\"\\n\\t\\t\\t\\t\\t\\t\\tchecked=\\\"checked\\\">{{lookupEntit.lookupValue}}&nbsp;\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<label class=\\\"col-md-3 mt-2\\\"><h6>Billing:</h6></label> \\n\\t\\t\\t\\t<div class=\\\"col-md-3 mt-2\\\">\\n\\t\\t\\t\\t\\t<ng-container  *ngFor = \\\"let lookupEntit of lookupEntityList\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container  *ngIf = \\\"lookupEntit.category.categoryId == 23\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\"  formControlName = \\\"billing\\\" name=\\\"billing\\\" [value]=\\\"lookupEntit\\\"\\n\\t\\t\\t\\t\\t\\t\\tchecked=\\\"checked\\\">{{lookupEntit.lookupValue}}&nbsp;\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<hr>\\n\\t\\t\\t<div class=\\\"row border border-dark p-2 justify-content-between\\\" (change)= \\\"showFeesForEveryVisit($event.target.value)\\\">\\n\\t\\t\\t\\t<label>Total Amount &nbsp;:&nbsp;</label>&nbsp;\\n\\t\\t\\t\\t<input type = \\\"text\\\" [value]=\\\"consultationfee\\\" class = \\\"h-50\\\" readonly />\\n\\t\\t\\t\\t<button  class=\\\"ml-auto btn btn-danger\\\" type = \\\"submit\\\">Save</button>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n<ng-template #container> \\n\\t<table class=\\\"table\\\" style=\\\"background-color:Aquamarine\\\">\\n\\t  <thead class=\\\"table-dark\\\">\\n\\t    <tr>\\n\\t      <th scope=\\\"col\\\">Patient Name</th>\\n\\t      <th scope=\\\"col\\\">MR No</th>\\n\\t      <th scope=\\\"col\\\">Gender</th>\\n\\t      <th scope=\\\"col\\\">Actions</th>\\n\\t    </tr>\\n\\t  </thead>\\n\\t  <tbody >\\n\\t    <tr *ngFor=\\\"let patient of patientList\\\">\\n\\t      <th scope=\\\"row\\\">{{patient.firstName}}&nbsp;{{patient.lastName}}</th>\\n\\t      <td>{{patient.mrn}}</td>\\n\\t      <td>{{patient.gender}}</td>\\n\\t      <td><button class=\\\"btn btn-success\\\" (click)=\\\"onAdd(patient)\\\" >Add</button></td>\\n\\t    </tr>\\n\\t  </tbody>\\n\\t</table>\\n</ng-template>\\n<footer class = \\\"footer bg-info text-white text-center\\\">\\n\\t<label class= \\\"float-center\\\">LC@Copyright,2021</label>\\n</footer>\\n\\t\\n\";"]}