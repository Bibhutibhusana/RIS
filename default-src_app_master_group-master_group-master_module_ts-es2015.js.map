{"version":3,"sources":["./src/app/master/group-master/group-master-routing.module.ts","./src/app/master/group-master/group-master.component.ts","./src/app/master/group-master/group-master.module.ts","./src/app/master/group-master/masters/group-type.ts","./src/app/master/group-master/masters/groups.ts","./src/app/master/group-master/services/group.service.ts","./src/app/master/group-master/group-master.component.css","./src/app/master/group-master/group-master.component.html"],"names":[],"mappings":"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","file":"default-src_app_master_group-master_group-master_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GroupMasterComponent } from './group-master.component';\r\n\nconst routes: Routes = [\n\t{path:'',component: GroupMasterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GroupMasterRoutingModule { }\n","import { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {  MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { AlertService } from '../../layout/alert/alert.service';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { GroupType } from './masters/group-type';\r\nimport { Groups } from './masters/groups';\r\nimport { Tree } from './masters/tree';\r\nimport { GroupService } from './services/group.service';\r\n\r\nexport class TreeFlatNode {\r\n  item: string;\r\n  level: number;\r\n  expandable: boolean;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-group-master',\r\n  templateUrl: './group-master.component.html',\r\n  styleUrls: ['./group-master.component.css'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class GroupMasterComponent implements OnInit {\r\n\ttreeControl = new NestedTreeControl<Tree>(node => node.children);\r\n    dataSource = new MatTreeNestedDataSource<Tree>();\r\n    hasChild = (_: number, node: Tree) => !!node.children && node.children.length > 0;\r\n    hasNoContent = (_: number, _nodeData: TreeFlatNode) => _nodeData.item === '';\r\n    //dataSource: MatTreeFlatDataSource<Tree, TreeFlatNode>;\r\n    @Input() groupsForTreeView : Array<Tree> = [];\r\n    filteredGroupsForTreeView : Array<Tree> = [];\r\n    @Input() groupTypeList: Array<GroupType> = [];\r\n    groupTypes : GroupType = new GroupType;\r\n    name: String;\r\n    groupList : Array<Groups> = new Array<Groups>();\r\n    group : Groups = new Groups;\r\n    parentGroup : Groups = new Groups;\r\n    isNewGroup : boolean = true;\r\n    @Output() groupForEmitting : EventEmitter<Groups> = new EventEmitter<Groups>();\r\n\t@Input() isDrugGeneric : boolean = false;\r\n\t@Input() groupId: number = 0;\r\n    \r\n    \r\n    \r\n  constructor(private groupService: GroupService,\r\n  \tprivate alertService: AlertService) {\r\n    //this.dataSource.data = TREE_DATA;\r\n    \r\n  }\r\n  ngOnInit(){\r\n\tthis.reloadData();\r\n\tif(this.groupId == 83){\r\n\t\tthis.groupService.getGroupsTreeByGroupTypeId(3).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.filteredGroupsForTreeView = data;\r\n\t\t\tthis.dataSource.data= this.filteredGroupsForTreeView;\r\n\t\t})\r\n\t}\r\n}\r\n  reloadData(){\r\n\tthis.groupService.getGroupsForTreeView().subscribe(data =>{\r\n\t\tconsole.log(data);\r\n\t\tthis.groupsForTreeView = data;\r\n\t\t//this.dataSource.data = this.groupsForTreeView;\r\n\t})\r\n\tthis.groupService.getGroupTypeList().subscribe(data =>{\r\n\t\tconsole.log(data);\r\n\t\tthis.groupTypeList = data;\r\n\t})\r\n\t\r\n\t\r\n}\r\n\r\n  getGroupByType(groupType){\r\n\t\tconsole.log(\"GetGroupByType function is called\")\r\n\t\tconsole.log(groupType)\r\n\t\tthis.groupTypes = groupType;\r\n\t\tthis.groupService.getGroupsTreeByGroupTypeId(groupType.groupTypeId).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.filteredGroupsForTreeView = data;\r\n\t\t\tthis.dataSource.data= this.filteredGroupsForTreeView;\r\n\t\t})\r\n\t\tthis.parentGroup.groupName = \"\"\r\n\t\tthis.group = new Groups();\r\n\t\tthis.group.mapGroupId = 0;\r\n\t\tthis.group.groupType = groupType;\r\n\t\t}\r\n  childNodeClicked(tree){\r\n\tthis.isNewGroup  = false;\r\n\tthis.name = tree.name;\r\n\tthis.groupService.getGroupsByGroupId(tree.groupId).subscribe(data =>{\r\n\t\t//console.log(data);\r\n\t\tthis.group = data;\r\n\t\t\r\n\t\t//console.error(this.group);\r\n\t\tthis.groupForEmitting.emit(this.group)\r\n\t\t\r\n\t\tif(this.group.mapGroupId != 0){\r\n\t\t\tthis.groupService.getGroupsByGroupId(this.group.mapGroupId).subscribe(data =>{\r\n\t\t\t//console.log(data,\"GetByGroupId\");\r\n\t\t\tthis.parentGroup = data;\r\n\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.parentGroup.groupName = this.group.groupName;\r\n\t\t}\r\n\t\t\r\n\t})\r\n\t/*this.groupService.getGroupByName(this.name).subscribe(data =>{\r\n\t\tconsole.log(data,\"GetByGroupName\");\r\n\t\tthis.groupList = data;\r\n\t\t//console.log(this.groupList[0])\r\n\t\tthis.group = this.groupList[0]\r\n\t\tif(this.group.mapGroupId != 0){\r\n\t\t\tthis.groupService.getGroupsByGroupId(this.group.mapGroupId).subscribe(data =>{\r\n\t\t\tconsole.log(data,\"GetByGroupId\");\r\n\t\t\tthis.parentGroup = data;\r\n\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.parentGroup.groupName = this.group.groupName;\r\n\t\t}\r\n\t\t\r\n\t})*/\r\n\t\r\n\t\r\n}\r\nparentNodeClicked(tree){\r\n\tthis.isNewGroup  = false;\r\n\tthis.groupService.getGroupsByGroupId(tree.groupId).subscribe(data =>{\r\n\t\tconsole.log(data);\r\n\t\tthis.group = data;\r\n\t\tif(this.group.mapGroupId != 0){\r\n\t\t\tthis.groupService.getGroupsByGroupId(this.group.mapGroupId).subscribe(data =>{\r\n\t\t\tconsole.log(data,\"GetByGroupId\");\r\n\t\t\tthis.parentGroup = data;\r\n\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.parentGroup.groupName = this.group.groupName;\r\n\t\t}\r\n\t\t\r\n\t})\r\n\tthis.name = tree.name;\r\n\t/*this.groupService.getGroupByName(this.name).subscribe(data =>{\r\n\t\tconsole.log(data,\"GetByGroupName\");\r\n\t\tthis.groupList = data;\r\n\t\t//console.log(this.groupList[0])\r\n\t\tthis.group = this.groupList[0]\r\n\t\tif(this.group.mapGroupId != 0){\r\n\t\t\tthis.groupService.getGroupsByGroupId(this.group.mapGroupId).subscribe(data =>{\r\n\t\t\tconsole.log(data,\"GetByGroupId\");\r\n\t\t\tthis.parentGroup = data;\r\n\t\t})\r\n\t\tthis.groupService.getGroupsByGroupId(this.group.groupId).subscribe(data =>{\r\n\t\t\tconsole.log(data,\"GetByGroupId\");\r\n\t\t\tthis.group = data;\r\n\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.parentGroup.groupName = this.group.groupName;\r\n\t\t}\r\n\t\t\r\n\t})*/\r\n\t\r\n}\r\n\r\n    createGroup(){\r\n\t\tthis.isNewGroup  = true;\r\n\t\tconsole.log(\"Create Group is called\")\r\n\t\tthis.parentGroup.groupName = this.group.groupName;\r\n\t\tthis.group.groupName =  null;\r\n\t\tthis.group.description = null;\r\n\t\tthis.group.sortOrder = null;\r\n\t\tthis.group.serviceCodeType = null;\r\n\t\tif(this.group.mapGroupId == undefined){\r\n\t\t\tthis.group.mapGroupId = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.group.mapGroupId = this.group.groupId;\r\n\t\t}\r\n\t\t\r\n\t\tthis.group.groupId = null;\r\n\t\tconsole.log(this.group)\r\n\t\t\r\n\t}\r\n  \r\n  saveGroup(){\r\n\tconsole.log(\"Save Group is called!!!\")\r\n\tthis.groupService.createNewGroup(this.group).subscribe(data =>{\r\n\t\tconsole.log(data);\r\n\t\tthis.reloadData();\r\n\t\tthis.getGroupByType(this.groupTypes);\r\n\t\tthis.alertService.success(\"Successfully  Created Group!.\")\r\n\t\t},error =>{\r\n\t\t\tthis.alertService.error(\"There is some issue in your data.\")\r\n\t})\r\n}\r\n  \r\n  updateGroup(){\r\n\tconsole.log(this.group);\r\n\tthis.groupService.updateGroup(this.group.groupId,this.group).subscribe(data =>{\r\n\t\tconsole.log(data);\r\n\t\t\r\n\t\tthis.reloadData();\r\n\t\tthis.getGroupByType(this.groupTypes);\r\n\t\tthis.alertService.success(\"Successfully Updated Group!!.\")\r\n\t\t},error =>{\r\n\t\t\tthis.alertService.error(\"There is some issue in your data.\")\r\n\t})\r\n\t\r\n}\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../../material/material.module';\r\nimport { GroupMasterComponent } from './group-master.component';\r\nimport { GroupMasterRoutingModule } from './group-master-routing.module';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { FormsModule } from '@angular/forms';\r\n\n\n\n@NgModule({\n  declarations: [GroupMasterComponent],\n  imports: [\n    CommonModule,\n    GroupMasterRoutingModule,\n    MaterialModule,\n    PageHeaderModule,\n    FormsModule\n  ],\n  exports:[GroupMasterComponent]\n})\nexport class GroupMasterModule { }\n","import { BaseEntity } from \"../../masters/base-entity\";\r\n\r\nexport class GroupType extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\tgroupTypeId: number;\r\n\tgroupTypeName: string;\r\n\tactive: boolean;\r\n\tlevel: number;\r\n\t\r\n}","import { BaseEntity } from \"../../masters/base-entity\";\r\nimport { GroupType } from \"./group-type\";\r\n\r\nexport class Groups extends BaseEntity{\r\n\tgroupId : number;\r\n\tgroupName: string;\r\n\tdescription: string;\r\n\tgroupType : GroupType = new GroupType;\r\n\tactive: boolean;\r\n\tmapGroupId: number;\r\n\tparentGroupPath: string;\r\n\tsortOrder: number;\r\n\topSalesAccount: number;\r\n\topDiscountAccount: number;\r\n\tipSalesAccount: number;\r\n\tipDiscountAccount: number;\r\n\tserviceCodeType: string;\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Groups } from \"../masters/groups\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GroupService{\r\n   \r\n   \r\n    \r\n\tbaseUrl = \"http://192.168.1.24:8080/springboot/api/v1\"\r\n\tconstructor(private http:HttpClient){}\r\n\t/*getGroupMasterList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/group-master/get`)\r\n\t}\r\n\tgetGroupMasterById(groupId){\r\n\t\treturn this.http.get(`${this.baseUrl}/group-master/get-by-id/${groupId}`)\r\n\t}\r\n\t\r\n\tcreateGroupMaster(groupMaster):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/group-master/add`,groupMaster)\r\n\t}*/\r\n\t\r\n\t/********************************Groups service goes here  */\r\n\tgetGroupsList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/groups/get`);\r\n\t}\r\n\tgetGroupsForTreeView():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/groupsTree/get`);\r\n\t}\r\n\tcreateNewGroup(groups: Groups):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/groups/add`,groups);\r\n\t}\r\n\tgetGroupByName(name: String):any {\r\n       \treturn this.http.get(`${this.baseUrl}/groups/getByGroupName/${name}`);\r\n    }\r\n\t getGroupsByGroupId(groupId: number):any {\r\n        return this.http.get(`${this.baseUrl}/groups/getByGroupId/${groupId}`);\r\n    }\r\n     updateGroup(groupId: number, group: Groups) {\r\n        return this.http.put(`${this.baseUrl}/groups/update/${groupId}`,group);\r\n    }\r\n    getGroupsByGroupTypeId(groupTypeId):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/groups/getByGroupTypeId/${groupTypeId}`)\r\n\t}\r\n\t\r\n\t/**************************GroupType services goes here ****************************/\r\n\tgetGroupTypeList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/groupType/get`)\r\n\t}\r\n\t\r\n\tgetGroupsTreeByGroupTypeId(groupTypeId):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/groupsTree/getByGroupTypeId/${groupTypeId}`)\r\n\t}\r\n\t\r\n\t\r\n}","export default \".example-tree-invisible {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.example-tree ul,\\r\\n.example-tree li {\\r\\n  margin-bottom: 0;\\r\\n  list-style-type: none;\\r\\n}\\r\\n\\r\\n/*\\r\\n * This padding sets alignment of the nested nodes.\\r\\n */\\r\\n\\r\\n.example-tree .mat-nested-tree-node div[role=group] {\\r\\n  padding-left: 40px;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Padding for leaf nodes.\\r\\n * Leaf nodes need to have padding so as to align with other non-leaf nodes\\r\\n * under the same parent.\\r\\n */\\r\\n\\r\\n.example-tree div[role=group] > .mat-tree-node {\\r\\n  padding-left: 40px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  margin-right: 4px;\\r\\n}\\r\\n\\r\\n#groupBlock{\\r\\n\\theight:80vh;\\r\\n\\toverflow: scroll;\\r\\n}\\r\\n\\r\\n.checklist-leaf-node{\\r\\n\\tmargin-top:5px;\\r\\n}\\r\\n\\r\\n.folder{\\r\\n\\tcolor:#d7bc60;\\r\\n}\\r\\n\\r\\n.description{\\r\\n\\tcolor:#837765;\\r\\n}\\r\\n\\r\\n.group-sub{\\r\\n\\talign-self:center;\\r\\n}\\r\\n\\r\\n.form-control{\\r\\n\\theight:30px;\\r\\n}\\r\\n\\r\\n.is-active{\\r\\n\\theight:25px;\\r\\n\\tmargin-top:2px;\\r\\n}\\r\\n\\r\\n.save-icon{\\r\\n\\theight:30px;\\r\\n\\twidth:auto;\\r\\n}\\r\\n\\r\\n.new-icon{\\r\\n\\t\\theight:30px;\\r\\n\\twidth:auto;\\r\\n}\\r\\n\\r\\n.example-tree-progress-bar {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.example-tree-nested-node {\\r\\n  padding-left: 30px;\\r\\n}\\r\\n\\r\\nmat-tree {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.mat-tree-node {\\r\\n  padding: 0;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.mat-nested-tree-node {\\r\\n  top: -24px;\\r\\n}\\r\\n\\r\\nul, li { \\r\\n  list-style: none; \\r\\n  margin: 0; \\r\\n  padding: 0;  \\r\\n}\\r\\n\\r\\nli.example-tree-container {\\r\\n  border-bottom: 0;\\r\\n  padding-top:0.5px;\\r\\n}\\r\\n\\r\\nul { \\r\\n  padding-left: 40px; \\r\\n}\\r\\n\\r\\nli { \\r\\n  padding-left: 40px;\\r\\n  border: 1px dotted grey;\\r\\n  border-width: 0 0 1px 1px; \\r\\n  position: relative;\\r\\n  top:-25px;\\r\\n}\\r\\n\\r\\nli.mat-tree-node,\\r\\nli div { \\r\\n  margin: 0;\\r\\n  position: relative;\\r\\n  margin-top:33px;\\r\\n  margin-left: -10px;\\r\\n  background-color: #fff;\\r\\n  margin-bottom: -18px;\\r\\n}\\r\\n\\r\\nli ul {\\r\\n  border-top: 1px dotted grey;\\r\\n  margin-left: -40px;\\r\\n  padding-left: 60px;\\r\\n  margin-top:-24px;\\r\\n}\\r\\n\\r\\n.mat-nested-tree-node:last-child ul {\\r\\n  border-left: 1px solid white;\\r\\n  margin-left: -41px;\\r\\n}\\r\\n\\r\\n.mat-icon-button {\\r\\n  z-index: 100;\\r\\n}\\r\\n\\r\\n.mat-leaves{\\r\\n\\tmargin-bottom: -20px\\r\\n}\\r\\n\\r\\n.leaf-lable{\\r\\n\\ttop:-20px;\\r\\n}\\r\\n\\r\\n.node-label{\\r\\n\\tmargin-top:10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3VwLW1hc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtBQUNmOztBQUVBOztFQUVFLGdCQUFnQjtFQUNoQixxQkFBcUI7QUFDdkI7O0FBRUE7O0VBRUU7O0FBQ0Y7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7Ozs7RUFJRTs7QUFDRjtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtDQUNDLFdBQVc7Q0FDWCxnQkFBZ0I7QUFDakI7O0FBQ0E7Q0FDQyxjQUFjO0FBQ2Y7O0FBQ0E7Q0FDQyxhQUFhO0FBQ2Q7O0FBQ0E7Q0FDQyxhQUFhO0FBQ2Q7O0FBQ0E7Q0FDQyxpQkFBaUI7QUFDbEI7O0FBQ0E7Q0FDQyxXQUFXO0FBQ1o7O0FBQ0E7Q0FDQyxXQUFXO0NBQ1gsY0FBYztBQUNmOztBQUNBO0NBQ0MsV0FBVztDQUNYLFVBQVU7QUFDWDs7QUFDQTtFQUNFLFdBQVc7Q0FDWixVQUFVO0FBQ1g7O0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBQ0E7RUFDRSxVQUFVO0VBQ1YsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2Qix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLFNBQVM7QUFDWDs7QUFFQTs7RUFFRSxTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLDRCQUE0QjtFQUM1QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBQ0E7Q0FDQztBQUNEOztBQUNBO0NBQ0MsU0FBUztBQUNWOztBQUNBO0NBQ0MsZUFBZTtBQUNoQiIsImZpbGUiOiJncm91cC1tYXN0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLXRyZWUtaW52aXNpYmxlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uZXhhbXBsZS10cmVlIHVsLFxyXG4uZXhhbXBsZS10cmVlIGxpIHtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxufVxyXG5cclxuLypcclxuICogVGhpcyBwYWRkaW5nIHNldHMgYWxpZ25tZW50IG9mIHRoZSBuZXN0ZWQgbm9kZXMuXHJcbiAqL1xyXG4uZXhhbXBsZS10cmVlIC5tYXQtbmVzdGVkLXRyZWUtbm9kZSBkaXZbcm9sZT1ncm91cF0ge1xyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxufVxyXG5cclxuLypcclxuICogUGFkZGluZyBmb3IgbGVhZiBub2Rlcy5cclxuICogTGVhZiBub2RlcyBuZWVkIHRvIGhhdmUgcGFkZGluZyBzbyBhcyB0byBhbGlnbiB3aXRoIG90aGVyIG5vbi1sZWFmIG5vZGVzXHJcbiAqIHVuZGVyIHRoZSBzYW1lIHBhcmVudC5cclxuICovXHJcbi5leGFtcGxlLXRyZWUgZGl2W3JvbGU9Z3JvdXBdID4gLm1hdC10cmVlLW5vZGUge1xyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICBtYXJnaW4tcmlnaHQ6IDRweDtcclxufVxyXG5cclxuI2dyb3VwQmxvY2t7XHJcblx0aGVpZ2h0Ojgwdmg7XHJcblx0b3ZlcmZsb3c6IHNjcm9sbDtcclxufVxyXG4uY2hlY2tsaXN0LWxlYWYtbm9kZXtcclxuXHRtYXJnaW4tdG9wOjVweDtcclxufVxyXG4uZm9sZGVye1xyXG5cdGNvbG9yOiNkN2JjNjA7XHJcbn1cclxuLmRlc2NyaXB0aW9ue1xyXG5cdGNvbG9yOiM4Mzc3NjU7XHJcbn1cclxuLmdyb3VwLXN1YntcclxuXHRhbGlnbi1zZWxmOmNlbnRlcjtcclxufVxyXG4uZm9ybS1jb250cm9se1xyXG5cdGhlaWdodDozMHB4O1xyXG59XHJcbi5pcy1hY3RpdmV7XHJcblx0aGVpZ2h0OjI1cHg7XHJcblx0bWFyZ2luLXRvcDoycHg7XHJcbn1cclxuLnNhdmUtaWNvbntcclxuXHRoZWlnaHQ6MzBweDtcclxuXHR3aWR0aDphdXRvO1xyXG59XHJcbi5uZXctaWNvbntcclxuXHRcdGhlaWdodDozMHB4O1xyXG5cdHdpZHRoOmF1dG87XHJcbn1cclxuLmV4YW1wbGUtdHJlZS1wcm9ncmVzcy1iYXIge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS10cmVlLW5lc3RlZC1ub2RlIHtcclxuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbn1cclxuXHJcbm1hdC10cmVlIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG4ubWF0LXRyZWUtbm9kZSB7XHJcbiAgcGFkZGluZzogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm1hdC1uZXN0ZWQtdHJlZS1ub2RlIHtcclxuICB0b3A6IC0yNHB4O1xyXG59XHJcblxyXG51bCwgbGkgeyBcclxuICBsaXN0LXN0eWxlOiBub25lOyBcclxuICBtYXJnaW46IDA7IFxyXG4gIHBhZGRpbmc6IDA7ICBcclxufVxyXG5cclxubGkuZXhhbXBsZS10cmVlLWNvbnRhaW5lciB7XHJcbiAgYm9yZGVyLWJvdHRvbTogMDtcclxuICBwYWRkaW5nLXRvcDowLjVweDtcclxufVxyXG5cclxudWwgeyBcclxuICBwYWRkaW5nLWxlZnQ6IDQwcHg7IFxyXG59XHJcblxyXG5saSB7IFxyXG4gIHBhZGRpbmctbGVmdDogNDBweDtcclxuICBib3JkZXI6IDFweCBkb3R0ZWQgZ3JleTtcclxuICBib3JkZXItd2lkdGg6IDAgMCAxcHggMXB4OyBcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdG9wOi0yNXB4O1xyXG59XHJcblxyXG5saS5tYXQtdHJlZS1ub2RlLFxyXG5saSBkaXYgeyBcclxuICBtYXJnaW46IDA7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi10b3A6MzNweDtcclxuICBtYXJnaW4tbGVmdDogLTEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBtYXJnaW4tYm90dG9tOiAtMThweDtcclxufVxyXG5cclxubGkgdWwge1xyXG4gIGJvcmRlci10b3A6IDFweCBkb3R0ZWQgZ3JleTtcclxuICBtYXJnaW4tbGVmdDogLTQwcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiA2MHB4O1xyXG4gIG1hcmdpbi10b3A6LTI0cHg7XHJcbn1cclxuXHJcbi5tYXQtbmVzdGVkLXRyZWUtbm9kZTpsYXN0LWNoaWxkIHVsIHtcclxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHdoaXRlO1xyXG4gIG1hcmdpbi1sZWZ0OiAtNDFweDtcclxufVxyXG5cclxuLm1hdC1pY29uLWJ1dHRvbiB7XHJcbiAgei1pbmRleDogMTAwO1xyXG59XHJcbi5tYXQtbGVhdmVze1xyXG5cdG1hcmdpbi1ib3R0b206IC0yMHB4XHJcbn1cclxuLmxlYWYtbGFibGV7XHJcblx0dG9wOi0yMHB4O1xyXG59XHJcbi5ub2RlLWxhYmVse1xyXG5cdG1hcmdpbi10b3A6MTBweDtcclxufSJdfQ== */\";","export default \"<div [@routerTransition] *ngIf=\\\"!isDrugGeneric\\\">\\r\\n\\t<app-page-header [mainhead]=\\\"'Master'\\\"\\r\\n\\t\\t[mainheadLink]=\\\"'/master'\\\" [heading]=\\\"'Group Master'\\\"\\r\\n\\t\\t[icon]=\\\"'fa-cog'\\\"></app-page-header>\\r\\n</div>\\r\\n\\r\\n<div class = \\\"card\\\">\\r\\n\\t<div class =\\\"card-head\\\" *ngIf=\\\"!isDrugGeneric\\\">\\r\\n\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t<h4>Groups Tree</h4>\\r\\n\\t\\t<div>\\r\\n\\t\\t\\t<button class=\\\"btn btn-dark align-self-center text-white btn-sm p-0 m-0\\\" matTooltip=\\\"Save\\\" *ngIf = \\\"isNewGroup\\\" (click) = \\\"saveGroup()\\\"><img src = \\\"assets/images/save.png\\\" class =\\\"save-icon\\\"> Save</button>&nbsp;&nbsp;\\r\\n\\t\\t\\t<button class=\\\"btn btn-dark align-self-center text-white btn-sm p-0 m-0\\\" matTooltip=\\\"Save\\\" *ngIf = \\\"!isNewGroup\\\" (click) = \\\"updateGroup()\\\"><img src = \\\"assets/images/save.png\\\" class =\\\"save-icon\\\"> update</button>&nbsp;&nbsp;\\r\\n\\t\\t<button class=\\\"btn btn-dark align-self-center text-white btn-sm float-right p-0 m-0 \\\" matTooltip=\\\"edit\\\" (click) = \\\"createGroup()\\\"><img src = \\\"assets/images/edit.ico\\\" class =\\\"new-icon\\\"> New</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</nav>\\r\\n\\t</div>\\r\\n<!-- Group Type Goes here -->\\r\\n\\t<div class =\\\"card-body\\\">\\r\\n\\t\\t<div class =\\\"row\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<div class =\\\"col-md-auto border border-dark\\\" id = \\\"groupBlock\\\" >\\r\\n\\t\\t\\t\\t<div class =\\\"mt-1\\\" *ngIf=\\\"!isDrugGeneric\\\">\\r\\n\\t\\t\\t\\t\\tGroup Type&nbsp;&nbsp;\\r\\n\\t\\t\\t\\t\\t<select  size=\\\"1\\\" [(ngModel)] = \\\"groupTypes\\\" name = \\\"groupTypes\\\" (ngModelChange) = \\\"getGroupByType($event)\\\" >\\r\\n\\t\\t\\t\\t\\t\\t<option [ngValue] = null>-- Select --</option>\\r\\n\\t\\t\\t\\t\\t\\t<option *ngFor = \\\"let groupType of groupTypeList\\\" [ngValue] = \\\"groupType\\\">{{groupType.groupTypeName}}</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t<div class =\\\"mt-3\\\">\\r\\n\\t\\t\\t<!-- class=\\\"example-tree\\\" -->\\r\\n\\t\\t\\t\\t<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\" >\\r\\n\\t\\t\\t<!--   This is the tree node template for leaf nodes\\r\\n\\t\\t\\t  There is inline padding applied to this node using styles.\\r\\n\\t\\t\\t    This padding value depends on the mat-icon-button width. -->\\r\\n\\t\\t\\t    \\r\\n\\t\\t\\t  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding (click) =\\\"childNodeClicked(node)\\\">\\r\\n\\t\\t\\t  \\t\\t<!-- <mat-checkbox class=\\\"checklist-leaf-node\\\"></mat-checkbox>&nbsp;  -->\\r\\n\\t\\t\\t  \\t\\t\\r\\n\\t\\t\\t  \\t\\t<li>\\r\\n\\t\\t\\t\\t  \\t\\t <div class=\\\"mat-leaves\\\">\\r\\n\\t\\t\\t\\t  \\t\\t\\t<mat-icon class = \\\"description\\\">description</mat-icon>\\r\\n\\t\\t\\t\\t  \\t\\t\\t<label></label>\\r\\n\\t\\t\\t\\t  \\t\\t\\t<label class =\\\"leaf-lable\\\">{{node.name}}</label>\\r\\n\\t\\t\\t\\t  \\t\\t</div>\\r\\n\\t\\t\\t    \\t</li>\\r\\n\\t\\t\\t  </mat-tree-node>\\r\\n\\t\\t\\t  \\r\\n\\t\\t\\t<!--   This is the tree node template for expandable nodes -->\\r\\n\\t\\t\\t  <mat-nested-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding >\\r\\n\\t\\t\\t  \\t<li class=\\\"example-tree-container\\\">\\r\\n\\t\\t\\t      <div class=\\\"mat-tree-node\\\">\\r\\n\\t\\t\\t        <button mat-icon-button matTreeNodeToggle\\r\\n\\t\\t\\t                [attr.aria-label]=\\\"'Toggle ' + node.name\\\">\\r\\n\\t\\t\\t          <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n\\t\\t\\t            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n\\t\\t\\t          </mat-icon>\\r\\n\\t\\t\\t        </button>\\r\\n\\t\\t\\t        \\t<!-- <mat-checkbox class=\\\"checklist-leaf-node\\\"></mat-checkbox>&nbsp; -->\\r\\n\\t\\t\\t        \\t<mat-icon class =\\\"folder\\\">folder</mat-icon><label (click) =\\\"parentNodeClicked(node)\\\" class =\\\"node-label\\\">{{node.name}}</label>\\r\\n\\t\\t\\t      </div>\\r\\n\\t\\t\\t      \\r\\n\\t\\t\\t      <ul class=\\\"example-tree-nested-node\\\">\\r\\n\\t\\t\\t<!--       There is inline padding applied to this div using styles.\\r\\n\\t\\t\\t          This padding value depends on the mat-icon-button width.  -->\\r\\n\\t\\t\\t      <div [class.example-tree-invisible]=\\\"!treeControl.isExpanded(node)\\\"\\r\\n\\t\\t\\t          role=\\\"group\\\">\\r\\n\\t\\t\\t        <ng-container matTreeNodeOutlet></ng-container>\\r\\n\\t\\t\\t    </div>\\r\\n\\t\\t\\t    </ul>\\r\\n\\t\\t\\t    </li>\\r\\n\\t\\t\\t  </mat-nested-tree-node>\\r\\n\\t\\t\\t</mat-tree>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class =\\\"col-md-7\\\" *ngIf=\\\"!isDrugGeneric\\\">\\r\\n\\t\\t\\t<div class = \\\"row pl-2\\\">\\r\\n\\t\\t\\t\\t<label class =\\\"group-sub col-md-3\\\">Group Name</label>\\r\\n\\t\\t\\t\\t<div class =\\\"col-md-7\\\">\\r\\n\\t\\t\\t\\t\\t<input type = \\\"text\\\" class =\\\"form-control\\\" [(ngModel)] = \\\"group.groupName\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row pl-2\\\">\\r\\n\\t\\t\\t\\t<label class =\\\"group-sub col-md-3\\\">Description </label>\\r\\n\\t\\t\\t\\t<div class =\\\"col-md-7\\\">\\r\\n\\t\\t\\t\\t\\t<input type = \\\"text\\\" class =\\\"form-control\\\" [(ngModel)] = \\\"group.description\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row pl-2\\\">\\r\\n\\t\\t\\t\\t<label class =\\\"group-sub col-md-3\\\">Parent Group</label>\\r\\n\\t\\t\\t\\t<div class =\\\"col-md-7\\\">\\r\\n\\t\\t\\t\\t\\t<input type = \\\"text\\\" class =\\\"form-control\\\" disabled [(ngModel)] = \\\"parentGroup.groupName\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row pl-2\\\">\\r\\n\\t\\t\\t\\t<label class =\\\"group-sub col-md-3\\\">Sort Order</label>\\r\\n\\t\\t\\t\\t<div class =\\\"col-md-7\\\"> \\r\\n\\t\\t\\t\\t\\t<input type = \\\"text\\\" class =\\\"form-control\\\" [(ngModel)] = \\\"group.sortOrder\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row pl-2\\\">\\r\\n\\t\\t\\t\\t<label class =\\\"group-sub col-md-3\\\">Is Active</label>\\r\\n\\t\\t\\t\\t<div class =\\\"col-md-7\\\">\\r\\n\\t\\t\\t\\t\\t<input type = \\\"checkbox\\\" class =\\\"form-control is-active\\\" [(ngModel)] = \\\"group.active\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class = \\\"row pl-2\\\">\\r\\n\\t\\t\\t\\t<label class =\\\"group-sub col-md-3\\\">Service Code Type</label>\\r\\n\\t\\t\\t\\t<div class =\\\"col-md-7\\\">\\r\\n\\t\\t\\t\\t\\t<input type = \\\"text\\\" class =\\\"form-control\\\" [(ngModel)] = \\\"group.serviceCodeType\\\" name = \\\"serviceCodeType\\\" ngModel>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<!-- <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodeToggle matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    <mat-checkbox class=\\\"checklist-leaf-node\\\">{{node.children}}</mat-checkbox>\\r\\n    [checked]=\\\"checklistSelection.isSelected(node)\\\"\\r\\n                  (change)=\\\"todoLeafItemSelectionToggle(node)\\\"\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasNoContent\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button disabled></button>\\r\\n    <mat-form-field appearance=\\\"fill\\\">\\r\\n      <mat-label>New item...</mat-label>\\r\\n      <input matInput #itemValue placeholder=\\\"Ex. Lettuce\\\">\\r\\n    </mat-form-field>\\r\\n    <button mat-button >Save</button>\\r\\n    (click)=\\\"saveNode(node, itemValue.value)\\\"\\r\\n  </mat-tree-node>\\r\\n\\r\\n  <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\r\\n    <button mat-icon-button matTreeNodeToggle\\r\\n            [attr.aria-label]=\\\"'Toggle ' + node.children\\\">\\r\\n      <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\r\\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\r\\n      </mat-icon>\\r\\n    </button>\\r\\n    <mat-checkbox >{{node.item}}</mat-checkbox>\\r\\n    [checked]=\\\"descendantsAllSelected(node)\\\"\\r\\n                  [indeterminate]=\\\"descendantsPartiallySelected(node)\\\"\\r\\n                  (change)=\\\"todoItemSelectionToggle(node)\\\"\\r\\n    <button mat-icon-button ><mat-icon>add</mat-icon></button>\\r\\n    (click)=\\\"addNewItem(node)\\\"\\r\\n  </mat-tree-node>\\r\\n</mat-tree>\\r\\n -->\\r\\n</div>\\r\\n\";"],"sourceRoot":"webpack:///"}