{"version":3,"sources":["webpack:///src/app/clinical/allergy-recording/allergy-recording-routing.module.ts","webpack:///src/app/clinical/allergy-recording/allergy-recording.component.ts","webpack:///src/app/clinical/allergy-recording/allergy-recording.module.ts","webpack:///src/app/clinical/allergy-recording/masters/allergy-Recording.ts","webpack:///src/app/clinical/allergy-recording/masters/allergy-reaction-mapping.ts","webpack:///src/app/clinical/allergy-recording/masters/reaction-mapping.ts","webpack:///src/app/clinical/allergy-recording/masters/reaction.ts","webpack:///src/app/clinical/allergy-recording/services/allergy-reaction-mapping.service.ts","webpack:///src/app/clinical/allergy-recording/services/allergy-recording.service.ts","webpack:///src/app/clinical/allergy-recording/services/reaction-mapping.service.ts","webpack:///src/app/master/lookup-module/masters/lookup-category.ts","webpack:///src/app/clinical/allergy-recording/allergy-recording.component.css","webpack:///src/app/clinical/allergy-recording/allergy-recording.component.html"],"names":["routes","path","component","AllergyRecordingComponent","AllergyRecordingRoutingModule","NgModule","imports","RouterModule","exports","encounterService","route","lookupService","fb","allergyRecordingService","reactionMappingService","allergyReactionMappingService","datePipe","encounter","Encounter","isAllergyRecordingWithPatientControl","patient","Patient","isAllergyRecordingFound","lookupEntityList","Array","allergyRecordingForm","FormGroup","addAllergyForm","reactionForm","allergyType","LookupEntity","onSet","onSetType","onSetDate","Date","allergyStatus","resolvedDate","allergyRecordingList","createAllergyRecording","AllergyRecording","reactionList","reaction","Reaction","reactionMapList","reactionMappingList","createAllergyReactionMapping","AllergyReactionMapping","allergyRecording","allergyRecordingListByPatientId","isEnvironmental","isFood","isNonFormulaDrug","myControl","FormControl","allergyList","lookupCategoryList","category","LookupCategory","createLookupEntity","updatedAllergyRecording","allergyRecordingFound","allergyRecordingForUpdate","reactionMappingListForUpdate","ifFromClinicalDetail","filteredOptions","valueChanges","pipe","startWith","map","value","_filter","localStorage","getItem","JSON","parse","encounterId","reloadData","reloadForm","filterValue","toLowerCase","filter","option","lookupValue","includes","getLookupCategoryList","subscribe","data","getEncounterById","appointment","getAllergyRecordingByPatientId","mrn","console","log","getAllLookupEntities","getAllergyRecording","getReactionList","group","allergyId","allergicTo","currentRemarks","lookupId","description","active","saveReactions","setTimeout","storeAllergyRecording","forEach","reactionMap","ReactionMapping","createReactionMapping","push","visitId","visit","patientId","saveAllergyRecording","CreateAllergyRecording","alert","reset","count","reactionId","pos","findIndex","a","splice","showModal","lookupCategory","getLookupEntityListByCategoryId","categoryId","controls","setValue","createdBy","createdDate","versionNo","orderBy","updatedBy","updatedDate","transform","patchValue","allergy1","allergy2","onSet1","onSet2","onSetType1","onSetType2","allergyStatus1","allergyStatus2","updateAllergyRecording","res","history","back","event","EncounterService","ActivatedRoute","LookupService","FormBuilder","AllergyRecordingService","ReactionMappingService","AllergyReactionMappingService","DatePipe","Input","Output","Component","selector","template","animations","routerTransition","AllergyRecordingModule","declarations","CommonModule","PageHeaderModule","PatientControlModule","ReactiveFormsModule","MaterialModule","Visit","reactionMappingId","http","mainService","baseUrl","getBaseUrl","get","HttpClient","MainService","Injectable","providedIn","post","lookupEntity","reactionMapping","BaseEntity"],"mappings":"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","file":"default-src_app_clinical_allergy-recording_allergy-recording_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllergyRecordingComponent } from './allergy-recording.component';\r\n\nconst routes: Routes = [\n\t{path: '', component:AllergyRecordingComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AllergyRecordingRoutingModule { }\n","import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Encounter } from '../../encounter/masters/encounter';\r\nimport { EncounterService } from '../../encounter/services/encounter.service';\r\nimport { LookupCategory } from '../../master/lookup-module/masters/lookup-category';\r\nimport { LookupEntity } from '../../master/lookup-module/masters/lookup-entity';\r\nimport { LookupService } from '../../master/lookup-module/services/lookup.service';\r\nimport { Patient } from '../../patient/master/patient';\r\nimport { AllergyReactionMapping } from './masters/allergy-reaction-mapping';\r\nimport { AllergyRecording } from './masters/allergy-Recording';\r\nimport { ReactionMapping } from './masters/reaction-mapping';\r\nimport { Reaction } from './masters/reaction';\r\nimport { AllergyReactionMappingService } from './services/allergy-reaction-mapping.service';\r\nimport { AllergyRecordingService } from './services/allergy-recording.service';\r\nimport { ReactionMappingService } from './services/reaction-mapping.service';\r\nimport { routerTransition } from '../../router.animations';\r\n\r\n@Component({\r\n\tselector: 'app-allergy-recording',\r\n\ttemplateUrl: './allergy-recording.component.html',\r\n\tstyleUrls: ['./allergy-recording.component.css'],\r\n\tanimations: [routerTransition()]\r\n})\r\nexport class AllergyRecordingComponent implements OnInit {\r\n\r\n\tencounterList: Array<Encounter>;\r\n\tencounter: Encounter = new Encounter();\r\n\r\n\tencounterId: number;\r\n\tpatientId: string;\r\n\t@Input() isAllergyRecordingWithPatientControl = true;\r\n\t@Output() patientList;\r\n\t@Output() patient: Patient = new Patient();\r\n\tAllergyRecording: [];\r\n\tisAllergyRecordingFound: boolean = true;\r\n\tlookupEntityList: Array<LookupEntity> = new Array<LookupEntity>();\r\n\tallergyRecordingForm = new FormGroup({});\r\n\taddAllergyForm = new FormGroup({});\r\n\treactionForm = new FormGroup({});\r\n\tallergyType: LookupEntity = new LookupEntity;\r\n\tallergicTo: string;\r\n\tonSet: LookupEntity = new LookupEntity;\r\n\tonSetType: LookupEntity = new LookupEntity;\r\n\tonSetDate: Date = new Date();\r\n\tallergyStatus: LookupEntity = new LookupEntity;\r\n\tresolvedDate: Date = new Date();\r\n\tcurrentRemarks: string;\r\n\tallergyRecordingList: Array<AllergyRecording> = new Array<AllergyRecording>();\r\n\tallergyId: number;\r\n\tcreateAllergyRecording: AllergyRecording = new AllergyRecording();\r\n\treactionList: Array<Reaction> = [];\r\n\treaction: Reaction = new Reaction();\r\n\treactionMapList: Array<Reaction> = [];\r\n\treactionMappingId: number;\r\n\treactionMappingList: Array<ReactionMapping> = [];\r\n\tallergyReactionMappingList: any;\r\n\tcreateAllergyReactionMapping: AllergyReactionMapping = new AllergyReactionMapping();\r\n\tallergyRecording: AllergyRecording = new AllergyRecording();\r\n\tallergyRecordingListByPatientId: Array<AllergyRecording> = new Array<AllergyRecording>();\r\n\tshowModal: boolean;\r\n\tcontent: string;\r\n\ttitle: string;\r\n\tisEnvironmental: boolean = false;\r\n\tisFood: boolean = false;\r\n\tisNonFormulaDrug: boolean = false;\r\n\tmyControl = new FormControl();\r\n\tallergyList: Array<LookupEntity> = [];\r\n\tfilteredOptions: Observable<Array<LookupEntity>>;\r\n\tlookupCategoryList: Array<LookupCategory> = [];\r\n\tcategory: LookupCategory = new LookupCategory();\r\n\tcreateLookupEntity: LookupEntity = new LookupEntity();\r\n\tupdatedAllergyRecording: AllergyRecording = new AllergyRecording();\r\n\tallergyRecordingFound: boolean = false;\r\n\tallergyRecordingForUpdate: AllergyRecording = new AllergyRecording();\r\n\treactionMappingListForUpdate: Array<ReactionMapping> = [];\r\n\t@Input() ifFromClinicalDetail : boolean = false;\r\n\r\n\r\n\tconstructor(private encounterService: EncounterService,\r\n\t\tprivate route: ActivatedRoute, public lookupService: LookupService,\r\n\t\tpublic fb: FormBuilder, private allergyRecordingService: AllergyRecordingService,\r\n\t\tpublic reactionMappingService: ReactionMappingService,\r\n\t\tpublic allergyReactionMappingService: AllergyReactionMappingService,\r\n\t\tprivate datePipe: DatePipe\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\t\t//console.log(this.myControl.value)\r\n\t\tthis.filteredOptions = this.myControl.valueChanges.pipe(\r\n\t\t\tstartWith(''),\r\n\t\t\tmap(value => this._filter(value))\r\n\t\t);\r\n\r\n\r\n\t\tif (localStorage.getItem('encounter') != null) {\r\n\t\t\tthis.encounter = JSON.parse(localStorage.getItem('encounter'));\r\n\t\t}\r\n\t\tthis.encounterId = this.encounter.encounterId;\r\n\r\n\t\tthis.reloadData();\r\n\t\tthis.reloadForm();\r\n\t\t//console.log(this.lookupEntityList)\r\n\t\t//console.error(\"hii\",this.encounter.encounterId)\r\n\r\n\t}\r\n\tprivate _filter(value: string): Array<LookupEntity> {\r\n\t\tconst filterValue = value.toLowerCase();\r\n\r\n\t\treturn this.allergyList.filter(option => option.lookupValue.toLowerCase().includes(filterValue));\r\n\t}\r\n\treloadData() {\r\n\t\tthis.lookupService.getLookupCategoryList().subscribe(data => {\r\n\t\t\t//\tconsole.log(data, 'this is categoryList');\r\n\t\t\tthis.lookupCategoryList = data;\r\n\t\t})\r\n\t\tthis.encounterService.getEncounterById(this.encounterId).subscribe(data => {\r\n\t\t\tthis.encounter = data;\r\n\t\t\tthis.patient = this.encounter.appointment.patient;\r\n\t\t\t//console.log(this.patient)\r\n\t\t\tthis.allergyRecordingService.getAllergyRecordingByPatientId(this.patient.mrn).subscribe(data => {\r\n\t\t\t\tthis.allergyRecordingListByPatientId = data;\r\n\t\t\t\tconsole.log(this.allergyRecordingListByPatientId)\r\n\t\t\t})\r\n\r\n\t\t}),\r\n\r\n\t\t\tthis.lookupService.getAllLookupEntities().subscribe(data => {\r\n\t\t\t\tthis.lookupEntityList = data;\r\n\t\t\t\t//console.log(this.lookupEntityList, \"this is lookupEntityList\")\r\n\t\t\t}),\r\n\t\t\tthis.allergyRecordingService.getAllergyRecording().subscribe(data => {\r\n\t\t\t\tthis.allergyRecordingList = data;\r\n\t\t\t\tthis.allergyRecording = data;\r\n\t\t\t\t//console.log(this.allergyRecordingList)\r\n\t\t\t}),\r\n\t\t\tthis.allergyRecordingService.getReactionList().subscribe(data => {\r\n\t\t\t\tthis.reactionList = data;\r\n\t\t\t})\r\n\t}\r\n\tloadForm() {\r\n\t\tthis.reloadForm();\r\n\t}\r\n\treloadForm() {\r\n\t\tthis.allergyRecordingForm = this.fb.group({\r\n\t\t\tallergyId: new FormControl(null),\r\n\t\t\tallergyType: new FormControl(null),\r\n\t\t\tallergicTo: new FormControl(null),\r\n\t\t\tonSet: new FormControl(null),\r\n\t\t\tonSetType: new FormControl(null),\r\n\t\t\tonSetDate: new FormControl(null),\r\n\t\t\tallergyStatus: new FormControl(null),\r\n\t\t\tresolvedDate: new FormControl(null),\r\n\t\t\tcurrentRemarks: new FormControl(null)\r\n\t\t}),\r\n\t\t\tthis.addAllergyForm = this.fb.group({\r\n\t\t\t\tlookupId: new FormControl(null),\r\n\t\t\t\tlookupValue: new FormControl(null),\r\n\t\t\t\tcategory: new FormControl(null),\r\n\t\t\t\tdescription: new FormControl(null),\r\n\t\t\t\tactive: new FormControl(null)\r\n\t\t\t})\r\n\t\tthis.reactionForm = this.fb.group({});\r\n\r\n\t}\r\n\tonSubmit() {\r\n\t\t//console.log(this.reactionMapList)\r\n\t\tthis.saveReactions();\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.storeAllergyRecording(this.reactionMappingList)\r\n\t\t}, 1000);\r\n\t\t//this.gotoStoreAllergyRecording();\r\n\r\n\t}\r\n\tsaveReactions() {\r\n\t\tthis.reactionMappingList = []\r\n\t\tthis.reactionMapList.forEach((reaction) => {\r\n\t\t\tlet reactionMap = new ReactionMapping();\r\n\t\t\treactionMap.reaction = reaction;\r\n\t\t\treactionMap.encounter = this.encounter;\r\n\t\t\tconsole.log(reaction)\r\n\t\t\tthis.reactionMappingService.createReactionMapping(reactionMap).subscribe(data => {\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tthis.reactionMappingList.push(data)\r\n\t\t\t\t//alert(\"Data inserted Successfully\")\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t\t/*this.allergyReactionMappingService.createAllergyReactionMapping().subscribe(data =>{\r\n\t\t\tthis.allergyReactionMappingList = data;\r\n\t\t\r\n\t})*/\r\n\t}\r\n\r\n\tstoreAllergyRecording(reactionMappingList) {\r\n\t\t//console.log(reactionMappingList)\r\n\t\t//console.log(this.allergyRecordingForm.value)\r\n\t\t/*this.createAllergyRecording = allergyRecordingForm.value;\r\n\t\tthis.createAllergyRecording.allergyType= this.allergyType;\r\n\t\tthis.createAllergyRecording.allergicTo = this.allergicTo;\r\n\t\tthis.createAllergyRecording.onSet = this.onSet;\r\n\t\tthis.createAllergyRecording.onSetType = this.onSetType;\r\n\t\tthis.createAllergyRecording.onSetDate = this.onSetDate;\r\n\t\tthis.createAllergyRecording.allergyStatus = this.allergyStatus;\r\n\t\tthis.createAllergyRecording.resolvedDate = this.resolvedDate;*/\r\n\t\t//console.log(this.reactionMappingList,\"This is reactionMapping List Before\");\r\n\t\tthis.createAllergyRecording = this.allergyRecordingForm.value;\r\n\t\tthis.createAllergyRecording.reaction = this.reactionMappingList;\r\n\t\tthis.createAllergyRecording.encounterId = this.encounter;\r\n\t\tthis.createAllergyRecording.visitId = this.encounter.visit;\r\n\t\tthis.createAllergyRecording.patientId = this.patient;\r\n\r\n\t\t//console.log(this.reactionMappingList,\"This is reactionMapping List After\");\r\n\t\t//console.log(this.createAllergyRecording)\r\n\t\tthis.saveAllergyRecording();\r\n\r\n\t}\r\n\tsaveAllergyRecording() {\r\n\t\tthis.allergyRecordingService.CreateAllergyRecording(this.createAllergyRecording).subscribe(data => {\r\n\t\t\t//\tconsole.log(data);\r\n\t\t\talert(\"Allergy-Recording saved successfully\")\r\n\t\t\tthis.allergyRecordingForm.reset();\r\n\t\t\tthis.reactionForm.reset();\r\n\t\t\tthis.reactionMapList = [];\r\n\t\t\tthis.reloadData();\r\n\r\n\t\t})\r\n\t}\r\n\r\n\r\n\taddReaction(value, reaction) {\r\n\t\t//console.log(value)\r\n\t\t//console.log(reaction)\r\n\t\tif (value == true) {\r\n\t\t\tlet count = 0;\r\n\t\t\tthis.reactionMapList.forEach((data) => {\r\n\t\t\t\tif (data.reactionId == reaction.reactionId) {\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (count == 1) {\r\n\t\t\t\tconsole.log(\"Reaction is present\", this.reactionMapList)\r\n\t\t\t}\r\n\t\t\telse if (count == 0) {\r\n\t\t\t\tthis.reactionMapList.push(reaction);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet count = 0;\r\n\t\t\tthis.reactionMapList.forEach((data) => {\r\n\t\t\t\tif (data.reactionId == reaction.reactionId) {\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (count == 1) {\r\n\t\t\t\tlet pos = this.reactionMapList.findIndex(a => a.reactionId === reaction.reactionId);\r\n\t\t\t\t//console.log()\r\n\t\t\t\tthis.reactionMapList.splice(pos, 1);\r\n\t\t\t\t//console.log(this.reactionMapList)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\taddAllergy() {\r\n\t\tthis.showModal = true;\r\n\t\t//console.log(this.myControl.value)\r\n\t\t// Show-Hide Modal Check\r\n\t\t//this.content = \"This is content!!\"; // Dynamic Data\r\n\t\t//this.title = \"This is title!!\";    // Dynamic Data\r\n\t}\r\n\t//Bootstrap Modal Close event\r\n\thide() {\r\n\t\tthis.showModal = false;\r\n\t}\r\n\r\n\tgetAllergyList(lookupCategory) {\r\n\t\t//console.log(lookupCategory)\r\n\t\tif (lookupCategory != null) {\r\n\t\t\tthis.lookupService.getLookupEntityListByCategoryId(lookupCategory.categoryId).subscribe(data => {\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tthis.allergyList = data;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tsaveAllergyTypes(option) {\r\n\t\t//console.log(option)\r\n\t\tthis.allergyRecordingForm.controls.allergicTo.setValue(option);\r\n\t\t//console.log(this.allergyRecordingForm.value.allergicTo)\r\n\t}\r\n\r\n\tonAdd(addAllergyForm) {\r\n\r\n\t\tthis.createLookupEntity.createdBy = null;\r\n\t\tthis.createLookupEntity.createdDate = new Date();\r\n\t\tthis.createLookupEntity.versionNo = 0;\r\n\t\tthis.createLookupEntity.orderBy = null;\r\n\t\tthis.createLookupEntity.updatedBy = null;\r\n\t\tthis.createLookupEntity.updatedDate = new Date();\r\n\t\t//console.log(this.addAllergyForm.value);\r\n\t\tthis.createLookupEntity = this.addAllergyForm.value;\r\n\t\tthis.lookupService.createLookupEntity(this.createLookupEntity).subscribe(data => {\r\n\t\t\t//console.log(this.lookupEntityList, \"this is a new allergy\")\r\n\t\t\talert('Allergy added successfully')\r\n\t\t})\r\n\t\tthis.addAllergyForm.reset();\r\n\t}\r\n\r\n\tgotoEditAR(allergyRecording) {\r\n\t\tthis.allergyRecordingFound = true;\r\n\t\tlet onSetDate = this.datePipe.transform(allergyRecording.onSetDate, 'yyyy-MM-dd')\r\n\t\tlet resolvedDate = this.datePipe.transform(allergyRecording.resolvedDate, 'yyyy-MM-dd')\r\n\t\t//sf: DateFormat = new DateFormat(); \r\n\t\tthis.allergyRecordingForm.patchValue(allergyRecording)\r\n\t\tthis.allergyRecordingForUpdate = allergyRecording;\r\n\t\tthis.reactionMappingList = allergyRecording.reaction;\r\n\t\tthis.myControl.setValue(allergyRecording.allergicTo.lookupValue);\r\n\t\tthis.reactionMapList = [];\r\n\t\t//console.log(\"This is reactionMapping List\",this.reactionMappingList,this.reactionMapList)\r\n\t\tthis.reactionMappingList.forEach((data) => {\r\n\t\t\tthis.reactionMapList.push(data.reaction)\r\n\t\t})\r\n\t\tthis.allergyRecordingForm.controls.onSetDate.setValue(onSetDate);\r\n\t\tthis.allergyRecordingForm.controls.resolvedDate.setValue(resolvedDate);\r\n\t\t\r\n\t\tthis.reactionForm.reset;\r\n\t\t//this.allergyRecordingForm.controls.allergicTo.setValue(allergyRecording.lookupValue);\r\n\t}\r\n\r\n\r\n\tcompareAllergyType(allergy1: LookupCategory, allergy2: LookupCategory) {\r\n\t\treturn allergy1 && allergy2 ? allergy1.categoryId === allergy2.categoryId : allergy1 === allergy2;\r\n\t\t//return t1 && t2 ? t1.techId === t2.techId : t1 === t2;\r\n\t\t//console.log(allergy1.categoryId + '-' + allergy2.categoryId);\r\n\t}\r\n\tcompareOnSet(onSet1: LookupEntity, onSet2: LookupEntity) {\r\n\t\treturn onSet1 && onSet2 ? onSet1.lookupId === onSet2.lookupId : onSet1 === onSet2;\r\n\t}\r\n\tcompareOnsetType(onSetType1: LookupEntity, onSetType2: LookupEntity) {\r\n\t\treturn onSetType1 && onSetType2 ? onSetType1.lookupId === onSetType2.lookupId : onSetType1 === onSetType2;\r\n\t}\r\n\r\n\tcompareAllergyStatus(allergyStatus1: LookupEntity, allergyStatus2: LookupEntity) {\r\n\t\treturn allergyStatus1 && allergyStatus2 ? allergyStatus1.lookupId === allergyStatus2.lookupId : allergyStatus1 === allergyStatus2;\r\n\t}\r\n\r\n\tupdateAllergyRecording(allergyRecordingForm, reactionForm) {\r\n\t\t//this.saveReactions();\r\n\t\tthis.reactionMappingListForUpdate = []\r\n\t\tthis.reactionMapList.forEach((data) => {\r\n\t\t\tlet reaction = new ReactionMapping();\r\n\t\t\treaction.reaction = data;\r\n\t\t\treaction.encounter = this.encounter;\r\n\t\t\tthis.reactionMappingList.forEach((value) => {\r\n\t\t\t\tif (data.reactionId === value.reaction.reactionId) {\r\n\t\t\t\t\treaction = value;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.reactionMappingService.createReactionMapping(reaction).subscribe(data => {\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tthis.reactionMappingListForUpdate.push(data);\r\n\t\t\t\t//alert(\"Data inserted Successfully\")\r\n\t\t\t})\r\n\t\t})\r\n\t\tthis.allergyRecordingForUpdate.allergyType = this.allergyRecordingForm.value.allergyType;\r\n\t\tthis.allergyRecordingForUpdate.allergicTo = this.allergyRecordingForm.value.allergicTo;\r\n\t\tthis.allergyRecordingForUpdate.onSet = this.allergyRecordingForm.value.onSet;\r\n\t\tthis.allergyRecordingForUpdate.onSetType = this.allergyRecordingForm.value.onSetType;\r\n\t\tthis.allergyRecordingForUpdate.onSetDate = this.allergyRecordingForm.value.onSetDate;\r\n\t\tthis.allergyRecordingForUpdate.allergyStatus = this.allergyRecordingForm.value.allergyStatus;\r\n\t\tthis.allergyRecordingForUpdate.resolvedDate = this.allergyRecordingForm.value.resolvedDate;\r\n\t\tthis.allergyRecordingForUpdate.currentRemarks = this.allergyRecordingForm.value.currentRemarks;\r\n\t\tthis.allergyRecordingForUpdate.reaction = this.reactionMappingListForUpdate;\r\n\t\t\r\n\t\tthis.allergyRecordingForm.reset()\r\n\t\tconsole.log(this.allergyRecordingForUpdate)\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.allergyRecordingService.updateAllergyRecording(this.allergyRecordingForUpdate).subscribe(data => {\r\n\t\t\t\talert(\"allergyRecording updated\")\r\n\t\t\t\tthis.allergyRecordingFound = false;\r\n\t\t\t\tthis.reactionMapList = [];\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t})\r\n\t\t}, 3000)\r\n\r\n\t}\r\n\tcheckReaction(reaction) {\r\n\t\tlet res:boolean = false;\r\n\t\t//console.log(\"Reaction Updation is called\")\r\n\t\t//console.log(this.reactionMapList)\r\n\t\tthis.reactionMapList.forEach((data) => {\r\n\t\t\t// console.log(data.reactionId,reaction.reactionId)\r\n\t\t\tif (data.reactionId == reaction.reactionId) {\r\n\t\t\t\tres = true;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn res;\r\n\t}\r\n\tback() {\r\n\t\thistory.back();\r\n\t}\r\n\tcallPatientDetails(event) {\r\n\t\tthis.patient = event;\r\n\t\tconsole.log(event);\r\n\t}\r\n\tresetForm(){\r\n\t\tthis.allergyRecordingFound = false;\r\n\t\tthis.reactionMapList = [];\r\n\t\tthis.myControl = new FormControl();\r\n\t\tthis.allergyRecordingForm.reset();\r\n\t}\r\n\t\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AllergyRecordingRoutingModule } from './allergy-recording-routing.module';\nimport { AllergyRecordingComponent } from './allergy-recording.component';\nimport { PageHeaderModule } from '../../shared';\r\nimport { PatientControlModule } from '../../patient-control/patient-control.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\n\n@NgModule({\n  declarations: [\n    AllergyRecordingComponent\n  ],\n  imports: [\n    CommonModule,\n    AllergyRecordingRoutingModule,\n    PageHeaderModule,\n    PatientControlModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  exports: [\n\tAllergyRecordingComponent\n]\n})\nexport class AllergyRecordingModule { }\n","import { Patient } from \"../../../patient/master/patient\";\r\nimport { Encounter } from \"../../../encounter/masters/encounter\";\r\nimport { Visit } from \"../../../encounter/masters/visit\";\r\nimport { LookupCategory } from \"../../../master/lookup-module/masters/lookup-category\";\r\nimport { LookupEntity } from \"../../../master/lookup-module/masters/lookup-entity\";\r\n\r\nimport { ReactionMapping } from \"./reaction-mapping\";\r\n\r\n\r\nexport class AllergyRecording{\r\n\tallergyId: number;\r\n\tallergyType: LookupCategory = new LookupCategory;\r\n\tallergicTo: LookupEntity = new LookupEntity;\r\n\tonSet: LookupEntity = new LookupEntity;\r\n\tonSetType: LookupEntity = new LookupEntity;\r\n\tonSetDate: Date;\r\n\tallergyStatus: LookupEntity = new LookupEntity;\r\n\tresolvedDate: Date;\r\n\tvisitId: Visit = new Visit();\r\n\tencounterId : Encounter = new Encounter();\r\n\t//patient: Patient = new Patient;\r\n\treaction: Array<ReactionMapping> = new Array<ReactionMapping>();\r\n \tcurrentRemarks: String;\r\n    patientId: Patient = new Patient;\r\n}\r\n","import { AllergyRecording } from \"./allergy-Recording\";\r\nimport { ReactionMapping } from \"./reaction-mapping\";\r\n\r\nexport class AllergyReactionMapping{\r\n\tallergyReactionMappingId : number;\r\n\treactionMappingId : ReactionMapping = new ReactionMapping();\r\n\tallergyId : AllergyRecording = new AllergyRecording();\r\n\t\r\n}","import { Encounter } from \"../../../encounter/masters/encounter\";\r\nimport { AllergyRecording } from \"./allergy-Recording\";\r\nimport { Reaction } from \"./reaction\";\r\n\r\n\r\nexport class ReactionMapping{\r\n\treactionMappingId: number;\r\n\treaction : Reaction = new Reaction;\r\n\tencounter: Encounter = new Encounter;\r\n}","export class Reaction{\r\n\treactionId: number;\r\n\treactionName: String;\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MainService } from '../../../main.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AllergyReactionMappingService {\r\n\tprivate baseUrl = '';\r\n\t\r\n\tconstructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl(); }\r\n\t\r\n\tcreateAllergyReactionMapping(){\r\n\t\treturn this.http.get(`${this.baseUrl}/allergyReactionMapping`);\r\n\t}\r\n}\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\r\nimport { MainService } from '../../../main.service';\r\n\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllergyRecordingService {\r\n   \n\t\tprivate baseUrl = '';\n\n  constructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n\r\n\tgetAllergyRecording():Observable<any>{\r\n\t\treturn this.http.get(`${this.baseUrl}/allergyRecording/get`)\r\n\t\t\r\n\t}\r\n\t getAllergyRecordingById(allergyId : number): any {\r\n\treturn this.http.get(`${this.baseUrl}/allergyRecording/getById/${allergyId}`);\r\n }\r\n\t\r\n\tCreateAllergyRecording(allergyRecording):Observable<any>{\r\n\t\treturn this.http.post(`${this.baseUrl}/allergyRecording/add`,allergyRecording)\r\n\t}\r\n\r\n\tgetReactionList():Observable<any>{\r\n\t\treturn this.http.get(`${this.baseUrl}/reactions/get`)\r\n\t}\r\n\t\r\n\t getAllergyRecordingByPatientId(patientId):any {\r\n        return this.http.get(`${this.baseUrl}/allergyRecording/getByPatientId/${patientId}`);\r\n    }\r\n\tcreateLookupentity(lookupEntity):Observable<any>{\r\n\t\treturn this.http.post(`${this.baseUrl}/lookupEntity/add`,lookupEntity);\r\n\t}\r\n\tupdateAllergyRecording(allergyRecording): Observable<any>{\r\n\t\treturn this.http.post(`${this.baseUrl}/allergyRecording/update`, allergyRecording);\r\n\t}\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MainService } from '../../../main.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReactionMappingService {\r\n\tprivate baseUrl = '';\r\n\tconstructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl(); }\r\n\tgetReactionMappingList(){\r\n\t\treturn this.http.get(`${this.baseUrl}/reactionMapping/get`);\r\n\t\t\r\n\t}\r\n\tcreateReactionMapping(reactionMapping):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/reactionMapping/add`,reactionMapping)\r\n\t}\r\n}","import { BaseEntity } from \"../../masters/base-entity\";\r\n\r\n\r\nexport class LookupCategory extends BaseEntity{\t\n\tcategoryId: number;\t\n\tcategoryCode: number;\n\tcategoryName: string ;\n\tactive: boolean;\r\n\t\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGxlcmd5LXJlY29yZGluZy5jb21wb25lbnQuY3NzIn0= */\";","export default \" <div [@routerTransition]  *ngIf = \\\"!ifFromClinicalDetail\\\">\\n\\t <div *ngIf = \\\"isAllergyRecordingWithPatientControl\\\">\\n\\t \\t<app-page-header [mainhead]=\\\"'Dashboard'\\\"\\n\\t\\t[heading]=\\\"'AllergyRecording'\\\" [mainheadLink] = \\\"'/dashboard'\\\" [icon]=\\\"'fa-flask'\\\"></app-page-header>\\n\\t \\t<div class=\\\"col-md-12 navbar-nav bg-info mr-auto\\\">\\n\\t \\t\\t<div class=\\\"bg-info\\\">\\n\\t\\t\\t\\t<app-patient-control  (patientDetails) = \\\"callPatientDetails($event)\\\" [patient]=\\\"patient\\\"></app-patient-control>\\n\\t\\t\\t</div>\\n\\t \\t</div> \\n\\t </div>\\n</div> \\n <div class=\\\"card\\\">\\n<div class=\\\" row col-md-12  mr-auto mt-1\\\">\\n\\t<div class=\\\"col-md-8\\\" >\\n\\t<h3>Existing Allergy</h3>\\n\\t\\t<table border=\\\"1px solid\\\" width=\\\"100%\\\">\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th Style=\\\"font-size:13px\\\">Visit No</th>\\n\\t\\t\\t\\t\\t<th Style=\\\"font-size:13px\\\">Allergy Category</th>\\n\\t\\t\\t\\t\\t<th Style=\\\"font-size:13px\\\">Allergy To</th>\\n\\t\\t\\t\\t\\t<th Style=\\\"font-size:13px\\\">Status</th>\\n\\t\\t\\t\\t\\t<th Style=\\\"font-size:13px\\\">Actions</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let allergy of allergyRecordingListByPatientId\\\">\\n\\t\\t\\t\\t<ng-container *ngIf=\\\"encounter.patient.mrn == allergy.encounterId.patient.mrn\\\">\\n\\t\\t\\t\\t\\t<td>{{allergy.encounterId.visit.visitId}}</td>\\n\\t\\t\\t\\t\\t<td>{{allergy.allergyType.categoryName}}</td>\\n\\t\\t\\t\\t\\t<td>{{allergy.allergicTo.lookupValue}}</td>\\n\\t\\t\\t\\t\\t<td>{{allergy.allergyStatus.lookupValue}}</td>\\n\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" (click)=\\\"gotoEditAR(allergy)\\\">\\n\\t\\t\\t\\t\\t\\t\\tEdit </button></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t\\t<!-- <form>\\n\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t<input type=\\\"text\\\" MatInput [matAutocomplete]=\\\"auto\\\"/>\\n\\t\\t\\t\\t<mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let option of options\\\" [value]=\\\"option\\\">\\n\\t\\t\\t\\t\\t{{option}}\\n\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t</mat-autocomplete>\\n\\t\\t\\t</mat-form-field>\\n\\t\\t</form> -->\\n\\n\\t</div>\\n\\t<!-- <div class=\\\"col-md-4 navbar-nav\\\"> -->\\n\\t<div class=\\\"col-md-4  border border-dark\\\" >\\n\\t<form [formGroup] = \\\"allergyRecordingForm\\\" >\\n\\t\\t<div class=\\\"row border border-dark\\\" >\\n\\t\\t\\t\\t<input type=\\\"checkbox\\\">No Known Allergies\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row border border-dark border-top-0\\\">\\n\\t\\t\\t\\t<label class=\\\"col-md-9 float-left\\\">Allergy Details</label>\\n        \\t\\t<button class=\\\"btn-info\\\" Style=\\\"font-size:12px\\\" (click) =\\\"resetForm()\\\">New Allergy</button>\\t\\n        \\t</div>\\n\\t\\t<table class=\\\"m-1 p-1\\\" width=\\\"100%\\\">\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">Allergy Type</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t<select Style=\\\"font-size:13px\\\" formControlName=\\\"allergyType\\\" [compareWith]=\\\"compareAllergyType\\\"  (ngModelChange) = \\\"getAllergyList($event)\\\">\\n\\t\\t\\t\\t\\t\\t<option [ngValue]=null>--select--</option>\\n\\t\\t\\t\\t\\t\\t<option>Drug</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let a of lookupCategoryList\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"a.categoryId==224 || a.categoryId==225 || a.categoryId==226\\\"  [ngValue] = \\\"a\\\" >{{a.categoryName}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</select></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">Allergic To</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group input-group\\\">\\n\\t\\t                     <input type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t           placeholder=\\\"\\\"\\n\\t\\t\\t\\t\\t\\t           aria-label=\\\"Number\\\"\\n\\t\\t\\t\\t\\t\\t           matInput\\n\\t\\t\\t\\t\\t\\t           [formControl] =\\\"myControl\\\"\\n\\t\\t\\t\\t\\t\\t           [matAutocomplete]=\\\"auto\\\">\\n\\t\\t\\t\\t\\t\\t    <mat-autocomplete   #auto=\\\"matAutocomplete\\\" style =\\\"width: 300px;\\\">\\n\\t\\t\\t\\t\\t\\t      <mat-option Style= \\\"font-size:13px\\\" *ngFor=\\\"let option of filteredOptions |async\\\" (click) = \\\"saveAllergyTypes(option)\\\" [value]=\\\"option.lookupValue\\\">\\n\\t\\t\\t\\t\\t\\t        {{option.category.categoryName}}&nbsp;,{{option.lookupValue}}\\n\\t\\t\\t\\t\\t\\t      </mat-option>\\n\\t\\t\\t\\t\\t\\t    </mat-autocomplete>\\n\\t\\t                    <div class=\\\"input-group-append\\\">\\n\\t\\t                        <span class=\\\"input-group-text\\\" (click)=\\\"addAllergy()\\\"> <i class=\\\"fa fa-plus\\\"></i> </span>\\n\\t\\t                    </div>\\n\\t\\t                </div>\\n\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">On Set</td>\\n\\t\\t\\t\\t\\t<td >\\n\\t\\t\\t\\t\\t\\t<select Style=\\\"font-size:13px\\\" formControlName=\\\"onSet\\\" [compareWith]=\\\"compareOnSet\\\">\\n\\t\\t\\t\\t\\t\\t<option value =null>--select--</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let a of lookupEntityList\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"a.category.categoryId==227\\\" [ngValue]=\\\"a\\\" [value]=\\\"\\\" >{{a.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">OnSet Type</td>\\n\\t\\t\\t\\t\\t<td><select Style=\\\"font-size:13px\\\" formControlName=\\\"onSetType\\\" [compareWith]=\\\"compareOnsetType\\\">\\n\\t\\t\\t\\t\\t\\t<option value =null>--select--</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let a of lookupEntityList\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"a.category.categoryId==228\\\" [ngValue]=\\\"a\\\" >{{a.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">Onset Date</td>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\"><input type=\\\"date\\\" formControlName=\\\"onSetDate\\\"></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">Allergy Status</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<select Style=\\\"font-size:13px\\\" formControlName=\\\"allergyStatus\\\" [compareWith]=\\\"compareAllergyStatus\\\">\\n\\t\\t\\t\\t\\t\\t<option value =null>--select--</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let a of lookupEntityList\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option *ngIf=\\\"a.category.categoryId==229\\\" [ngValue]=\\\"a\\\">{{a.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\">Resolved Date</td>\\n\\t\\t\\t\\t\\t<td Style=\\\"font-size:13px\\\"><input type=\\\"date\\\" formControlName=\\\"resolvedDate\\\"></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t\\t\\t\\t\\n\\t\\t\\n\\t\\t<h6 Style=\\\"font-weight:bold; font-size: 13px\\\">Reactions</h6>\\n\\t\\t<div class=\\\" border border-dark\\\" Style=\\\"overflow:auto;height:200px\\\">\\n\\t\\t<form [formGroup]=\\\"reactionForm\\\">\\n\\t\\t<div>\\n\\t\\t\\t\\t<div Style=\\\"font-size:13px\\\" *ngFor=\\\"let reaction of reactionList\\\">\\n\\t\\t\\t\\t\\t<div class=\\\" row border border-dark border-top-0\\\" Style=\\\"font-size:13px\\\">\\n\\t\\t\\t\\t\\t<input  class=\\\"col-md-2\\\" type=\\\"checkbox\\\" name =\\\"reaction\\\" [checked]=\\\"checkReaction(reaction)\\\"  (click)=\\\"addReaction($event.target.checked,reaction)\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"col-md-10\\\"  Style=\\\"font-size:13px\\\">{{reaction.reactionName}}</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t</form>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<br>\\n\\t\\t<label>Remarks</label>\\n\\t\\t<div>\\n\\t\\t\\t<textarea class=\\\"mr-1 ml-1\\\" cols=\\\"37\\\" rows=\\\"1\\\" formControlName=\\\"currentRemarks\\\"></textarea>\\n\\t\\t</div>\\n\\t\\t<div>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn-primary m-1 h6\\\" type=\\\"submit\\\" *ngIf =\\\"!allergyRecordingFound\\\" (click)=\\\"onSubmit()\\\">Save Allergy</button>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn-primary m-1 h6\\\" type=\\\"submit\\\" *ngIf =\\\"allergyRecordingFound\\\" (click)=\\\"updateAllergyRecording()\\\">Update Allergy</button>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t\\t\\n\\t\\t\\n\\t\\t<div>\\n\\t\\t<!-- The Modal -->\\n  <div class=\\\"modal\\\" id=\\\"myModal\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n      <div class=\\\"modal-content\\\">\\n      \\n        <!-- Modal Header -->\\n        <div class=\\\"modal-header bg-dark text-white\\\">\\n          <h4 class=\\\"modal-title\\\">Allergy Details</h4>\\n          <button type=\\\"button\\\" class=\\\"close text-white\\\" data-dismiss=\\\"modal\\\" (click) = \\\"hide()\\\">&times;</button>\\n        </div>\\n        \\n        <!-- Modal body -->\\n        <div class=\\\"modal-body col-md-12\\\">\\n        <form [formGroup]= \\\"addAllergyForm\\\" >\\n        <div class=\\\"row\\\">\\n        \\t<div class=\\\"col-md-6\\\">\\n         \\t\\t<label class=\\\"col-md-6\\\">Allergy Name</label>\\n         \\t\\t<input class=\\\"col-md-6\\\" type=\\\"text\\\" formControlName=\\\"lookupValue\\\">\\n         \\t</div>\\n         \\t<div class=\\\"col-md-6\\\">\\n         \\t\\t<label class=\\\"col-md-6\\\">Allergy Type</label>\\n         \\t\\t<select class=\\\"col-md-6\\\" formControlName=\\\"category\\\" >\\n\\t         \\t\\t<option [ngValue]=null>---select---</option>\\n\\t         \\t\\t<option [ngValue]=null>Drug</option>\\n\\t         \\t\\t<ng-container *ngFor=\\\"let look of lookupCategoryList\\\">\\n\\t         \\t\\t\\t<option *ngIf=\\\"look.categoryId==224 || look.categoryId==225 || look.categoryId==226\\\"  [ngValue] = \\\"look\\\">{{look.categoryName}}</option>\\n\\t         \\t\\t</ng-container>\\n         \\t\\t</select>\\n         \\t</div>\\n         </div>\\n         <div class=\\\"row\\\">\\n         <div class=\\\"col-md-6\\\">\\n         \\t<label class=\\\"col-md-6\\\">Remarks</label>\\n         \\t<textarea class=\\\"col-md-6\\\" formControlName=\\\"description\\\" rows=\\\"1\\\"></textarea>\\n         </div>\\n         <div class=\\\"col-md-6\\\">\\n         \\t<label class=\\\"col-md-3\\\">Active</label>\\n         \\t<input type=\\\"checkbox\\\" formControlName= \\\"active\\\">\\n         </div>\\n         </div>\\n         </form>\\n        </div>\\n        \\n        <!-- Modal footer -->\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-success\\\" type =\\\"submit\\\" (click)=\\\"onAdd(addAllergyForm)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click) = \\\"hide()\\\">Close</button>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n</div>\\n\\n\\n\\n\\n\";"]}