{"version":3,"sources":["webpack:///src/app/enterprise-user/components/enterprise-user-create/enterprise-user-create.component.ts","webpack:///src/app/enterprise-user/components/enterprise-user-list/enterprise-user-list.component.ts","webpack:///src/app/enterprise-user/components/enterprise-user-mapping/enterprise-user-mapping.component.ts","webpack:///src/app/enterprise-user/components/role-master-create/role-master-create.component.ts","webpack:///src/app/enterprise-user/components/role-master-list/role-master-list.component.ts","webpack:///src/app/enterprise-user/components/user-role-create/user-role-create.component.ts","webpack:///src/app/enterprise-user/components/user-role-list/user-role-list.component.ts","webpack:///src/app/enterprise-user/enterprise-user-routing.module.ts","webpack:///src/app/enterprise-user/enterprise-user.component.ts","webpack:///src/app/enterprise-user/enterprise-user.module.ts","webpack:///src/app/enterprise-user/masters/privileges.ts","webpack:///src/app/enterprise-user/masters/role-master.ts","webpack:///src/app/enterprise-user/masters/role-privileges.ts","webpack:///src/app/enterprise-user/masters/user-branch-department-mapping.ts","webpack:///src/app/enterprise-user/masters/user-branch-mapping.ts","webpack:///src/app/enterprise-user/masters/user-branch-service-cente-mapping.ts","webpack:///src/app/enterprise-user/masters/user-branch-store-mapping.ts","webpack:///src/app/enterprise-user/masters/user-role-details.ts","webpack:///src/app/enterprise-user/pipes/enterprise-user.pipe.ts","webpack:///src/app/enterprise-user/services/feature.service.ts","webpack:///src/app/enterprise-user/services/role-master.service.ts","webpack:///src/app/enterprise-user/services/role-privilege.service.ts","webpack:///src/app/enterprise-user/services/user-role.service.ts","webpack:///src/app/master/unit-master/services/employee-master.service.ts","webpack:///src/app/enterprise-user/components/enterprise-user-create/enterprise-user-create.component.css","webpack:///src/app/enterprise-user/components/enterprise-user-list/enterprise-user-list.component.css","webpack:///src/app/enterprise-user/components/enterprise-user-mapping/enterprise-user-mapping.component.css","webpack:///src/app/enterprise-user/components/role-master-create/role-master-create.component.css","webpack:///src/app/enterprise-user/components/role-master-list/role-master-list.component.css","webpack:///src/app/enterprise-user/components/user-role-create/user-role-create.component.css","webpack:///src/app/enterprise-user/components/user-role-list/user-role-list.component.css","webpack:///src/app/enterprise-user/enterprise-user.component.css","webpack:///src/app/enterprise-user/components/enterprise-user-create/enterprise-user-create.component.html","webpack:///src/app/enterprise-user/components/enterprise-user-list/enterprise-user-list.component.html","webpack:///src/app/enterprise-user/components/enterprise-user-mapping/enterprise-user-mapping.component.html","webpack:///src/app/enterprise-user/components/role-master-create/role-master-create.component.html","webpack:///src/app/enterprise-user/components/role-master-list/role-master-list.component.html","webpack:///src/app/enterprise-user/components/user-role-create/user-role-create.component.html","webpack:///src/app/enterprise-user/components/user-role-list/user-role-list.component.html","webpack:///src/app/enterprise-user/enterprise-user.component.html"],"names":["EnterpriseUserCreateComponent","userService","formBuilder","employeeService","lookupService","alertService","router","employee","FormControl","confPassword","submitted","enterpriseUser","EnterpriseUser","name","wrongPassword","show","registerForm","FormGroup","employeeList","userFile","File","updateUser","img","reloadForm","reloadData","employeeFilterList","valueChanges","pipe","startWith","map","value","_filter","filterValue","toLowerCase","filter","option","employeeFullName","includes","localStorage","getItem","JSON","parse","removeItem","password","atob","patchValue","setValue","controls","employeeNo","getEmployeeByEmployeeNo","subscribe","data","console","log","getLookupEntityListByCategoryId","lookupEntityList","getEmployee","group","id","userName","Validators","userFullName","isActive","globalProject","globalProjectStore","globalStore","globalBranch","globalDepartment","globalServiceCenter","emailId","userType","pswModifiedDate","Date","maxFailedLoginAttempt","isPswExpires","pswExpiryDays","pswChangeReqd","imageName","remarks","image","userType2","lookupId","formData","FormData","append","stringify","createEnterpriseUserWithImageInServer","success","err","error","getMessage","createUser","navigate","employeeId","email","fileInput","file","files","EnterpriseUserService","FormBuilder","EmployeeService","LookupService","AlertService","Router","Component","selector","template","animations","routerTransition","EnterpriseUserListComponent","getEnterpriseUserList","enterpriseUserList","user","setItem","history","back","EnterpriseUserMappingComponent","userMappingService","branchService","departmentService","serviceCenterService","storeService","commonService","route","branchList","Array","userBranchList","branchesForStore","userBranchForCreate","UserBranchMapping","dummyBranch","Branch","userBranchFound","userBranch","dummyUserBranchMapping","departmentList","userBranchDepartmentMappingList","departmentForStore","userBranchDepartmentForCreate","UserBranchDepartmentMapping","showDepartments","serviceCenterList","userBranchServiceCenterMappingList","serviceCenterForStore","userBranchServiceCenterForCreate","UserBranchServiceCenterMapping","storeList","userBranchStoreMappingList","storeForStore","userBranchStoreForCreate","UserBranchStoreMapping","getUser","getEnterpriseUserById","getBranch","getUserBranchMappingByUserId","length","getAllDepartments","getServiceCenter","getStoreList","b","bool","forEach","branch","push","userForm","branchIdList","values","Object","i","j","gotoCreateUserBranchMapping","getUserBranchMappingByBranch","update","createUserBranchMapping","updateUserBranchMapping","getDepartmentsByBranchId","getUserBranchDepartmentByUserBranchId","getUserBranchServiceCenterByUserBranchId","getUserBranchStoreByUserBranchId","userBranchMapping","d","departmentId","department","userDepartmentForm","branchDepartmentIdList","gotoStoreUserDepartment","getUserBranchDepartmentMappingByDepartment","updateUserDepartment","createUserDepartmentMapping","userDepartmentForCreate","createUserBranchDepartmentMapping","updateUserBranchDepartmentMapping","serviceCenter","serviceCenterId","serviceCenterForm","userBranchServiceCenterIdList","gotoStoreUserServiceCenter","getUserBranchServiceCenterMappingByServiceCenter","updateUserServiceCenterMapping","createUserServiceCenterMapping","createUserBranchServiceCenterMapping","updateUserBranchServiceCenterMapping","store","storeAccessoiresForm","userBranchStoreIdList","gotoStoreUserStoreAccessoires","getUserBranchStoreMappingByStore","updateUserStoreMapping","createUserStoreAccessoiresMapping","userBranchStoreAccessoriesForCreate","createUserBranchStoreMapping","updateUserBranchStoreMapping","UserMappingService","BranchServiceService","DepartmentService","StoreService","CommonSecurityService","ActivatedRoute","RoleMasterCreateComponent","rolePrivilegeService","featureService","roleMasterService","roleMaster","RoleMaster","featureModuleList","isFeatureModule","featureList","selectedFeature","size","privilegeListForStore","isStoredFeature","modelFeaturePrivilegeList","roleForUpdate","isUpdateRequest","rolePrivilegeList","rolePrivilegeForStore","RolePrivileges","isRolePrivilegeExist","flag","roleForm","getRolePrivilegeByRoleId","roleMasterId","getFeaturesByParentId","message","roleName","description","active","type","createRoleMaster","parentFeature","getModelFeaturePrivilegesListByParentFeatureId","featureId","getFeaturesByFeatureType","featureType","checked","modelFeaturePrivilege","index","indexOf","splice","rolePrivilege","privileges","privilege","createRolePrivilege","feature","featureName","reset","updateRoleMaster","modelFeatruePrivilege","res","privilegesId","updateRolePrivilege","RolePrivilegeService","FeatureService","RoleMasterService","RoleMasterListComponent","searchRolePrivilege","roleMasterList","page","pageSize","getRoleMasterList","len","UserRoleCreateComponent","userRoleService","roleService","roleMasterListForStore","userRoleList","isStoredRole","userId","snapshot","params","loadUserRoleList","getUserRoleListByUserId","showUserRoleForExisting","role","insert","userRoleMapping","userRole","UserRoleDetails","userRoleDetailsId","createUserRole","UserRoleService","UserRoleListComponent","getUserRoleList","routes","path","component","EnterpriseUserComponent","EnterpriseUserRoutingModule","NgModule","imports","RouterModule","exports","EnterpriseUserModule","declarations","EnterpriseUserPipe","CommonModule","NgbModule","FormsModule","StatModule","ReactiveFormsModule","PageHeaderModule","MaterialModule","Privileges","rolePrivilegeId","Department","BaseEntity","ServiceCenter","Store","args","val","rval","username","Pipe","http","mainService","baseUrl","getBaseUrl","get","featureTypeId","HttpClient","MainService","Injectable","providedIn","post","parentId","empNo","put"],"mappings":"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","file":"src_app_enterprise-user_enterprise-user_module_ts-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { UserService } from '../../../login/service/user.service';\r\nimport { LookupEntity } from '../../../master/lookup-module/masters/lookup-entity';\r\nimport { LookupService } from '../../../master/lookup-module/services/lookup.service';\r\nimport { EmployeeService } from '../../../master/unit-master/services/employee-master.service';\r\nimport { EnterpriseUser } from '../../masters/enterprise-user';\r\nimport { EnterpriseUserService } from '../../services/enterprise-user.service';\r\nimport { Employee } from '../../../master/unit-master/masters/Employee';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { AlertService } from '../../../layout/alert/alert.service';\r\n\n@Component({\n\tselector: 'app-enterprise-user-create',\n\ttemplateUrl: './enterprise-user-create.component.html',\n\tstyleUrls: ['./enterprise-user-create.component.css'],\n\tanimations: [routerTransition()]\n})\nexport class EnterpriseUserCreateComponent implements OnInit {\n\temployee = new FormControl();\n\tconfPassword = new FormControl();\n\tsubmitted = false;\n\tenterpriseUser: EnterpriseUser = new EnterpriseUser();\n\tlookupEntityList: Array<LookupEntity>;\n\tname = \"\";\n\twrongPassword = false;\n\tshow: boolean = true;\n\tregisterForm = new FormGroup({});\n\temployeeList: Array<Employee> = [];\n\tpublic userFile: any = File;\n\tupdateUser = new EnterpriseUser();\n\timg = \"./assets/images/patient.jpg\";\n\temployeeFilterList: Observable<Employee[]>;\n\n\tconstructor(private userService: EnterpriseUserService,\n\t\tprivate formBuilder: FormBuilder, private employeeService: EmployeeService,\n\t\tprivate lookupService: LookupService,\n\t\tprivate alertService: AlertService,\n\t\tprivate router: Router\n\t) { }\n\n\n\tngOnInit(): void {\n\t\t//this.reloadData();\n\t\tthis.reloadForm();\n\t\tthis.reloadData();\n\t\tthis.employeeFilterList = this.employee.valueChanges.pipe(\n\t\t\tstartWith(''),\n\t\t\tmap(value => this._filter(value))\n\t\t);\n\t}\n\tprivate _filter(value: string): Array<Employee> {\n\t\tconst filterValue = value.toLowerCase();\n\n\t\treturn this.employeeList.filter(option => option.employeeFullName.toLowerCase().includes(filterValue));\n\t}\n\n\treloadData() {\n\t\tif (localStorage.getItem('userForUpdate')) {\n\t\t\tthis.updateUser = JSON.parse(localStorage.getItem('userForUpdate'));\n\t\t\tlocalStorage.removeItem('userForUpdate');\n\t\t\tthis.updateUser.password = atob(this.updateUser.password);\n\t\t\tthis.registerForm.patchValue(this.updateUser);\n\t\t\tthis.confPassword.setValue(this.registerForm.controls.password.value);\n\t\t\tif (this.updateUser.employeeNo != null) {\n\t\t\t\tthis.employeeService.getEmployeeByEmployeeNo(this.updateUser.employeeNo).subscribe(data => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tthis.employee.setValue(data.employeeFullName);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t//console.log(document.getElementById(\"file-input\"));\n\t\t\t//this.registerForm.controls.image.setValue(\"742d40f04377342484891bbad4706d63_1631975647903.jpg\")\n\t\t}\n\t\tthis.lookupService.getLookupEntityListByCategoryId(179).subscribe(data => {\n\t\t\tthis.lookupEntityList = data;\n\t\t\t//console.log(this.lookupEntityList)\n\t\t});\n\t\tthis.employeeService.getEmployee().subscribe(data => {\n\t\t\tthis.employeeList = data;\n\t\t})\n\n\t}\n\treloadForm() {\n\t\tthis.registerForm = this.formBuilder.group({\n\t\t\tid: [null],\n\t\t\tuserName: [null, Validators.required],\n\t\t\tuserFullName: [null, Validators.required],\n\t\t\tpassword: [\"\", Validators.required],\n\t\t\tisActive: [null, Validators.required],\n\t\t\tglobalProject: [null, Validators.required],\n\t\t\tglobalProjectStore: [null, Validators.required],\n\t\t\tglobalStore: [null, Validators.required],\n\t\t\t//globalPurOrg: [null,Validators.required],\n\t\t\tglobalBranch: [null, Validators.required],\n\t\t\tglobalDepartment: [null, Validators.required],\n\t\t\tglobalServiceCenter: [null, Validators.required],\n\t\t\temailId: [null, Validators.required],\n\t\t\temployeeNo: [null, Validators.required],\n\t\t\temployee: [null, Validators.required],\n\t\t\tuserType: [null, Validators.required],\n\t\t\tpswModifiedDate: [new Date(), Validators.required],\n\t\t\tmaxFailedLoginAttempt: [null, Validators.required],\n\t\t\tisPswExpires: [null, Validators.required],\n\t\t\tpswExpiryDays: [null, Validators.required],\n\t\t\tpswChangeReqd: [null, Validators.required],\n\t\t\timageName: [null, Validators.required],\n\t\t\tremarks: [null, Validators.required],\n\t\t\timage: [null]\n\t\t\t/*aliasName: [null, Validators.required],\n\t\t\tfatherName: [null, Validators.required],\n\t\t\tdob:[null,Validators.required],\n\t\t\t\tuserStatus: [null,],\n\t\t\t\tgender:[null,],\n\t\t\tuserTypeStatus:[null,],\n\t\t\t\tmaritalStatus:[null,],\n\t\t\tnationality : [null,],\n\t\t\tuserCategory:[null,],\n\t\t\t\tbloodGroup : [null,],\n\t\t\t  userHealthCardValidUpto :[null,Validators.required],*/\n\n\t\t})\n\t}\n\tcompareUserType(userType: LookupEntity, userType2: LookupEntity) {\n\t\treturn userType && userType2 ? userType.lookupId === userType2.lookupId : userType === userType2;\n\t}\n\n\tcreateUser() {\n\t\tthis.enterpriseUser = new EnterpriseUser();\n\t\tthis.enterpriseUser = this.registerForm.value;\n\t\tthis.enterpriseUser.id = null;\n\n\t\tvar formData = new FormData();\n\t\tlet enterpriseUser = this.registerForm.value;\n\n\t\tformData.append('enterpriseUser', JSON.stringify(this.enterpriseUser))\n\t\tformData.append('image', this.userFile);\n\t\t//console.log(formData)\n\t\tthis.userService.createEnterpriseUserWithImageInServer(formData).subscribe(\n\t\t\tdata => {\n\t\t\t\t//console.log(data);\n\t\t\t\tthis.alertService.success(\"Successfully inserted !!!!\")\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tthis.alertService.error(err.getMessage())\n\t\t\t}\n\n\t\t)\n\n\n\t\t/*this.userService.createEnterpriseUserWithImage(formData).subscribe(data =>{\n\t\t\tconsole.log(data);\n\t\t\talert(\"Successfully inserted!!!!\")\n\t\t})*/\n\n\n\n\t\t/*if(this.confPassword.value == this.registerForm.value.password){\n\t\t\tconsole.warn(this.enterpriseUser);\n\t\tthis.userService.createEnterpriseUser(this.enterpriseUser).subscribe(data =>{ \n\t\t\tconsole.log(data);\n\t\t\talert(\"Inserted Successfully!!!!!\")\n\t\t\tthis.enterpriseUser = new EnterpriseUser;\n\t\t\tthis.gotoList();\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tthis.wrongPassword = true;\n\t\t}\n\t\t//this.enterpriseUser = null;\n\t\t*/\n\t}\n\n\tonSubmit() {\n\t\tthis.createUser();\n\t}\n\n\tgotoList() {\n\t\tthis.router.navigate(['/enterpriseUser/get']);\n\t}\n\tselectGroup(option) {\n\t\t//console.log(option)\n\t\tthis.registerForm.controls.employeeNo.setValue(option.employeeId);\n\t\tthis.registerForm.controls.emailId.setValue(option.email);\n\t\tthis.registerForm.controls.employee.setValue(option);\n\t\t//console.log(this.registerForm.value.employeeNo)\n\t}\n\tuploadImage(fileInput) {\n\t\tconst file = fileInput.files[0];\n\t\t//console.log(file)\n\t\tthis.userFile = file;\n\t}\n\tcheckPassword() {\n\t\tthis.wrongPassword = true;\n\t\tif (this.confPassword.value == this.registerForm.value.password) {\n\t\t\tthis.wrongPassword = false;\n\t\t}\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { EnterpriseUser } from '../../masters/enterprise-user';\r\nimport { EnterpriseUserService } from '../../services/enterprise-user.service';\r\n\n@Component({\n  selector: 'app-enterprise-user-list',\n  templateUrl: './enterprise-user-list.component.html',\n  styleUrls: ['./enterprise-user-list.component.css'],\n  animations: [routerTransition()]\n})\nexport class EnterpriseUserListComponent implements OnInit {\n  \tname = \"\";\n\tuserbranchmapping : any;\n\tenterpriseUserList: Array<EnterpriseUser>;\n  \tconstructor(private userService: EnterpriseUserService,private router: Router) { }\n\n  \tngOnInit(): void {\n\t\tthis.reloadData();\n  \t}\n  \treloadData(){\n\t\tthis.userService.getEnterpriseUserList().subscribe(data =>{\n\t\t\tconsole.log(data);\n\t\t\tthis.enterpriseUserList = data;\n\t\t})\n\t}\n\tgotolist(){\n\t\tthis.router.navigate(['user/userbranchmapping'])\n\t}\n    gotoUserBranchMapping(user){\n\t\tlet data = JSON.stringify(user);\n\t\tlocalStorage.setItem('user',data);\n\t\tthis.router.navigate(['/enterpriseUser/user-mapping'])\n\t}\n\tback(){\n\t\thistory.back();\n\t}\n\tgotoUpdateUser(user){\n\t\tlocalStorage.setItem('userForUpdate',JSON.stringify(user));\n\t\tthis.router.navigate(['/enterpriseUser/add'])\n\t}\n\tgotoUserRolePrivilegeCreate(user) {\n\t\tlocalStorage.setItem('userForPrivilege', JSON.stringify(user));\n\t\tlet id = user.id;\n\t\tthis.router.navigate(['enterpriseUser/userRole/add',id])\n\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ServiceCenter } from '../../../master/service-center/masters/service-center';\r\nimport { Department } from '../../../master/department/masters/department';\r\nimport { DepartmentService } from '../../../master/department/services/department.service';\r\nimport { Branch } from '../../../master/service-center/masters/branch';\r\nimport { BranchServiceService } from '../../../master/service-center/services/branch-service.service';\r\nimport { StoreService } from '../../../master/store/services/store.service';\r\nimport { EnterpriseUser } from '../../../master/unit-master/masters/enterpriseUser';\r\nimport { UserBranchDepartmentMapping } from '../../masters/user-branch-department-mapping';\r\nimport { UserBranchMapping } from '../../masters/user-branch-mapping';\r\nimport { UserBranchServiceCenterMapping } from '../../masters/user-branch-service-cente-mapping';\r\nimport { UserMappingService } from '../../services/enterprise-user-mapping.service';\r\nimport { EnterpriseUserService } from '../../services/enterprise-user.service';\r\nimport { Store } from '../../../master/store/masters/store';\r\nimport { UserBranchStoreMapping } from '../../masters/user-branch-store-mapping';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { CommonSecurityService } from '../../../Common-Security-Services/common-service.service';\r\nimport { AlertService } from '../../../layout/alert/alert.service';\r\n\n@Component({\n  selector: 'app-enterprise-user-mapping',\n  templateUrl: './enterprise-user-mapping.component.html',\n  styleUrls: ['./enterprise-user-mapping.component.css'],\n  animations: [routerTransition()]\n})\nexport class EnterpriseUserMappingComponent implements OnInit {\n\tid: number;\n\tuser = new EnterpriseUser();\n\n/**************************User-Branch goes here*************** */\n\tbranchList =new Array<Branch>();\n\tuserBranchList = new Array<UserBranchMapping>();\n\tbranchesForStore = new Array<Branch>();\n\tuserBranchForCreate = new UserBranchMapping();\n\tbranchIdList: any;\n\tdummyBranch : Branch = new Branch();\n\tsubmitted : boolean = false;\t\n\tuserBranchFound: boolean = false;\n\tuserBranch: UserBranchMapping = new UserBranchMapping;\n\tdummyUserBranchMapping: UserBranchMapping = new UserBranchMapping;\n/**********************************User Department Mapping goes here*********************** */\n\tdepartmentList = Array<Department>();\n\tuserBranchDepartmentMappingList : Array<UserBranchDepartmentMapping> = [];\n\tdepartmentForStore : Array<Department> =[];\n\tuserBranchDepartmentForCreate : UserBranchDepartmentMapping = new UserBranchDepartmentMapping;\n\tbranchDepartmentIdList: any;\n\tbranchDepartmentList: any;\n\tshowDepartments: boolean= false\n/*****************************************  User ServiceCenter Mapping goes here **********  */\n\tserviceCenterList: Array<ServiceCenter> = [];\n\tuserBranchServiceCenterMappingList: Array<UserBranchServiceCenterMapping> =[];\n\tserviceCenterForStore: Array<ServiceCenter> = [];\n\tuserBranchServiceCenterIdList:any;\n\tuserBranchServiceCenterForCreate : UserBranchServiceCenterMapping = new UserBranchServiceCenterMapping;\n/*****************************************  User Store Mapping goes here **********  */\n\tstoreList: Array<Store> = [];\n\tuserBranchStoreMappingList: Array<UserBranchStoreMapping> =[];\n\tstoreForStore: Array<Store> = [];\n\tuserBranchStoreIdList :any;\n\tuserBranchStoreForCreate : UserBranchStoreMapping = new UserBranchStoreMapping;\n\t\n  constructor(private userMappingService: UserMappingService,\n\tprivate userService: EnterpriseUserService,\n\tprivate branchService: BranchServiceService,\n\tprivate departmentService: DepartmentService,\n\tprivate serviceCenterService: BranchServiceService,\n\tprivate storeService : StoreService,\n\tprivate commonService: CommonSecurityService,\n\tprivate route:ActivatedRoute,\n\tprivate alertService: AlertService\n\t) { }\n\n  ngOnInit(): void {\n\tthis.user = this.commonService.getUser();\n\tthis.id = this.user.id;\n\t//console.log(this.id);\n\tthis.reloadData();\n  }\n  reloadData(){\n\t\tthis.userService.getEnterpriseUserById(this.id).subscribe(data =>{\n\t\t\tthis.user = data;\n\t\t\t//console.log(this.user)\n\t\t\tthis.userBranchForCreate.user = this.user;\n\t\t\t//console.log(data);\n\t\t})\n\t\tthis.branchService.getBranch().subscribe(data =>{\n\t\t\tthis.branchList = data;\n\t\t\t//console.log(this.branchList,\"This is branch List\")\n\t\t})\n\t\tthis.userMappingService.getUserBranchMappingByUserId(this.id).subscribe(data =>{\n\t\t\tthis.userBranchList = data;\n\t\t\t//console.log(data)\n\t\t\tif(this.userBranchList.length > 0){\n\t\t\t\tthis.userBranchFound = true;\n\t\t\t}\n\t\t})\n\t\t\n\t\tthis.departmentService.getAllDepartments().subscribe(data =>{\n\t\t\t//console.log(data);\n\t\t\tthis.departmentList = data;\n\t\t})\n\t\t\n\t\t/*this.userMappingService.getUserBranchServiceCenterMappingById(this.id).subscribe(data=>{\n\t\t\tthis.userBranchServiceCenterMappingList = data;\n\t\t})*/\n\t\tthis.serviceCenterService.getServiceCenter().subscribe(data =>{\n\t\t\tthis.serviceCenterList = data;\n\t\t\t//console.log(this.serviceCenterList,\"This is serviceCenterList\")\n\t\t})\n\t\tthis.storeService.getStoreList().subscribe(data =>{\n\t\t\tthis.storeList = data;\n\t\t\tconsole.log(data)\n\t\t})\n\t\t\n\t}\n\t\n/*****************************User BranchMapping goes here************************************ */\n\n\tcheckBranchUserConnection(b):boolean{\n\t\t//console.warn(this.userBranchMappingList,b)\n\t\tlet bool : boolean;\n\t\tthis.userBranchList.forEach((value) =>{\n\t\t\t//console.warn(this.userBranchMappingList,b)\n\t\t\tif(b.id == value.branch.id){\n\t\t\t\t//console.log(\"Connection true\",b.id,value.branch.id)\n\t\t\t\tbool = true;\n\t\t\t\t//console.log(!this.branchesForStore.includes(b))\n\t\t\t\tif(!this.branchesForStore.includes(b) == true){\n\t\t\t\t\tthis.branchesForStore.push(b);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t \n\t\t})\n\t\treturn bool;\n\t}\n\t\n\tsaveBranch(userForm){\n\t\tthis.branchIdList = userForm.value;\n\t\tlet values = Object.values(this.branchIdList);\n\t\tthis.branchIdList = values;\n\t\tthis.branchesForStore = []\n\t\tthis.branchList.forEach((value,i)=>{\n\t\t\tthis.branchIdList.forEach((data,j)=>{\n\t\t\t\tif(data == true && j==i){\n\t\t\t\t\t//console.log(value,data,i,j)\n\t\t\t\t\tthis.branchesForStore.push(value);\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\tthis.gotoCreateUserBranchMapping(this.branchesForStore);\n\t\t//console.log(this.branchesForStore)\n\t}\n\tgotoCreateUserBranchMapping(branchesForStore){\n\t\t\n\t\tfor(let branch of branchesForStore){\n\n\t\t\tthis.userMappingService.getUserBranchMappingByBranch(branch,this.id).subscribe(data =>{\n\t\t\t\tconsole.log(data[0]);\n\t\t\t\tif(data.length >0){\n\t\t\t\t\tthis.userBranchForCreate = data[0];\n\t\t\t\t\tthis.update(this.userBranchForCreate);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t\tthis.userBranchForCreate.branch = branch;\n\t\t\t\t\t\tthis.userBranchForCreate.id = null;\n\t\t\t\t\t\tthis.createUserBranchMapping(this.userBranchForCreate);\n\t\t\t\t}\t\n\t\t\t})\n\t\t\t//this.userBranchForCreate.id = branch.id;\n\t\t\t\n\t\t}\n\t}\n\tcreateUserBranchMapping(userBranchForCreate){\n\t\t//console.log(userBranchForCreate)\n\t\tthis.userMappingService.createUserBranchMapping(userBranchForCreate).subscribe(data =>{\n\t\t\tthis.alertService.success(\"User-Branch Mapping Successfully Added!!!!!!!\");\n\t\t\tthis.userMappingService.getUserBranchMappingByUserId(this.id).subscribe(data =>{\n\t\t\tthis.userBranchList = data;\n\t\t\t//console.log(data)\n\t\t\tif(this.userBranchList.length > 0){\n\t\t\t\tthis.userBranchFound = true;\n\t\t\t}\n\t\t})\n\t\t\t//console.log(data)\n\t\t})\n\t}\n\tupdate(userBranchForCreate){\n\t\t//console.log(userBranchForCreate)\n\t\tthis.userMappingService.updateUserBranchMapping(userBranchForCreate.id,userBranchForCreate).subscribe(data =>{\n\t\t\t//console.log(data,\"Updated UserBranch\");\n\t\t\tthis.alertService.success(\"User-Branch Updated Successfully!!!!\")\n\t\t\t\n\t\t})\n\t\t//console.log(ubForm.value)\n\t}\n/**********************************UserBranch-Department Mapping goes here*********************** */\nsetUserBranch(userBranch){\n\tthis.userBranch = userBranch; \n\tthis.departmentService.getDepartmentsByBranchId(userBranch.branch.id).subscribe( \n\t\tdata =>{this.departmentList = data},\n\t\terr => this.alertService.error(\"Getting Departments by branch cause Error\")\n\t)\n\tthis.userMappingService.getUserBranchDepartmentByUserBranchId(userBranch.id).subscribe(data =>{\n\t\tthis.userBranchDepartmentMappingList = data;\n\t\t//console.log(data)\n\t})\n\tthis.userMappingService.getUserBranchServiceCenterByUserBranchId(userBranch.id).subscribe(data =>{\n\t\tthis.userBranchServiceCenterMappingList = data;\n\t\t//console.log(data);\n\t})\n\tthis.userMappingService.getUserBranchStoreByUserBranchId(userBranch.id).subscribe(data =>{\n\t\tconsole.log(data);\n\t\tthis.userBranchStoreMappingList = data;\n\t})\n\tif(userBranch!= null){\n\t\tthis.userBranchDepartmentForCreate.userBranchMapping = userBranch;\n\t\tthis.userBranchServiceCenterForCreate.userBranchMapping = userBranch;\n\t\tthis.userBranchStoreForCreate.userBranchMapping = userBranch;\n\t\tthis.showDepartments = true;\n\t\t//console.log(userBranch)\n\t}\n\telse{\n\t\tthis.showDepartments = false;\n\t}\n\t\n}\n\t\n\tcheckDepartmentUserConnection(d):boolean{\n\t\t\n\t\t//console.warn(this.userBranchMappingList,b)\n\t\tlet bool : boolean;\n\t\tthis.userBranchDepartmentMappingList.forEach((value) =>{\n\t\t\t//console.warn(this.userBranchMappingList,b)\n\t\t\tif(d.departmentId == value.department.departmentId){\n\t\t\t\t//console.log(\"Connection true\",b.id,value.branch.id)\n\t\t\t\tbool = true;\n\t\t\t\t//console.log(!this.branchesForStore.includes(b))\n\t\t\t\tif(!this.departmentForStore.includes(d) == true){\n\t\t\t\t\tthis.departmentForStore.push(d);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t \n\t\t})\n\t\treturn bool;\n\t}\n\t\n\tsaveBranchDepartment(userDepartmentForm){\n\t\t//console.log(storeForm.value)\n\t\tthis.branchDepartmentIdList = userDepartmentForm.value;\n\t\tlet values = Object.values(this.branchDepartmentIdList);\n\t\tthis.branchDepartmentIdList = values;\n\t\tthis.departmentForStore = [];\n\t\tthis.departmentList.forEach((value,i) =>{\n\t\t\tthis.branchDepartmentIdList.forEach((data,j) =>{\n\t\t\t\tif(data == true && j==i){\n\t\t\t\t//console.log(value,data,i,j)\n\t\t\t\tthis.departmentForStore.push(value);\n\t\t\t}\n\t\n\t\t\t\t\n\t\t\t})\n\t\t})\n\t\t//console.log(this.departmentForStore)\n\t\tthis.gotoStoreUserDepartment(this.departmentForStore);\n\t\t\n\t}\n\tgotoStoreUserDepartment(departmentForStore){\n\t\tfor(let department of departmentForStore){\n\t\t\tthis.userMappingService.getUserBranchDepartmentMappingByDepartment(department,this.userBranch.id).subscribe(data =>{\n\t\t\t\tconsole.log(data);\n\t\t\t\tif(data.length>0){\n\t\t\t\t\tthis.userBranchDepartmentForCreate = data[0];\n\t\t\t\t\tthis.updateUserDepartment(this.userBranchDepartmentForCreate);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t\tthis.userBranchDepartmentForCreate.department = department;\n\t\t\t\t\t\tthis.userBranchDepartmentForCreate.id = null;\n\t\t\t\t\t\tthis.createUserDepartmentMapping(this.userBranchDepartmentForCreate);\n\t\t\t\t}\t\n\t\t\t})\n\t\t\t\n\t\t}\n\t}\n\tcreateUserDepartmentMapping(userDepartmentForCreate){\n\t\t//console.log(userDepartmentForCreate)\n\t\tthis.userMappingService.createUserBranchDepartmentMapping(userDepartmentForCreate).subscribe(data =>{\n\t\t\tthis.alertService.success(\"User-Department Mapping Successfully Created!!!!!!!!!!!!!!!!\");\n\t\t\t//console.log(data)\n\t\t})\n\t}\n\tupdateUserDepartment(userBranchDepartmentForCreate){\n\t\tthis.userMappingService.updateUserBranchDepartmentMapping(userBranchDepartmentForCreate).subscribe(data =>{\n\t\t\t//console.log(data);\n\t\t\tthis.alertService.success(\"User-Department Updated Successfully!!!!\")\n\t\t})\n\t}\n/************************************    User ServiceCenter goes here***************** */\n\n\ncheckServiceCenterUserConnection(serviceCenter):boolean{\n\t\n\t\t//console.warn (this.userBranchMappingList,b)\n\t\tlet bool : boolean;\n\t\tthis.userBranchServiceCenterMappingList.forEach((value) =>{\n\t\t\t//console.warn(this.userBranchMappingList,b)\n\t\t\tif(serviceCenter.serviceCenterId == value.serviceCenter.serviceCenterId){\n\t\t\t\t//console.log(\"Connection true\",b.id,value.branch.id)\n\t\t\t\tbool = true;\n\t\t\t\t//console.log(!this.branchesForStore.includes(b))\n\t\t\t\tif(!this.serviceCenterForStore.includes(serviceCenter) == true){\n\t\t\t\t\tthis.serviceCenterForStore.push(serviceCenter);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t \n\t\t})\n\t\treturn bool;\n}\n saveUserServiceCenter(serviceCenterForm){\n\t\t//console.log(serviceCenterForm.value)\n\t\tthis.userBranchServiceCenterIdList = serviceCenterForm.value;\n\t\tlet values = Object.values(this.userBranchServiceCenterIdList);\n\t\tthis.userBranchServiceCenterIdList = values;\n\t\tthis.serviceCenterForStore = [];\n\t\tthis.serviceCenterList.forEach((value,i) =>{\n\t\t\tthis.userBranchServiceCenterIdList.forEach((data,j) =>{\n\t\t\t\t//console.log(value,data,i,j)\n\t\t\t\tif(data == true && j==i){\n\t\t\t\t//console.log(value,data,i,j)\n\t\t\t\tthis.serviceCenterForStore.push(value);\n\t\t\t}\n\t\n\t\t\t\t\n\t\t\t})\n\t\t})\n\t\t//console.log(this.departmentForStore)\n\t\tthis.gotoStoreUserServiceCenter(this.serviceCenterForStore);\n\t\t\n\t}\n\tgotoStoreUserServiceCenter(serviceCenterForStore){\n\t\t//console.log(serviceCenterForStore)\n\t\t\n\t\tfor(let serviceCenter of serviceCenterForStore){\n\t\t\t\n\t\t\tthis.userMappingService.getUserBranchServiceCenterMappingByServiceCenter(serviceCenter,this.userBranch.id).subscribe(data =>{\n\t\t\t\t//console.log(data);\n\t\t\t\tif(data.length >0){\n\t\t\t\t\tthis.userBranchServiceCenterForCreate = data[0];\n\t\t\t\t\tthis.updateUserServiceCenterMapping(this.userBranchServiceCenterForCreate);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t\tthis.userBranchServiceCenterForCreate.serviceCenter = serviceCenter;\n\t\t\t\t\t\tthis.userBranchServiceCenterForCreate.id = null;\n\t\t\t\t\t\tthis.createUserServiceCenterMapping(this.userBranchServiceCenterForCreate);\n\t\t\t\t}\t\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\t}\n    \r\n\tcreateUserServiceCenterMapping(userBranchServiceCenterForCreate){\n\t\tthis.userMappingService.createUserBranchServiceCenterMapping(userBranchServiceCenterForCreate).subscribe(data =>{\n\t\t\tthis.alertService.success(\"User-ServiceCenter Mapping Successfully Created!!!!!!!!!!!!!!!!\");\n\t\t\t//console.log(data)\n\t\t})\n\t\t}\n\tupdateUserServiceCenterMapping(userBranchServiceCenterForCreate: UserBranchServiceCenterMapping) {\n        this.userMappingService.updateUserBranchServiceCenterMapping(userBranchServiceCenterForCreate).subscribe(data =>{\n\tconsole.log(data);\n\tthis.alertService.success(\"User-ServiceCenter updated Successfully!!!!!\")\n\t})\n    }\n\t\t\n/************************************    User StoreAccessoires goes here***************** */\n\ncheckStoreUserConnection(store):boolean{\n\t\n\t\t//console.warn (this.userBranchMappingList,b)\n\t\tlet bool : boolean = false;\n\t\tthis.userBranchStoreMappingList.forEach((value) =>{\n\t\t\t//console.warn(value.storeAccessories.storeId , storeAccessories.storeId)\n\t\t\tif(store.id == value.store.id){\n\t\t\t\t//console.log(\"Connection true\",storeAccessories.storeId,value.storeAccessories.storeId)\n\t\t\t\tbool = true;\n\t\t\t\t//console.log(!this.branchesForStore.includes(b))\n\t\t\t\tif(!this.storeForStore.includes(store) == true){\n\t\t\t\t\tthis.storeForStore.push(store);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t \n\t\t})\n\t\treturn bool;\n}\n saveUserStoreAccessories(storeAccessoiresForm){\n\t\t//console.log(serviceCenterForm.value)\n\t\tthis.userBranchStoreIdList = storeAccessoiresForm.value;\n\t\tlet values = Object.values(this.userBranchStoreIdList);\n\t\tthis.userBranchStoreIdList = values;\n\t\tthis.storeForStore = [];\n\t\tthis.storeList.forEach((value,i) =>{\n\t\t\tthis.userBranchStoreIdList.forEach((data,j) =>{\n\t\t\t\t//console.log(value,data,i,j)\n\t\t\t\tif(data == true && j==i){\n\t\t\t\t//console.log(value,data,i,j)\n\t\t\t\tthis.storeForStore.push(value);\n\t\t\t}\n\t\n\t\t\t\t\n\t\t\t})\n\t\t})\n\t\t//console.log(this.departmentForStore)\n\t\tthis.gotoStoreUserStoreAccessoires(this.storeForStore);\n\t\t\n\t}\n\tgotoStoreUserStoreAccessoires(storeForStore){\n\t\t//console.log(serviceCenterForStore)\n\t\t\n\t\tfor(let store of storeForStore){\n\t\t\t\n\t\t\tthis.userMappingService.getUserBranchStoreMappingByStore(store,this.userBranch.id).subscribe(data =>{\n\t\t\t\t//console.log(data);\n\t\t\t\tif(data.length >0){\n\t\t\t\t\tthis.userBranchStoreForCreate = data[0];\n\t\t\t\t\tthis.updateUserStoreMapping(this.userBranchStoreForCreate);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t\tthis.userBranchStoreForCreate.id = null;\n\t\t\t\t\t\tthis.userBranchStoreForCreate.store = store;\n\t\t\t\t\t\tthis.createUserStoreAccessoiresMapping(this.userBranchStoreForCreate);\n\t\t\t\t}\t\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\t}\n    \r\n\tcreateUserStoreAccessoiresMapping(userBranchStoreAccessoriesForCreate){\n\t\t//console.log(userBranchStoreAccessoriesForCreate)\n\t\tthis.userMappingService.createUserBranchStoreMapping(userBranchStoreAccessoriesForCreate).subscribe(data =>{\n\t\t\tthis.alertService.success(\"User-storeAccessoires Mapping Successfully Created!!!!!!!!!!!!!!!!\");\n\t\t\t//console.log(data)\n\t\t})\n\t}\n\tupdateUserStoreMapping(userBranchStoreForCreate: UserBranchStoreMapping) {\n        this.userMappingService.updateUserBranchStoreMapping(userBranchStoreForCreate).subscribe(data =>{\n\tconsole.log(data);\n\tthis.alertService.success(\"User-Store updated Successfully!!!!\")\n})\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from '../../../layout/alert/alert.service';\r\nimport { Feature } from '../../masters/features';\r\nimport { ModelFeaturePrevelage } from '../../masters/model-feature-privilege';\r\nimport { Privileges } from '../../masters/privileges';\r\nimport { RoleMaster } from '../../masters/role-master';\r\nimport { RolePrivileges } from '../../masters/role-privileges';\r\nimport { FeatureService } from '../../services/feature.service';\r\nimport { RoleMasterService } from '../../services/role-master.service';\r\nimport { RolePrivilegeService } from '../../services/role-privilege.service';\r\n\r\n@Component({\r\n\tselector: 'app-role-master-create',\r\n\ttemplateUrl: './role-master-create.component.html',\r\n\tstyleUrls: ['./role-master-create.component.css']\r\n})\r\nexport class RoleMasterCreateComponent implements OnInit {\r\n\r\n\troleMaster: RoleMaster = new RoleMaster();\r\n\tsubmitted = false;\r\n\troleMasterList: Array<RoleMaster>;\r\n\tfeatureModuleList: Array<Feature> = [];\r\n\tisFeatureModule = false;\r\n\tfeatureList: Array<Feature> = [];\r\n\tselectedFeature: Feature = null;\r\n\tsize: number = 0;\r\n\tprivilegeListForStore: Array<ModelFeaturePrevelage> = [];\r\n\tisStoredFeature: boolean = false;\r\n\tmodelFeaturePrivilegeList: Array<ModelFeaturePrevelage> = [];\r\n\troleForUpdate: RoleMaster = new RoleMaster;\r\n\tisUpdateRequest: boolean = false;\r\n\trolePrivilegeList: Array<RolePrivileges> = [];\r\n\trolePrivilegeForStore: RolePrivileges = new RolePrivileges();\r\n\tisRolePrivilegeExist: boolean = false;\r\n\tflag: number = 0;\r\n\tconstructor(private rolePrivilegeService: RolePrivilegeService,\r\n\t\tprivate formBuilder: FormBuilder,\r\n\t\tprivate featureService: FeatureService,\r\n\t\tprivate roleMasterService: RoleMasterService,\r\n\t\tprivate alertService: AlertService\r\n\t) { }\r\n\troleForm = new FormGroup({});\r\n\r\n\tngOnInit(): void {\r\n\r\n\t\tthis.reloadForm();\r\n\t\tthis.reloadData();\r\n\r\n\t}\r\n\treloadData() {\r\n\t\tif (localStorage.getItem('roleMasterForUpdate') != null) {\r\n\t\t\tthis.roleMaster = JSON.parse(localStorage.getItem('roleMasterForUpdate'))\r\n\t\t\tlocalStorage.removeItem('roleMasterForUpdate')\r\n\t\t\tthis.roleForm.patchValue(this.roleMaster);\r\n\t\t\tthis.isUpdateRequest = true;\r\n\t\t\tthis.rolePrivilegeService.getRolePrivilegeByRoleId(this.roleMaster.roleMasterId).subscribe(data => {\r\n\t\t\t\tthis.rolePrivilegeList = data;\r\n\t\t\t\tif (data != null) {\r\n\t\t\t\t\tthis.isRolePrivilegeExist = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.featureService.getFeaturesByParentId(0).subscribe(data => {\r\n\t\t\t\tthis.featureModuleList = data;\r\n\t\t\t}, error => {\r\n\t\t\t\tthis.alertService.error(error.message)\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\r\n\t\t/*this.featureService.getFeaturesById(0).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t},error=>{this.alertService.error(error.error.message)\r\n\t\t\tconsole.log(\"Error is\",error)\r\n\t\t} )*/\r\n\r\n\r\n\r\n\t}\r\n\treloadForm() {\r\n\t\tthis.roleForm = this.formBuilder.group({\r\n\t\t\troleName: [null, Validators.required],\r\n\t\t\tdescription: [null],\r\n\t\t\tactive: [null],\r\n\t\t\troleMasterId: [null],\r\n\t\t\ttype: [null]\r\n\t\t})\r\n\r\n\t}\r\n\tcreateRoleMaster() {\r\n\t\tthis.roleMaster = this.roleForm.value;\r\n\t\tthis.roleMasterService.createRoleMaster(this.roleMaster).subscribe(data => {\r\n\t\t\t//console.log(data);\r\n\t\t\tthis.alertService.success(\"Successfully created Role!!\")\r\n\t\t}, err => this.alertService.error(err))\r\n\t}\r\n\tsave() {\r\n\t\tthis.roleMaster = this.roleForm.value;\r\n\t\tthis.roleMaster.roleMasterId = null;\r\n\t\t//console.warn(this.roleMaster);\r\n\t}\r\n\tonSubmit() {\r\n\t\tthis.createRoleMaster();\r\n\t}\r\n\r\n\tshowFeatures(parentFeature) {\r\n\r\n\t\tthis.privilegeListForStore = [];\r\n\t\tthis.rolePrivilegeService.getModelFeaturePrivilegesListByParentFeatureId(parentFeature.featureId).subscribe(data => {\r\n\t\t\tconsole.log(data, \"This is from parent FeatureId\");\r\n\t\t\tthis.modelFeaturePrivilegeList = data;\r\n\t\t})\r\n\r\n\r\n\r\n\t\t//console.log(parentFeature)\r\n\t\t/*this.featureService.getFeatureTreeByParentId(parentFeature.featureType.lookupId).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t})*/\r\n\r\n\r\n\t\t/*this.featureService.getModelFeatureByfeatureId(parentFeature.featureType.lookupId).subscribe(data =>{\r\n\t\t\t//console.log(data,\"modelFeaturePrivilegeList From DB\");\r\n\t\t\tthis.modelFeaturePrivilegeList = data;\r\n\t\t})*/\r\n\t\tthis.featureService.getFeaturesByFeatureType(parentFeature.featureType.lookupId).subscribe(data => {\r\n\t\t\t//console.log(data);\r\n\t\t\t//console.log(data,\"Features from DB \")\r\n\t\t\tthis.isFeatureModule = true;\r\n\t\t\tthis.featureList = data;\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tfeatureStore(checked, modelFeaturePrivilege) {\r\n\t\t//this.isStoredFeature = false;\r\n\t\tif (checked == true) {\r\n\t\t\tif (!this.privilegeListForStore.includes(modelFeaturePrivilege)) {\r\n\t\t\t\tthis.privilegeListForStore.push(modelFeaturePrivilege);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.privilegeListForStore.includes(modelFeaturePrivilege)) {\r\n\t\t\t\t//console.log(\"This is called\")\r\n\t\t\t\tlet index = this.privilegeListForStore.indexOf(modelFeaturePrivilege);\r\n\t\t\t\tthis.privilegeListForStore.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tsaveFeatures() {\r\n\t\t//this.isStoredFeature = true;\r\n\t\tthis.privilegeListForStore.forEach((data) => {\r\n\t\t\tlet rolePrivilege = new RolePrivileges();\r\n\t\t\trolePrivilege.privileges = data.privilege;\r\n\t\t\trolePrivilege.roleMaster = this.roleMaster;\r\n\t\t\tthis.rolePrivilegeService.createRolePrivilege(rolePrivilege).subscribe(data => {\r\n\t\t\t\tconsole.log(data, \"Created Successfully\")\r\n\t\t\t\tthis.alertService.success(\"Successfully Created!!!\")\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tcheckModelNFeatureNPrevilege(feature) {\r\n\t\tlet featureName: string;\r\n\t\tthis.modelFeaturePrivilegeList.forEach((data) => {\r\n\t\t\tif (feature == data.featureId) {\r\n\t\t\t\tfeatureName = data.feature;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn featureName;\r\n\t}\r\n\tresetForm() {\r\n\t\tthis.roleForm.reset();\r\n\t\tthis.isUpdateRequest = false;\r\n\t}\r\n\tupdateRole() {\r\n\t\tthis.roleMaster = this.roleForm.value;\r\n\t\tthis.roleMasterService.updateRoleMaster(this.roleMaster).subscribe(data => {\r\n\t\t\t//console.log(data);\r\n\t\t\tthis.alertService.success(\"Updated Successfully!!\")\r\n\t\t})\r\n\t}\r\n\tremoveFeature(feature) {\r\n\t\t//this.featureList.push(feature);\r\n\t\tif (this.privilegeListForStore.includes(feature)) {\r\n\t\t\tlet index = this.privilegeListForStore.indexOf(feature);\r\n\t\t\tthis.privilegeListForStore.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/*findFeaturesByFeatureId(featureId){\r\n\t\tif(this.size <this.featureList.length){\r\n\t\t\tthis.featureService.getFeatureById(featureId).subscribe(data =>{\r\n\t\t\t\tthis.size += 1;\r\n\t\t\treturn data.featureDesc;\r\n\t\t})\r\n\t\t}\r\n\t\t\r\n\t}*/\r\n\r\n\tcompareWith(modelFeatruePrivilege) {\r\n\t\tlet res: boolean = false;\r\n\t\tthis.rolePrivilegeList.forEach((data) => {\r\n\t\t\tif (data.privileges.privilegesId == modelFeatruePrivilege.privilege.privilegesId) {\r\n\t\t\t\tres = true;\r\n\t\t\t}\r\n\t\t})\r\n\t\t//console.log(modelFeatruePrivilege.privilege)\r\n\t\tif (!res == true) {\r\n\t\t\treturn res\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.privilegeListForStore.includes(modelFeatruePrivilege) && this.flag < this.rolePrivilegeList.length) {\r\n\t\t\t\tthis.flag += 1;\r\n\t\t\t\tconsole.log(true)\r\n\t\t\t\tthis.privilegeListForStore.push(modelFeatruePrivilege)\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t}\r\n\r\n\t}\r\n\tupdatePrivilege() {\r\n\t\tthis.privilegeListForStore.forEach((data) => {\r\n\t\t\tlet rolePrivilege = new RolePrivileges();\r\n\t\t\trolePrivilege.privileges = data.privilege;\r\n\t\t\trolePrivilege.roleMaster = this.roleMaster;\r\n\t\t\tthis.rolePrivilegeService.updateRolePrivilege(rolePrivilege).subscribe(data => {\r\n\t\t\t\tconsole.log(data, \"Updated Successfully\")\r\n\t\t\t\tthis.alertService.success(\"Successfully Updated!!!\")\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\r\nimport { RoleMaster } from '../../masters/role-master';\r\nimport { RoleMasterService } from '../../services/role-master.service';\r\n@Component({\n  selector: 'app-role-master-list',\n  templateUrl: './role-master-list.component.html',\n  styleUrls: ['./role-master-list.component.css']\n})\nexport class RoleMasterListComponent implements OnInit {\nsearchRolePrivilege : string =\"\";\n\troleMasterList: Array<RoleMaster> = [];\n    roleName : string= \"\";\n    rolePrivilege : string = \"\";\n\tlen : number; \n\tpage : number = 1;\n\tpageSize: number = 5;\n\n  constructor(private roleMasterService :RoleMasterService, private router: Router) { }\n\n  ngOnInit(): void {\n\t\tthis.reloadData();\n  }\n\n\treloadData(){\n\tthis.roleMasterService.getRoleMasterList().subscribe(data =>{\n\t\tthis.roleMasterList = data;\n\t\tthis.len = data.length;\n\t\t//console.log(data);\n\t})\n}\ngotoUpdateRoleMaster(roleMaster){\n\t\tlocalStorage.setItem('roleMasterForUpdate',JSON.stringify(roleMaster));\n\t\tthis.router.navigate(['/enterpriseUser/rolePrivilege/add'])\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '../../../layout/alert/alert.service';\r\nimport { EnterpriseUser } from '../../masters/enterprise-user';\r\nimport { RoleMaster } from '../../masters/role-master';\r\nimport { UserRoleDetails } from '../../masters/user-role-details';\r\nimport { RoleMasterService } from '../../services/role-master.service';\r\nimport { UserRoleService } from '../../services/user-role.service';\r\n\n@Component({\n  selector: 'app-user-role-create',\n  templateUrl: './user-role-create.component.html',\n  styleUrls: ['./user-role-create.component.css']\n})\nexport class UserRoleCreateComponent implements OnInit {\nroleMasterList: Array<RoleMaster> = new Array<RoleMaster>();\n\troleMasterListForStore: Array<RoleMaster> = new Array<RoleMaster>();\n\tuserRoleList:Array<UserRoleDetails> = [];\n\tid: any;\n\tuser = new EnterpriseUser();\n\troleMaster: RoleMaster = new RoleMaster();\n\tisStoredRole :boolean = false;\n\tuserId: number;\n\tconstructor(private userRoleService: UserRoleService,\n\t\tprivate roleService: RoleMasterService,\n\t\tprivate alertService: AlertService,\n\t\tprivate route: ActivatedRoute\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.userId = this.route.snapshot.params['userId']\n\t\t//console.log(\"This is userId\",this.userId)\n\t\tthis.reloadData();\n\t}\n\treloadData() {\n\t\tthis.user = JSON.parse(localStorage.getItem(\"userForPrivilege\"));\n\t\t//console.log(this.user);\n\t\tthis.roleService.getRoleMasterList().subscribe(data =>{\n\t\t\tthis.roleMasterList  = data;\n\t\t})\n\t\tthis.loadUserRoleList();\n\t}\n\tloadUserRoleList(){\n\t\tthis.userRoleService.getUserRoleListByUserId(this.userId).subscribe(\n\t\t\tres =>{\n\t\t\t\t//console.log(res,\"success\")\n\t\t\t\tthis.userRoleList = res\n\t\t\t\tthis.showUserRoleForExisting(this.userRoleList);\n\t\t\t\t},\n\t\t\terr => this.alertService.error(err)\n\t\t)\n\t\t/*this.userRoleService.getUserRoleList().subscribe(data =>{\n\t\t\tthis.userRoleList = data;\n\t\t\tconsole.log(\"userRoleList\",this.userRoleList);\n\t\t\tthis.showUserRoleForExisting(this.userRoleList);\n\t\t\t\n\t\t})*/\n\t}\n\t\n\tshowUserRoleForExisting(userRoleList){\n\t\tthis.roleMasterListForStore = []\n\t\tuserRoleList.forEach((data) =>{\n\t\t\tthis.roleMasterListForStore.push(data.roleMaster);\n\t\t})\n\t}\n\taddRole(role){\n\t\tlet isStoredRole = true;\n\t\tthis.roleMasterList=this.roleMasterList.filter(data => data !== role)\n\t\tthis.roleMasterListForStore.forEach((data) =>{\n\t\t\t\n\t\t\tif(data.roleMasterId == role.roleMasterId){\n\t\t\t\tisStoredRole = false;\n\t\t\t}\n\t\t\t\n\t\t})\n\t\tif(isStoredRole){\n\t\t\tthis.roleMasterListForStore.push(role);\n\t\t}\n\t}\n\tremoveRole(role){\n\t\tthis.roleMasterList.push(role);\n\t\tif(this.roleMasterListForStore.includes(role)){\n\t\t\tlet index = this.roleMasterListForStore.indexOf(role);\n\t\t\tthis.roleMasterListForStore.splice(index,1);\n\t\t}\n\t}\n\tsaveUserRole(){\n\t\tthis.roleMasterListForStore.forEach((data)=>{\n\t\t\tlet insert:boolean = true;\n\t\t\tthis.userRoleList.forEach((userRoleMapping) =>{\n\t\t\t\tif(userRoleMapping.roleMaster.roleMasterId == data.roleMasterId){\n\t\t\t\t\tinsert = false;\n\t\t\t\t\treturn insert\n\t\t\t\t}\n\t\t\t})\n\t\t\tlet userRole = new UserRoleDetails();\n\t\t\tuserRole.user = this.user;\n\t\t\tuserRole.roleMaster = data;\n\t\t\tuserRole.userRoleDetailsId = data.roleMasterId;\n\t\t\tuserRole.type = data.type;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/// Branch to be editeed\n\t\t\tuserRole.branch = null;\n\t\t\tif(insert){\n\t\t\t\tthis.userRoleService.createUserRole(userRole).subscribe(data =>{\n\t\t\t\t//console.log(data);\n\t\t\t\tthis.alertService.success(\"Successfully Inserted!!!!!\")\n\t\t\t\tthis.userRoleList = [];\n\t\t\t\tthis.loadUserRoleList();\n\t\t\t},error => this.alertService.error(error))\n\t\t\t}\n\t\t})\n\t\t\n\t}\n\n\tback(){\n\t\thistory.back();\n\t}\n\t\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoleMaster } from '../../masters/role-master';\r\nimport { UserRoleService } from '../../services/user-role.service';\r\n\n@Component({\n  selector: 'app-user-role-list',\n  templateUrl: './user-role-list.component.html',\n  styleUrls: ['./user-role-list.component.css']\n})\nexport class UserRoleListComponent implements OnInit {\nsearchRolePrivilege : string =\"\";\n\troleMasterList: Array<RoleMaster> = [];\n    roleName : string= \"\";\n    rolePrivilege : string = \"\";\n\tpageSize: number = 5;\n\tpage : number = 1;\n\tlen : number; \n  \n  constructor(private userRoleService: UserRoleService ) { }\n \n  ngOnInit(): void {\n\tthis.reloadData();\n  }\nreloadData(){\n\tthis.userRoleService.getUserRoleList().subscribe(data =>{\n\t\tthis.roleMasterList = data;\n\t\tconsole.log(data);\n\t})\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EnterpriseUserCreateComponent } from './components/enterprise-user-create/enterprise-user-create.component';\r\nimport { EnterpriseUserListComponent } from './components/enterprise-user-list/enterprise-user-list.component';\r\nimport { EnterpriseUserMappingComponent } from './components/enterprise-user-mapping/enterprise-user-mapping.component';\r\nimport { RoleMasterCreateComponent } from './components/role-master-create/role-master-create.component';\r\nimport { RoleMasterListComponent } from './components/role-master-list/role-master-list.component';\r\nimport { UserRoleCreateComponent } from './components/user-role-create/user-role-create.component';\r\nimport { UserRoleListComponent } from './components/user-role-list/user-role-list.component';\r\nimport { EnterpriseUserComponent } from './enterprise-user.component';\r\n\nconst routes: Routes = [\n\t{path: '',component: EnterpriseUserComponent},\n\t{path: 'get',component: EnterpriseUserListComponent},\n\t{path: 'user-mapping',component: EnterpriseUserMappingComponent},\n\t{path: 'add',component: EnterpriseUserCreateComponent},\n\t{path: 'rolePrivilege/add',component: RoleMasterCreateComponent},\n\t{path: 'rolePrivilege/list',component: RoleMasterListComponent},\n\t{path: 'userRole/list',component: UserRoleListComponent},\n\t{path: 'userRole/add/:userId',component: UserRoleCreateComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EnterpriseUserRoutingModule { }\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-enterprise-user',\n  templateUrl: './enterprise-user.component.html',\n  styleUrls: ['./enterprise-user.component.css']\n})\nexport class EnterpriseUserComponent implements OnInit {\n\t\n  constructor(private router: Router) { }\n  ngOnInit(): void {\n\t\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EnterpriseUserRoutingModule } from './enterprise-user-routing.module';\nimport { EnterpriseUserComponent } from './enterprise-user.component';\nimport { EnterpriseUserListComponent } from './components/enterprise-user-list/enterprise-user-list.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EnterpriseUserPipe } from './pipes/enterprise-user.pipe';\r\nimport { PageHeaderModule, StatModule } from '../shared';\nimport { EnterpriseUserMappingComponent } from './components/enterprise-user-mapping/enterprise-user-mapping.component';\nimport { EnterpriseUserCreateComponent } from './components/enterprise-user-create/enterprise-user-create.component';\r\nimport { MaterialModule } from '../material/material.module';\nimport { RoleMasterCreateComponent } from './components/role-master-create/role-master-create.component';\nimport { RoleMasterListComponent } from './components/role-master-list/role-master-list.component';\nimport { UserRoleListComponent } from './components/user-role-list/user-role-list.component';\nimport { UserRoleCreateComponent } from './components/user-role-create/user-role-create.component';\r\n\n\n@NgModule({\n  declarations: [\n    EnterpriseUserComponent,\n    EnterpriseUserListComponent,\n    EnterpriseUserPipe,\n    EnterpriseUserMappingComponent,\n    EnterpriseUserCreateComponent,\n    RoleMasterCreateComponent,\n    RoleMasterListComponent,\n    UserRoleListComponent,\n    UserRoleCreateComponent\n  ],\n  imports: [\n    CommonModule,\n    EnterpriseUserRoutingModule,\n    NgbModule,\n    FormsModule,\n    StatModule,\n    ReactiveFormsModule,\n    PageHeaderModule,\n    MaterialModule\n  ]\n})\nexport class EnterpriseUserModule { }\n","export class Privileges {\r\n\tprivilegesId : number = null;\r\n\tprivilegeName : string ;\r\n\tfeatureId : number;\r\n\tprivilegeCode : string;\r\n\tactive : string;\r\n\tprivilegeType : number;\r\n\t\r\n\t\r\n}","export class RoleMaster {\r\n\troleMasterId:number = null;\r\n\troleName: string;\r\n\tdescription : string ;\r\n\tactive : string;\r\n\ttype: string;\r\n\t\r\n\t\r\n}","import { Privileges } from \"./privileges\";\r\nimport { RoleMaster } from \"./role-master\";\r\n\r\n\r\nexport class RolePrivileges {\r\n\trolePrivilegeId : number = null;\r\n\troleMaster : RoleMaster = new RoleMaster();\r\n\tprivileges : Privileges = new Privileges();\r\n\t}","import { Department } from \"../../master/department/masters/department\";\r\nimport { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { UserBranchMapping } from \"./user-branch-mapping\";\r\n\r\nexport class UserBranchDepartmentMapping extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\tid: number;\r\n\tuserBranchMapping: UserBranchMapping = new UserBranchMapping;\r\n\tdepartment: Department = new Department;\r\n\t\r\n}","\r\nimport { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { Branch } from \"../../master/service-center/masters/branch\";\r\nimport { EnterpriseUser } from \"../../master/unit-master/masters/enterpriseUser\";\r\n\r\nexport class UserBranchMapping extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\tid: number;\r\n\tuser: EnterpriseUser = new EnterpriseUser;\r\n\tbranch: Branch = new Branch;\r\n}","import { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { ServiceCenter } from \"../../master/service-center/masters/service-center\";\r\nimport { UserBranchMapping } from \"./user-branch-mapping\";\r\n\r\nexport class UserBranchServiceCenterMapping extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\tuserBranchMapping: UserBranchMapping  = new UserBranchMapping();\r\n\tserviceCenter:  ServiceCenter  = new ServiceCenter();\r\n}","import { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { Store } from \"../../master/store/masters/store\";\r\nimport { UserBranchMapping } from \"./user-branch-mapping\";\r\n\r\nexport class UserBranchStoreMapping extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\tuserBranchMapping: UserBranchMapping  = new UserBranchMapping();\r\n\tstore: Store   =  new Store();\r\n}","import { Branch } from \"../../master/service-center/masters/branch\";\r\nimport { EnterpriseUser } from \"./enterprise-user\";\r\nimport { RoleMaster } from \"./role-master\";\r\n\r\nexport class UserRoleDetails {\r\n\tuserRoleDetailsId : number = null;\r\n\tuser: EnterpriseUser = new EnterpriseUser();\r\n\troleMaster : RoleMaster = new RoleMaster();\r\n\ttype : string ;\r\n\tbranch : Branch = new Branch();\r\n\r\n\t}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enterpriseUser'\n})\nexport class EnterpriseUserPipe implements PipeTransform {\n\n transform(value: any, args: any): any {\n    if(!args)\n\t{\n\t\treturn value;\n    }\n\treturn value.filter((val) =>{\n      let rval  = (val.username.toLowerCase().includes(args.toLowerCase()) || val.emailId.toLowerCase().includes(args.toLowerCase()));\n\treturn rval});\n    \n  }\n\n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MainService } from \"../../main.service\";\r\n\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class FeatureService {\r\n\r\n\tprivate baseUrl = \"\";\r\n\tconstructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n\t\r\n\tgetFeaturesById(id): any {\r\n\t\tlet data;\r\n\t\t\tdata = this.http.get(`${this.baseUrl}/feature/getById/${id}`)\r\n\t\t\treturn data;\r\n\t}\r\n\t\r\n\tgetFeaturesByParentId(id): any {\r\n\t\tlet data;\r\n\t\t\tdata = this.http.get(`${this.baseUrl}/feature/getByParentId/${id}`)\r\n\t\t\treturn data;\r\n\t}\r\n\r\n\tgetFeaturesByFeatureType(featureTypeId: any): any {\r\n\t\tlet data;\r\n\t\t\tdata = this.http.get(`${this.baseUrl}/features/getByFeatureType/${featureTypeId}`)\r\n\t\t\treturn data;\r\n\t}\r\n\t\r\n\tgetModelFeatureByfeatureId(id):any{\r\n\t\tlet data;\r\n\t\t\tdata = this.http.get(`${this.baseUrl}/features/getModelFeaturePrivilegeList/${id}`)\r\n\t\t\treturn data;\r\n\t\t}\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MainService } from \"../../main.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RoleMasterService {\r\n\r\n\tprivate baseUrl = \"\";\r\n\tconstructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n\r\n\tgetRoleMasterList(): any {\r\n\t\tlet data;\r\n\t\t\t\tdata = this.http.get(`${this.baseUrl}/roleMaster/get`);\r\n\t\t\treturn data;\r\n\t}\r\n\tcreateRoleMaster(roleMaster: Object): Observable<Object> {\r\n\t\treturn this.http.post(`${this.baseUrl}/roleMaster/add`, roleMaster);\r\n\t\t\t}\r\n\tupdateRoleMaster(roleMaster) {\r\n\t\treturn this.http.post(`${this.baseUrl}/roleMaster/update`, roleMaster)\r\n\t\t\t\t\r\n\t}\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MainService } from \"../../main.service\";\r\nimport { RolePrivileges } from \"../masters/role-privileges\";\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class RolePrivilegeService{\r\n\t\r\n\t\r\n\t\r\n\t\tprivate baseUrl = \"\";\r\n\t   constructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl(); }\r\n\t   \r\n\t getRolePrivilegeByRoleId(roleMasterId: number):any \r\n\t{\r\n\t\tlet data;\r\n\t\t\tdata = this.http.get(`${this.baseUrl}/rolePrivileges/getByRoleId/${roleMasterId}`)\r\n\t\t\treturn data;\r\n\t}\r\n\tcreateRolePrivilege(rolePrivilege: RolePrivileges):any {\r\n\t\tlet data;\r\n\t\t\tdata = this.http.post(`${this.baseUrl}/rolePrivileges/add`,rolePrivilege)\r\n\t\t\treturn data;\r\n\t}\r\n\t\r\n\tupdateRolePrivilege(rolePrivilege: RolePrivileges):any {\r\n\t\tlet data;\r\n\t\t\t\tdata = this.http.post(`${this.baseUrl}/rolePrivilege/update`,rolePrivilege)\r\n\t\t\treturn data;\r\n\t}\r\n\t//************Services For Privileges *********** */\r\n\tgetPrivilegesListByParentFeatureId(parentId):any{\r\n\t\tlet data;\r\n\t\t\t\tdata = this.http.get(`${this.baseUrl}/privileges/getByParentFeatureId/${parentId}`)\r\n\t\t\treturn data;\r\n\t\t\r\n\t}\r\n\t\r\n\tgetModelFeaturePrivilegesListByParentFeatureId(parentId):any{\r\n\t\tlet data;\r\n\t\t\t\tdata = this.http.get(`${this.baseUrl}/privileges/getModelFeaturePrivilegeList/${parentId}`)\r\n\t\t\treturn data;\r\n\t\t\r\n\t}\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MainService } from \"../../main.service\";\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class UserRoleService {\r\n\t\r\n\tprivate baseUrl = \"\";\r\n\tconstructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n\r\n\tgetUserRoleList(): any {\r\n\t\t\treturn  this.http.get(`${this.baseUrl}/userRoleDetails/get`);\r\n\t}\r\n\tgetUserRoleListByUserId(userId: number):any {\r\n\t\tlet data =this.http.get(`${this.baseUrl}/userRoleDetails/getByUserId/${userId}`);\r\n\t\treturn data;\r\n\t}\r\n\r\n\tcreateUserRole(roleMaster: Object): Observable<Object> {\r\n\t\treturn this.http.post(`${this.baseUrl}/userRoleDetails/add`, roleMaster);\r\n\t}\r\n\t\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MainService } from '../../../main.service';\r\nimport { Employee } from '../masters/Employee';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl(); }\r\n\tbaseUrl = \"\";\r\n\t\r\n\tgetEmployee():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/employees/get`)\r\n\t}\r\n\tgetEmployeesList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/employees/get`)\r\n\t}\r\n\t\r\n\tgetEmployeeByEmployeeNo(empNo):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/employee/getByEmpNo/${empNo}`)\r\n\t}\r\n\tcreateEmployee(employee):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/employee/add`,employee)\r\n\t}\r\n\t\r\n\tupdateEmployee(employeeId: number, employee: Employee):any{\r\n\t\treturn this.http.put(`${this.baseUrl}/employee/update/${employeeId}`,employee)\r\n\t}\r\n\t\r\n\t\r\n}\r\n","export default \".is-active{\\r\\n\\theight:20px;\\r\\n}\\r\\n.col-md-2{\\r\\n\\tmargin-top:5px;\\r\\n}\\r\\nlabel{\\r\\n\\talign-self: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGVycHJpc2UtdXNlci1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLFdBQVc7QUFDWjtBQUNBO0NBQ0MsY0FBYztBQUNmO0FBQ0E7Q0FDQyxrQkFBa0I7QUFDbkIiLCJmaWxlIjoiZW50ZXJwcmlzZS11c2VyLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlzLWFjdGl2ZXtcclxuXHRoZWlnaHQ6MjBweDtcclxufVxyXG4uY29sLW1kLTJ7XHJcblx0bWFyZ2luLXRvcDo1cHg7XHJcbn1cclxubGFiZWx7XHJcblx0YWxpZ24tc2VsZjogY2VudGVyO1xyXG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnRlcnByaXNlLXVzZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnRlcnByaXNlLXVzZXItbWFwcGluZy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlLW1hc3Rlci1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlLW1hc3Rlci1saXN0LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXJvbGUtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXJvbGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnRlcnByaXNlLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div [@routerTransition]>\\n\\t<app-page-header [mainhead]=\\\"'EnterpriseUser'\\\"\\n\\t\\t[mainheadLink]=\\\"'/enterpriseUser'\\\" [heading]=\\\"'New EnterpriseUser'\\\"\\n\\t\\t[icon]=\\\"'fa-edit'\\\"></app-page-header>\\n</div>\\n<div class=\\\"card\\\">\\n\\t<div  class=\\\"card-header p-0\\\">\\n\\t\\t\\t<nav class =\\\"navbar bg-dark text-white\\\" >\\n\\t    \\t\\t<h2 class = \\\"col-md-5\\\">Create User</h2>\\n\\t\\t\\t\\t<button class=\\\"btn btn-light btn-sm p-0 m-0\\\" [routerLink] = \\\"'/enterpriseUser/get'\\\" >\\n\\t\\t\\t\\t\\t<img src =\\\"./assets/images/round-list.png\\\" matTooltip = \\\"Show list\\\" style =\\\"height:35px;width:35px;\\\">\\n\\t\\t\\t\\t</button>\\n\\t  \\t\\t</nav>\\n\\t</div>\\n\\t<form [formGroup] =\\\"registerForm\\\" >\\n\\t<div class = \\\"card-body\\\">\\n\\t<div class =\\\"col-sm-12\\\">\\t\\t\\n\\t\\t\\t<div class =\\\"row form-group\\\">\\n            \\t<label for = \\\"userLogin\\\" class = \\\"col-md-2\\\">  User Login</label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id= \\\"userLogin\\\" required formControlName =  \\\"userName\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n                <label for = \\\"loginId\\\" class = \\\"col-md-2\\\">  User Name </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id= \\\"loginId\\\" required formControlName =  \\\"userFullName\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"firstName\\\" class = \\\"col-md-2\\\">  Employee NO. </label>\\n\\t\\t    \\t \\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t \\t\\t<input type=\\\"text\\\"\\n\\t\\t\\t \\t\\t\\t\\t\\tclass = \\\"form-control\\\"\\n\\t\\t\\t\\t\\t           placeholder=\\\"Pick one\\\"\\n\\t\\t\\t\\t\\t           aria-label=\\\"Number\\\"\\n\\t\\t\\t\\t\\t           matInput\\n\\t\\t\\t\\t\\t           [formControl]=\\\"employee\\\"\\n\\t\\t\\t\\t\\t           [matAutocomplete]=\\\"auto\\\">\\n\\t\\t\\t\\t\\t   \\n\\t\\t    \\t</div>\\n\\t\\t    \\t <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\n\\t\\t\\t\\t      <mat-option *ngFor=\\\"let option of employeeFilterList |async\\\" [value]=\\\"option.employeeFullName\\\" (click) =\\\"selectGroup(option)\\\">\\n\\t\\t\\t\\t        {{option.email}}&nbsp;{{option.employeeFullName}}\\n\\t\\t\\t\\t      </mat-option>\\n\\t\\t\\t\\t</mat-autocomplete>\\n\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t    \\n\\t\\t    \\t<label for = \\\"remarks\\\" class = \\\"col-md-2\\\"> Password </label>\\n\\t\\t    \\t\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1 input-group\\\"  >\\n\\t\\t\\t\\t\\t<input [type]=\\\"show?'password':'text'\\\" class=\\\"form-control\\\" id= \\\"password\\\" required formControlName =  \\\"password\\\" >\\n\\t\\t\\t\\t\\t<div class =\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t <button class =\\\"input-group-text\\\" (click) = \\\"show = !show\\\">\\n    \\t\\t\\t\\t\\t<mat-icon *ngIf = \\\"show\\\">visibility</mat-icon>\\n    \\t\\t\\t\\t\\t<mat-icon *ngIf = \\\"!show\\\">visibility_off</mat-icon>\\n  \\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"remarks\\\" class = \\\"col-md-2\\\"> Confirm Password </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1 input-group\\\"  >\\n\\t\\t\\t \\t\\t<input [type]=\\\"show?'password':'text'\\\" class=\\\"form-control\\\" (change) = \\\"checkPassword()\\\" required [formControl] =  \\\"confPassword\\\"  >\\n\\t\\t\\t\\t\\t<div class =\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t<button class =\\\"input-group-text\\\" (click) = \\\"show = !show\\\">\\n\\t    \\t\\t\\t\\t\\t<mat-icon *ngIf = \\\"show\\\">visibility</mat-icon>\\n\\t    \\t\\t\\t\\t\\t<mat-icon *ngIf = \\\"!show\\\">visibility_off</mat-icon>\\n\\t  \\t\\t\\t\\t\\t</button>\\n\\t\\t    \\t\\t</div>\\n\\t\\t    \\t</div>\\n\\t\\t    \\t<label class=\\\"col-sm-2\\\"> UserType</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"userType\\\"  [compareWith]=\\\"compareUserType\\\">\\n                   \\t\\t<option [ngValue] = null>--Select--</option>\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n         \\t\\t\\n         \\t\\t\\n\\t\\t    \\t<label class =\\\"col-md-12\\\" *ngIf = \\\"wrongPassword\\\">\\n\\t\\t    \\t\\t<label class = \\\"col-md-4\\\"></label>\\n\\t\\t    \\t\\t<label class = \\\"col-md-4\\\" style =\\\"color:red;\\\">Password and Confirm password are not same.</label>\\n\\t\\t    \\t</label>\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t<!-- <label for = \\\"firstName\\\" class = \\\"col-md-2\\\">  Department </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id= \\\"firstName\\\" required formControlName =  \\\"emailId\\\" >\\n\\t\\t    \\t</div> -->\\n\\t\\t    \\t\\n\\n                <label for = \\\"firstName\\\" class = \\\"col-md-2\\\"> Password Expires</label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control h-50\\\" id= \\\"isPswExpires\\\" required  formControlName =  \\\"isPswExpires\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t <label for = \\\"firstName\\\" class = \\\"col-md-2\\\"> Password Change Required</label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control h-50\\\" id= \\\"pswChangedReqd\\\" required formControlName =  \\\"pswChangeReqd\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t<label for = \\\"firstName\\\" class = \\\"col-md-2\\\"> isActive </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" class=\\\"form-control is-active\\\" id= \\\"isActive\\\" required formControlName =  \\\"isActive\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"firstName\\\" class = \\\"col-md-2\\\">  Password Expiry </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 pr-5 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id= \\\"pswExpiryDays\\\" required formControlName =  \\\"pswExpiryDays\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t<label style = \\\"margin-left:-42px;margin-right:10px;align-self:center;\\\">days</label>\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"firstName\\\" class = \\\"col-md-2\\\">  Allowed Failed Logins </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" id= \\\"maxFailedLoginAttempt\\\" required formControlName =  \\\"maxFailedLoginAttempt\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"remarks\\\" class = \\\"col-md-2\\\"> Remarks </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<textarea class=\\\"form-control \\\" id= \\\"remaks\\\" required formControlName =  \\\"remarks\\\" ></textarea>\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"file-input\\\" class = \\\"col-md-2\\\"> Images </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t \\t\\t<input type =\\\"file\\\" #fileInput  id = \\\"file-input\\\" style = \\\"display: none;\\\" accept =\\\"image/*\\\" (change) = \\\"uploadImage($event.target)\\\" multiple>\\n\\t\\t\\t\\t\\t<img [src] =\\\"img\\\" (click) = \\\"fileInput.click()\\\"  style =\\\"height: 100px;weight:100px;\\\" class = \\\"border border-dark\\\">\\n\\t\\t\\t\\t\\t<label *ngIf =\\\"fileInput.files[0] != null\\\">{{fileInput.files[0].name}}</label>\\n\\t\\t\\t\\t\\t<button class =\\\"btn btn-sucess\\\" (click) = \\\"uploadImage(fileInput)\\\">Upload</button>\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t<div class = \\\"col-md-8 text-center pt-5\\\"><br>\\n               \\t \\t<button class=\\\"btn btn-primary col-md-2\\\" type=\\\"submit\\\" (click) = \\\"onSubmit()\\\">Submit</button>&nbsp;&nbsp;\\n                \\t<button class=\\\"btn btn-primary col-md-2\\\" type=\\\"reset\\\">Reset</button>\\n       \\t\\t\\t</div>\\n\\t\\t    \\t<!-- \\n         \\t\\t<label class=\\\"col-sm-2\\\"> Gender</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"gender\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n         \\t\\t<label class=\\\"col-sm-2\\\"> UserStatus</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"userStatus\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n         \\t\\t<label class=\\\"col-sm-2\\\"> UserType Status</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"userTypeStatus\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n         \\t\\t<label class=\\\"col-sm-2\\\"> Marital Status</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"maritalStatus\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n         \\t\\t<label class=\\\"col-sm-2\\\"> nationality</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"nation\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n\\t\\t    \\t<label class=\\\"col-sm-2\\\"> User Category</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"userCategory\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n         \\t\\t<label class=\\\"col-sm-2\\\"> Blood Group</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 p-1\\\">\\n                   \\t<select class=\\\"form-control\\\" formControlName = \\\"bloodGroup\\\" >\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor = \\\"let lookupEntity of lookupEntityList\\\">\\n\\t\\t            \\t<option *ngIf = \\\"lookupEntity.category.categoryId == 2\\\" [ngValue] =\\\"lookupEntity\\\">{{lookupEntity.lookupValue}}</option>\\n\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t</select>\\n         \\t\\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"firstName\\\" class = \\\"col-md-2\\\">  UserHealthCard Valid Upto </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id= \\\"firstName\\\" required formControlName =  \\\"userHealthCardValidUpto\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"remarks\\\" class = \\\"col-md-2\\\"> Alias Name </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id= \\\"aliasName\\\" required formControlName =  \\\"aliasName\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t<label for = \\\"remarks\\\" class = \\\"col-md-2\\\"> FatherName </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id= \\\"fatherName\\\" required formControlName =  \\\"fatherName\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t\\n\\t\\t    \\t<label for = \\\"remarks\\\" class = \\\"col-md-2\\\"> DOB </label>\\n\\t\\t\\t \\t<div class = \\\"col-md-2 p-1\\\"  >\\n\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id= \\\"dob\\\" required formControlName =  \\\"dob\\\" >\\n\\t\\t    \\t</div>\\n\\t\\t    \\t -->\\n\\t\\t    \\t\\n\\t\\t    \\t\\n\\t\\t</div> \\n\\t\\t\\t<!-- <div class = \\\"col-md-3\\\"><br>\\n                <button class=\\\"btn btn-primary col-md-6\\\" type=\\\"submit\\\">Submit</button>&nbsp; \\n                <button class=\\\"btn btn-primary col-md-5\\\" type=\\\"reset\\\">Reset</button>\\n       \\t\\t</div> -->\\n\\t</div>\\n\\t</div>\\n\\t</form>\\n</div>\\n\\n\\n  \\n\\n                    \\n                   \\n           \\n                \\n\\n           \\n       \\n    \\n\\n\";","export default \"<div [@routerTransition]>\\r\\n\\t<app-page-header [mainhead]=\\\"'EnterpriseUser'\\\"\\r\\n\\t\\t[mainheadLink]=\\\"'/enterpriseUser'\\\" [heading]=\\\"'EnterpriseUser List'\\\"\\r\\n\\t\\t[icon]=\\\"'fa-card'\\\"></app-page-header>\\r\\n</div>\\r\\n<div class=\\\"card\\\">\\r\\n\\t<div class =\\\"card-head\\\">\\r\\n\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t<h2 class=\\\"col-md-3\\\">USER LIST</h2>\\r\\n\\t\\t\\t<img src =\\\"./assets/images/close.ico\\\" matTooltip = \\\"Back\\\" style =\\\"height:35px;width:35px;\\\" (click) = \\\"back()\\\">\\r\\n\\t\\t</nav>\\r\\n\\t\\t<div class =\\\"row  m-0\\\">\\r\\n\\t\\t\\t<div class=\\\" col-md-4 pt-1 pl-0 form-group input-group\\\">\\r\\n\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" />\\r\\n\\t\\t\\t<div class=\\\"input-group-append \\\">\\r\\n\\t\\t\\t\\t<button class=\\\"btn btn-info\\\" type=\\\"button\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-search\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class =\\\"col-md-7\\\"></div>\\r\\n\\t\\t<div class =\\\"col-md-1\\\">\\r\\n\\t\\t\\t<button class =\\\"btn btn-sm\\\">\\r\\n\\t\\t\\t\\t<img src =\\\"./assets/images/create.jpg\\\" matTooltip = \\\"New\\\" style =\\\"height:35px;width:35px;\\\" [routerLink] = \\\"'/enterpriseUser/add'\\\">\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"card-body \\\">\\r\\n\\t\\t<div class =\\\"row\\\">\\r\\n\\t\\t\\r\\n\\t\\t\\t<table class=\\\"table  table-sm border\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>EmailId</th>\\r\\n\\t\\t\\t\\t\\t<th>User Name</th>\\r\\n\\t\\t\\t\\t\\t<th>Employee No</th>\\r\\n\\t\\t\\t\\t\\t<th>UserType</th>\\r\\n\\t\\t\\t\\t\\t<th>GoTo Mapping</th>\\r\\n\\t\\t\\t\\t\\t<th>Edit</th>\\r\\n\\t\\t\\t\\t\\t<th>Privilege</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t<tr *ngFor='let user of enterpriseUserList | enterpriseUser: name'>\\r\\n\\t\\t\\t\\t\\t<td>{{user.emailId}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{user.username}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{user.employeeNo}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{user.userType.lookupValue}}</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"gotoUserBranchMapping(user)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-info btn-sm\\\" style=\\\"margin-left: 10px\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-edit\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t<br>\\r\\n\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click) = \\\"gotoUpdateUser(user)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEdit</button>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"gotoUserRolePrivilegeCreate(user)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-danger\\\">Privilege</button>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t</div>\\r\\n</div>\\r\\n\";","export default \"<div [@routerTransition]>\\n\\t<app-page-header [mainhead]=\\\"'EnterpriseUser'\\\"\\n\\t\\t[mainheadLink]=\\\"'/enterpriseUser'\\\" [heading]=\\\"'EnterpriseUser Mapping'\\\"\\n\\t\\t[icon]=\\\"'fa-user'\\\"></app-page-header>\\n</div>\\n<div class = \\\"container-fluid\\\">\\n\\t<div class=\\\"card-header \\\">User Branch mapping .....{{user.userFullName}}</div>\\n\\t<div class = \\\"card-body\\\">\\n\\t\\t<div class = \\\"container\\\">\\n\\t\\t\\t<ngb-tabset #t=\\\"ngbTabset\\\">\\n<!-- -------------------------User Branch Mapping ------------------------------------------------------ -->\\n\\t\\t\\t\\t<ngb-tab title=\\\"UserBranchMapping\\\" id=\\\"branchTab\\\">\\n\\t\\t\\t\\t\\t<ng-template ngbTabContent>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class='card-head text-white bg-info text-center'>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>Branch List</h3>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<form #userBranchForm=ngForm>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\" table-bordered   col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let b of branchList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [ngModel] = \\\"checkBranchUserConnection(b)\\\" name=\\\"my{{b.id}}\\\" ngModel /><label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{b.branchName}} </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"saveBranch(userBranchForm)\\\" *ngIf = \\\"!userBranchFound\\\">Save\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tBranch</button>&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"saveBranch(userBranchForm)\\\" *ngIf = \\\"userBranchFound\\\">Update\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tBranch</button>&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" [routerLink]=\\\"'/user/userlist'\\\"> Back</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t\\t</ngb-tab>\\n\\t<!-- ----------------------------------User Department Mapping -------------------------------------------- -->\\n\\t\\t\\t\\t<ngb-tab id=\\\"departmentTab\\\">\\n\\t\\t\\t\\t<ng-template ngbTabTitle><b>DepartmentMapping</b></ng-template>\\n\\t\\t\\t\\t<ng-template ngbTabContent>\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t\\t<div class='card-head text-white bg-info text-center'>\\n\\t\\t\\t\\t\\t\\t\\t<h3>Department List</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)] =\\\"userBranch\\\" (ngModelChange) =\\\"setUserBranch(userBranch)\\\" name=\\\"branch\\\" class=\\\"info h-25 col-md-3\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  ngModel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option [value] = dummyUserBranchMapping> ---Select---</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ub of userBranchList\\\" [ngValue]=\\\"ub\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ub.branch.branchName}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>&nbsp;<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<form #userDepartmentForm=ngForm>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\" table-responsive col-md-12\\\" *ngIf=\\\"!submitted\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\" table-bordered\\\" *ngIf = \\\"showDepartments\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let department of departmentList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"table-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngModel] =\\\"checkDepartmentUserConnection(department)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"my{{department.departmentId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tngModel /><label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{department.departmentName}} </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"saveBranchDepartment(userDepartmentForm)\\\">Save\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDepartment</button>&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</ngb-tab>\\n\\t<!-- ---------------------------------User ServiceCenter Mapping --------------------------------------- -->\\n\\t\\t\\t\\t<ngb-tab id=\\\"serviceCenterTab\\\">\\n\\t\\t\\t\\t<ng-template ngbTabTitle><b>ServiceCenterMapping</b></ng-template>\\n\\t\\t\\t\\t<ng-template ngbTabContent>\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t\\t<div class='card-head text-white bg-info text-center'>\\n\\t\\t\\t\\t\\t\\t\\t<h3>SerivceCenter List</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)] =\\\"userBranch\\\" (ngModelChange) =\\\"setUserBranch(userBranch)\\\" name=\\\"branch\\\" class=\\\"info h-25 col-md-3\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  ngModel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option [value] = dummyUserBranchMapping> ---Select---</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ub of userBranchList\\\" [ngValue]=\\\"ub\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ub.branch.branchName}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>&nbsp;<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<form #userServiceCenterForm =ngForm>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\" table-responsive col-md-12\\\" *ngIf=\\\"!submitted\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\" table-bordered\\\" *ngIf = \\\"showDepartments\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let serviceCenter of serviceCenterList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"table-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngModel] =\\\"checkServiceCenterUserConnection(serviceCenter)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"my{{serviceCenter.serviceCenterId}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tngModel /><label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{serviceCenter.serviceCenterName}} </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"saveUserServiceCenter(userServiceCenterForm)\\\">Save\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tServiceCenter</button>&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</ngb-tab>\\t\\n\\t<!-- -------------------------User ServiceCenter Mapping ------------------------------------------------------ -->\\n\\t\\t\\t\\t<ngb-tab id=\\\"storeAccessories\\\">\\n\\t\\t\\t\\t<ng-template ngbTabTitle><b>Store Mapping</b></ng-template>\\n\\t\\t\\t\\t<ng-template ngbTabContent>\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t\\t<div class='card-head text-white bg-info text-center'>\\n\\t\\t\\t\\t\\t\\t\\t<h3>StoreAccessories List</h3>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<select [(ngModel)] =\\\"userBranch\\\" (ngModelChange) =\\\"setUserBranch(userBranch)\\\" name=\\\"branch\\\" class=\\\"info h-25 col-md-3\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  ngModel>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option [value] = dummyUserBranchMapping> ---Select---</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let ub of userBranchList\\\" [ngValue]=\\\"ub\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ub.branch.branchName}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>&nbsp;<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<form #userStoreForm =ngForm>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\" table-responsive col-md-12\\\" *ngIf=\\\"!submitted\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\" table-bordered\\\" *ngIf = \\\"showDepartments\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let stores of storeList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"table-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngModel] =\\\"checkStoreUserConnection(stores)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname=\\\"my{{stores.id}}\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tngModel /><label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{stores.storeName}} </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-success\\\" (click)=\\\"saveUserStoreAccessories(userStoreForm)\\\">Save Store</button>&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ng-template>\\n\\t\\t\\t</ngb-tab>\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\n\\t\\t</ngb-tabset>\\n\\t\\t</div>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"card\\\">\\n\\t<div class=\\\"card-header p-0\\\">\\n\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\n\\t\\t\\t<h2 class=\\\"col-md-5\\\">Create RoleDetails</h2>\\n\\t\\t\\t<button class=\\\"btn btn-success\\\"\\n\\t\\t\\t\\t[routerLink]=\\\"'/enterpriseUser/rolePrivilege/list'\\\">View\\n\\t\\t\\t\\tList</button>\\n\\t\\t</nav>\\n\\t</div>\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<form [formGroup]=\\\"roleForm\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<label for=\\\"roleName\\\" class=\\\"col-md-2\\\"> Role Name </label>\\n\\t\\t\\t\\t<div class=\\\"col-md-9 p-1\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control h-75\\\" id=\\\"rolename\\\" required\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"roleName\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<label for=\\\"active\\\" class=\\\"col\\\"> Active </label> \\n\\t\\t\\t\\t<input type=\\\"checkbox\\\" class =\\\"col mt-2\\\" formControlName=\\\"active\\\" />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<label for=\\\"description\\\" class=\\\"col-md-2\\\"> Description </label>\\n\\t\\t\\t\\t<div class=\\\"col-md-10 p-1\\\">\\n\\t\\t\\t\\t\\t<textarea class=\\\"form-control h-75\\\" id=\\\"description\\\" required\\n\\t\\t\\t\\t\\t\\tformControlName=\\\"description\\\"></textarea>\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t<button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\"\\n\\t\\t\\t\\t\\t*ngIf=\\\"!isUpdateRequest\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t<button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\"\\n\\t\\t\\t\\t\\t*ngIf=\\\"isUpdateRequest\\\" (click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t<button class=\\\"btn btn-success btn-sm\\\" type=\\\"reset\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"resetForm()\\\">Reset</button>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n<!-- ************************************* module list*********************************************** -->\\n<div class=\\\"card\\\">\\n\\t<div class=\\\"card-body\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-6 \\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<label class=\\\"col-md-4 pr-0 m-0\\\">Module</label>\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-4 p-0 m-0\\\">\\n\\t\\t\\t\\t\\t\\t<mat-select class=\\\"form-control\\\" title = \\\"select Feature\\\" [placeholder]=\\\"'&nbsp;&nbsp;--Select--'\\\" [(ngModel)]=\\\"selectedFeature\\\" name =\\\"selectedFeature\\\" id = \\\"selectedFeature\\\"\\n\\t\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"showFeatures($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let featureModule of featureModuleList\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[value]=\\\"featureModule\\\">{{featureModule.featureDesc}}</mat-option>\\n\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"table-responsive container-fluid\\\">\\n\\t\\t\\t\\t\\t<table class=\\\"table  table-bordered w-100 d-block d-md-table\\\">\\n\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Select</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Feature</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Privilege</th>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t<tbody *ngIf=\\\"isFeatureModule\\\">\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let privilege of  modelFeaturePrivilegeList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td><input type=\\\"checkbox\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"featureStore($event.target.checked,privilege)\\\" [checked] = \\\"compareWith(privilege)\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td >{{privilege.feature}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{privilege.privilege.privilegeName}}</td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t<table class=\\\"table table-bordered \\\">\\n\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Module</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Feature</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Privilege</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Removed</th>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t<tbody >\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let privilege of privilegeListForStore\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{privilege.model}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{privilege.feature}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{privilege.privilege.privilegeName}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\" btn-danger m-1 h6\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"removeFeature(privilege)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-times\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-2\\\"></div>\\n\\t\\t\\t<div class=\\\"col-md-1\\\">\\n\\t\\t\\t\\t<button class=\\\"btn btn-sm btn-success\\\" *ngIf = \\\"!isRolePrivilegeExist\\\" (click)=\\\"saveFeatures()\\\">Assign Privilege</button>\\n\\t\\t\\t\\t<button class=\\\"btn btn-sm btn-success\\\" *ngIf = \\\"isRolePrivilegeExist\\\" (click)=\\\"updatePrivilege()\\\">Update Privilege</button>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"card\\\">\\n\\t\\t<div class=\\\"card-header p-0\\\"> \\n\\t\\t\\t<nav class=\\\"navbar bg-dark text-white text-white\\\">\\n\\t\\t\\t\\t<h2 class=\\\"col-md-5\\\">Role Privilege List</h2>\\n\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"search\\\"\\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"searchRolePrivilege\\\">\\n\\t\\t\\t\\t <a\\trouterLink=\\\"/enterpriseUser/rolePrivilege/add\\\"><button value=\\\"create\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"btn btn-primary\\\">create</button></a>\\n\\t\\t\\t</nav>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body table-responsive\\\">\\n\\t\\t\\t<table class=\\\"table table-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Role Name</th>\\n\\t\\t\\t\\t\\t\\t<th>Role Description</th>\\n\\t\\t\\t\\t\\t\\t<th>Active</th>\\n\\t\\t\\t\\t\\t\\t<th>Modify</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<!-- <tr *ngFor=\\\"let role of rolePrivilege|searchRolePrivilege:searchRolePrivilege |slice: (page-1) * pageSize : page * pageSize\\\"> -->\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr\\n\\t\\t\\t\\t\\t\\t*ngFor='let roleMaster of roleMasterList |slice: (page-1) * pageSize : page * pageSize'>\\n\\t\\t\\t\\t\\t\\t<td>{{roleMaster.roleName}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{roleMaster.description}}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{roleMaster.active}}</td>\\n\\n\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-info\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(click) = \\\"gotoUpdateRoleMaster(roleMaster)\\\" >Modify</button>\\n\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<ngb-pagination [collectionSize]=\\\"len\\\" [(page)]=\\\"page\\\"\\n\\t\\t\\t\\t\\t\\t[pageSize]=\\\"pageSize\\\" [rotate]=\\\"true\\\" [ellipses]=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\tclass=\\\"col-md-9\\\"></ngb-pagination>\\n\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n\";","export default \"<div class=\\\"card-header p-0\\\" *ngIf =\\\"user != null \\\">\\n\\t<nav class = \\\"navbar bg-dark text-white m-0\\\">\\n\\t\\t<h3>{{user.userFullName}}</h3>\\n\\t\\t<button class =\\\"btn btn-success\\\" (click) = \\\"back()\\\">Back </button>\\n\\t</nav>\\n</div>\\n<div class=\\\" row col-md-12  mr-auto mt-1\\\">\\n\\t<div class=\\\"col-md-6 navbar-nav\\\">\\n\\t\\t<h3 Style=\\\"font-weight: bold\\\">Available Roles</h3>\\n\\t\\t<table border=\\\"1px solid\\\" width=\\\"100%\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>Type</th>\\n\\t\\t\\t\\t\\t<th>Role Name</th>\\n\\t\\t\\t\\t\\t<th >Add</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let role of roleMasterList  \\\">\\n\\t\\t\\t\\t\\t<td>{{role.type}}</td>\\n\\t\\t\\t\\t\\t<td>{{role.roleName}}</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-1 h6\\\" (click)= \\\"addRole(role)\\\">Add</button>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t\\t<div class =\\\"d-flex  bd-highlight flex-row-reverse\\\">\\n\\t\\t<div class = \\\"pt-2\\\">\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-sm \\\" mat-flat-button color = \\\"accent\\\" (click) =\\\"saveUserRole()\\\" >Assign Privilege</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\t\\n\\t</div>\\n\\t<div class=\\\"col-md-6 navbar-nav\\\">\\n\\t\\t<h3 Style=\\\"font-weight: bold\\\">Assigned User Role</h3>\\n\\t\\t<table border=\\\"1px solid\\\" width=\\\"100%\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>Type</th>\\n\\t\\t\\t\\t\\t<th>User Role</th>\\n\\t\\t\\t\\t\\t<th>Remove</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody >\\n\\t\\t\\t\\t<tr *ngFor=\\\"let role of roleMasterListForStore\\\">\\n\\t\\t\\t\\t\\t<td>{{role.type}}</td>\\n\\t\\t\\t\\t\\t<td>{{role.roleName}}</td>\\n\\t\\t\\t\\t\\t<td>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<button  class= \\\"btn btn-sm btn-danger m-1 h6\\\" (click) = \\\"removeRole(role)\\\"><i class=\\\"fa fa-times\\\"></i></button>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n\\t\\n</div>\\n\\n\";","export default \"<div class =\\\"container-fluid p-0 m-0\\\">\\n\\n<div class = \\\"card justify-content-center p-0 m-0\\\">\\n\\t\\t<div class =\\\"card-head \\\">\\n\\t\\t\\t<nav class = \\\"navbar bg-dark text-white text-white\\\">\\n\\t\\t\\t\\t<h2>Privilege List</h2>\\n\\t\\t\\t\\t<input type = \\\"text\\\" placeholder = \\\"search\\\" [(ngModel)] = \\\"searchRolePrivilege\\\">\\n\\t\\t\\t\\t<a routerLink = \\\"/enterpriseUser/userRole/add\\\"><button value= \\\"create\\\" class =\\\"btn btn-primary\\\"> create</button></a>\\n\\t\\t\\t</nav>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-body table-responsive\\\">\\n                    <table class=\\\"table table-bordered\\\">\\n\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr >\\n\\t\\t\\t\\t\\t\\t<th>Type</th>\\n\\t\\t\\t\\t\\t\\t<th>Role Name</th>\\n\\t\\t\\t\\t\\t\\t<th>Add</th>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t \\t<!-- <tr *ngFor=\\\"let role of rolePrivilege|searchRolePrivilege:searchRolePrivilege |slice: (page-1) * pageSize : page * pageSize\\\"> -->\\n\\t\\t\\t\\t<tbody>\\n                            <tr *ngFor = 'let roleMaster of roleMasterList |slice: (page-1) * pageSize : page * pageSize'>\\n                                <td>{{roleMaster.roleName}}</td>\\n                                <td>{{roleMaster.description}}</td>\\n                                <td>{{roleMaster.active}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class = \\\"btn btn-info\\\" [routerLink]=\\\"'/user/userRoleCreate'\\\"> Add  </button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n                            </tr>\\n                            <ngb-pagination [collectionSize]=\\\"len\\\" [(page)]=\\\"page\\\" [pageSize] = \\\"pageSize\\\"  [rotate]=\\\"true\\\"  [ellipses]=\\\"false\\\" class = \\\"col-md-9\\\"></ngb-pagination>\\n                            \\n                        </tbody>\\n                    </table>\\n\\t\\t\\n\\t\\t</div>\\n\\t\\t</div>\\n</div>\\n\";","export default \" <div class=\\\"row\\\">\\n\\t<div class=\\\"col-xl-4 col-lg-6\\\">\\n\\t    <app-stat [bgClass]=\\\"'primary'\\\" [count]=\\\"01\\\" [icon]=\\\"'far fa-address-card'\\\" \\n\\t    [label]=\\\"'EnterpriseUser Category'\\\" [outcomeLink]=\\\"'enterpriseUser/get'\\\" [data] = \\\"' go to EnterpriseUser List'\\\"></app-stat>\\n\\t</div>\\n\\t<div class=\\\"col-xl-4 col-lg-6\\\">\\n\\t    <app-stat [bgClass]=\\\"'secondary'\\\" [count]=\\\"01\\\" [icon]=\\\"'far fa-address-card'\\\" \\n\\t    [label]=\\\"'EnterpriseUser-Mapping'\\\" [outcomeLink]=\\\"'enterpriseUser/user-mapping'\\\" [data] = \\\"' go to EnterpriseUser Mapping'\\\"></app-stat>\\n\\t</div>\\n\\t<div class=\\\"col-xl-4 col-lg-6\\\">\\n\\t    <app-stat [bgClass]=\\\"'success'\\\" [count]=\\\"01\\\" [icon]=\\\"'far fa-edit'\\\" \\n\\t    [label]=\\\"'Create EnterpriseUser'\\\" [outcomeLink]=\\\"'enterpriseUser/add'\\\" [data] = \\\"' go to EnterpriseUser Form'\\\"></app-stat>\\n\\t</div>\\n</div>\\n\";"]}