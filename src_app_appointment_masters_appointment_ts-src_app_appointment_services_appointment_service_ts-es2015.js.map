{"version":3,"sources":["./src/app/appointment/masters/appointment.ts","./src/app/appointment/services/appointment.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA8D;AACU;AAEJ;AACC;AACR;AACN;AAGhD,MAAM,WAAY,SAAQ,mEAAU;IAC1C;QACC,KAAK,EAAE,CAAC;QAGT,WAAM,GAAW,IAAI,yEAAM,EAAE,CAAC;QAC9B,eAAU,GAAe,IAAI,6EAAU,EAAE,CAAC;QAC1C,SAAI,GAAS,IAAI,kEAAI,EAAE,CAAC;QACxB,WAAM,GAAa,IAAI,0EAAQ,EAAE,CAAC;QAClC,YAAO,GAAY,IAAI,4DAAO,EAAE,CAAC;QACjC,aAAQ,GAAU,IAAI,IAAI,EAAE,CAAC;QAC7B,WAAM,GAAU,IAAI,IAAI,EAAE,CAAC;QAC3B,gBAAW,GAAY,aAAa,CAAC;QACrC,wBAAmB,GAAS,IAAI,IAAI,EAAE,CAAE;QAGxC,cAAS,GAAS,IAAI,IAAI,EAAE,CAAC;IAb7B,CAAC;CAcD;;;;;;;;;;;;;;;;;;;;;AC1BiD;AACP;AACM;IAMpC,kBAAkB,SAAlB,kBAAkB;IAE7B,YAAoB,IAAgB,EAAS,WAAwB;QAAjD,SAAI,GAAJ,IAAI,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QADrE,YAAO,GAAG,EAAE,CAAC;QAGb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IAAE,CAAC;IAChD,sBAAsB,CAAC,SAAS,EAAC,OAAO,EAAC,QAAQ;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,wBAAwB,SAAS,IAAI,OAAO,IAAI,QAAQ,EAAE,CAAC,CAAC;IACjG,CAAC;IACA,iBAAiB,CAAC,WAAW;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,kBAAkB,EAAC,WAAW,CAAC,CAAC;IACtE,CAAC;IACD,kBAAkB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,kBAAkB,CAAC,CAAC;IACzD,CAAC;IAED,0BAA0B,CAAC,YAAY,EAAC,QAAQ,EAAC,YAAY,EAAC,QAAQ;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,oBAAoB,YAAY,IAAI,QAAQ,IAAI,YAAY,IAAI,QAAQ,EAAE,CAAC;IAChH,CAAC;IAGD,iBAAiB,CAAC,aAAa,EAAE,WAAwB;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,uBAAuB,aAAa,EAAE,EAAC,WAAW,CAAC,CAAC;IACzF,CAAC;IACD,iBAAiB,CAAC,aAAa;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,gBAAgB,aAAa,EAAE,CAAC,CAAC;IACzE,CAAC;CACD;;YAlCQ,4DAAU;YAEV,sDAAW;;AAMP,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CA0B9B;AA1B8B","file":"src_app_appointment_masters_appointment_ts-src_app_appointment_services_appointment_service_ts-es2015.js","sourcesContent":["import { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { Department } from \"../../master/department/masters/department\";\r\nimport { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { Branch } from \"../../master/service-center/masters/branch\";\r\nimport { Employee } from \"../../master/unit-master/masters/Employee\";\r\nimport { Unit } from \"../../master/unit-master/masters/unit\";\r\nimport { Patient } from \"../../patient/master/patient\";\r\n\r\n\r\nexport class Appointment extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tappointmentId: number;\r\n\tbranch: Branch = new Branch();\r\n\tdepartment :Department = new Department();\r\n\tunit: Unit = new Unit();\r\n\tdoctor: Employee = new Employee();\r\n\tpatient: Patient = new Patient();\r\n\tfromDate : Date = new Date();\r\n\ttoDate : Date = new Date();\r\n\tappointment : String = \"appointment\";\r\n\tappointmentDateTime: Date = new Date() ;\r\n\tappointmentStatus : LookupEntity;\r\n\tappointmentStatusType : LookupEntity;\r\n\tvisitDate: Date = new Date();\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { MainService } from '../../main.service';\r\nimport { Appointment } from '../masters/appointment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n  baseUrl = \"\";\r\n  constructor(private http: HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n  getAppointmentTimeList(startTime,endTime,interval): any{\r\n\treturn this.http.get(`${this.baseUrl}/appointmentTimeList/${startTime}/${endTime}/${interval}`);\r\n}\r\n\tcreateAppointment(appointment): any{\r\n\t\treturn this.http.post(`${this.baseUrl}/appointment/add`,appointment);\r\n\t}\r\n\tgetAppointmentList(): any{\r\n\t\treturn this.http.get(`${this.baseUrl}/appointment/get`);\r\n\t}\r\n\t\r\n\tgetAppointmentListByFilter(selectedDate,doctorId,departmentId,branchId):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/appointmentList/${selectedDate}/${doctorId}/${departmentId}/${branchId}`)\r\n\t}\r\n\t\r\n\t\r\n\tupdateAppointment(appointmentId, appointment: Appointment):any{\r\n\t\treturn this.http.put(`${this.baseUrl}/appointment/update/${appointmentId}`,appointment);\r\n\t}\r\n\tdeleteAppointment(appointmentId): any{\r\n\t\treturn this.http.delete(`${this.baseUrl}/appointment/${appointmentId}`);\r\n\t}\r\n}\r\n"],"sourceRoot":"webpack:///"}