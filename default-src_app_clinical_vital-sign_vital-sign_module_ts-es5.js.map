{"version":3,"sources":["webpack:///node_modules/@angular-material-components/file-input/__ivy_ngcc__/fesm2015/angular-material-components-file-input.js","webpack:///src/app/clinical/vital-sign/master/vital-sign.ts","webpack:///src/app/clinical/vital-sign/services/vital-sign.service.ts","webpack:///src/app/clinical/vital-sign/vital-sign-routing.module.ts","webpack:///src/app/clinical/vital-sign/vital-sign.component.ts","webpack:///src/app/clinical/vital-sign/vital-sign.module.ts","webpack:///src/app/group-parameter-mapping/masters/fouom-type.ts","webpack:///src/app/group-parameter-mapping/masters/fouom.ts","webpack:///src/app/group-parameter-mapping/masters/vital-parameter.ts","webpack:///src/app/group-parameter-mapping/services/group-parameter-mappingin.service.ts","webpack:///src/app/master/group-master/masters/group-type.ts","webpack:///src/app/master/group-master/masters/groups.ts","webpack:///src/app/clinical/vital-sign/vital-sign.component.css","webpack:///src/app/clinical/vital-sign/vital-sign.component.html"],"names":["_c0","_c1","NgxMatFileInputComponent_mat_icon_4_Template","rf","ctx","_c2","_c3","nextUniqueId","NgxMatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_NgxMatInputMixinBase","mixinErrorState","NgxMatFileInputIcon","ɵfac","NgxMatFileInputIcon_Factory","t","ɵdir","type","selectors","ngDevMode","Directive","args","selector","NgxMatFileInputComponent","_elementRef","_platform","_cd","color","fileNames","_uid","stateChanges","Subject","focused","controlType","autofilled","_onTouched","_onChange","_disabled","_multiple","placeholder","separator","_required","_readonly","id","valueAccessor","disabled","value","coerceBooleanProperty","next","_id","_value","_accept","complete","updateErrorState","_updateInputValue","fn","isDisabled","options","_inputValueRef","nativeElement","focus","isFocused","readonly","markForCheck","validity","badInput","_isBadInput","empty","ids","_ariaDescribedby","join","event","_inputFileRef","click","preventDefault","stopPropagation","_markAsTouched","filelist","length","files","Array","i","push","item","_resetInputFile","multiple","text","isArray","map","x","name","NgxMatFileInputComponent_Factory","ɵcmp","contentQueries","NgxMatFileInputComponent_ContentQueries","dirIndex","_t","_customIcon","first","viewQuery","NgxMatFileInputComponent_Query","hostAttrs","inputs","required","accept","errorStateMatcher","exportAs","features","provide","MatFormFieldControl","useExisting","forwardRef","ngContentSelectors","decls","vars","consts","template","NgxMatFileInputComponent_Template","NgxMatFileInputComponent_Template_button_click_3_listener","$event","openFilePicker","NgxMatFileInputComponent_Template_input_change_6_listener","handleFiles","target","errorState","toString","directives","styles","encapsulation","ctorParameters","ElementRef","Platform","ChangeDetectorRef","NgControl","decorators","Optional","Self","NgForm","FormGroupDirective","ErrorStateMatcher","propDecorators","ViewChild","ContentChild","Input","Component","ViewEncapsulation","host","providers","NgxMatFileInputModule","NgxMatFileInputModule_Factory","ɵmod","ɵinj","imports","CommonModule","MatButtonModule","MatIconModule","MatFormFieldModule","MatInputModule","NgModule","declarations","exports","ngJitMode","calculFileSize","number","toFixed","MaxSizeValidator","max","ctrl","Number","isNaN","add","a","b","sumSize","size","reduce","maxSize","AcceptValidator","includes","VitalSign","LookupEntity","department","Department","enteredDateTime","Date","group","Groups","location","ServiceCenter","parameter","VitalParameters","patient","Patient","site","Branch","uom","FOUom","visit","Visit","BaseEntity","VitalSignService","http","mainService","baseUrl","getBaseUrl","get","patientId","groupId","vitalSign","post","HttpClient","MainService","Injectable","providedIn","routes","path","component","VitalSignComponent","VitalSignRoutingModule","RouterModule","vitalSignService","groupParameterMappingService","dialog","vitalSignList","vitalParameterGroupMappingList","currentValue","bmi","gcs","isFromClinicalDetails","reloadData","JSON","parse","localStorage","getItem","getVitalSignList","subscribe","data","console","log","getGroupParameterMappingList","window","document","getElementById","vitalSignForm","num","getGroupParameterMappingByGroupId","parameterId","formula","signs","split","weight","height","finalWeight","finalHeight","forEach","index","sys","dys","finalSys","finalDys","e","v","m","finalE","finalV","finalM","history","back","ref","referenceRange","lowerRefRange","upperRefRange","storeVitalSign","createVitalSign","alert","popUp","getVitalSignByGroupId","open","GroupParameterMappinginService","MatDialog","animations","routerTransition","VitalSignModule","PageHeaderModule","FormsModule","NgbModule","MaterialModule","FOUOMType","active","uomType","derived","visitTypeApplicable","dataType","genderWise","ageWise","groupParameterMapping","GroupType","groupType"],"mappings":"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","file":"default-src_app_clinical_vital-sign_vital-sign_module_ts-es5.js","sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Directive, Component, ViewEncapsulation, forwardRef, ElementRef, ChangeDetectorRef, Optional, Self, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/common';\nimport * as ɵngcc7 from '@angular/material/icon';\n\nconst _c0 = [\"inputFile\"];\nconst _c1 = [\"inputValue\"];\nfunction NgxMatFileInputComponent_mat_icon_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\", 7);\n    ɵngcc0.ɵɵtext(1, \"attach_file\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c2 = [[[\"\", \"ngxMatFileInputIcon\", \"\"]]];\nconst _c3 = [\"[ngxMatFileInputIcon]\"];\nlet nextUniqueId = 0;\r\nclass NgxMatInputBase {\r\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \r\n    /** @docs-private */\r\n    ngControl) {\r\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\r\n        this._parentForm = _parentForm;\r\n        this._parentFormGroup = _parentFormGroup;\r\n        this.ngControl = ngControl;\r\n    }\r\n}\r\nconst _NgxMatInputMixinBase = mixinErrorState(NgxMatInputBase);\r\nclass NgxMatFileInputIcon {\r\n}\nNgxMatFileInputIcon.ɵfac = function NgxMatFileInputIcon_Factory(t) { return new (t || NgxMatFileInputIcon)(); };\nNgxMatFileInputIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxMatFileInputIcon, selectors: [[\"\", \"ngxMatFileInputIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMatFileInputIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxMatFileInputIcon]'\n            }]\n    }], null, null); })();\r\nclass NgxMatFileInputComponent extends _NgxMatInputMixinBase {\r\n    constructor(_elementRef, _platform, _cd, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher) {\r\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n        this._elementRef = _elementRef;\r\n        this._platform = _platform;\r\n        this._cd = _cd;\r\n        this.ngControl = ngControl;\r\n        this.color = 'primary';\r\n        this.fileNames = null;\r\n        this._uid = `ngx-mat-fileinput-${nextUniqueId++}`;\r\n        this.stateChanges = new Subject();\r\n        this.focused = false;\r\n        this.controlType = 'ngx-mat-file-input';\r\n        this.autofilled = false;\r\n        /** Function when touched */\r\n        this._onTouched = () => { };\r\n        /** Function when changed */\r\n        this._onChange = () => { };\r\n        this._disabled = false;\r\n        this._multiple = false;\r\n        this.placeholder = 'Choose a file';\r\n        this.separator = ',';\r\n        this._required = false;\r\n        this._readonly = true;\r\n        this.id = this.id;\r\n        if (this.ngControl) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n    get disabled() {\r\n        if (this.ngControl && this.ngControl.disabled !== null) {\r\n            return this.ngControl.disabled;\r\n        }\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        if (this.focused) {\r\n            this.focused = false;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    get id() { return this._id; }\r\n    set id(value) { this._id = value || this._uid; }\r\n    get multiple() { return this._multiple; }\r\n    set multiple(value) {\r\n        this._multiple = coerceBooleanProperty(value);\r\n    }\r\n    get required() { return this._required; }\r\n    set required(value) { this._required = coerceBooleanProperty(value); }\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    get readonly() { return this._readonly; }\r\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\r\n    /**\r\n     * Limiting accepted file types\r\n     * Example: accept=\"image/png, image/jpeg\" or accept=\".png, .jpg, .jpeg\" — Accept PNG or JPEG files.\r\n     */\r\n    get accept() { return this._accept; }\r\n    set accept(value) {\r\n        this._accept = value;\r\n    }\r\n    ngOnChanges() {\r\n        this.stateChanges.next();\r\n    }\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n    }\r\n    ngDoCheck() {\r\n        if (this.ngControl) {\r\n            this.updateErrorState();\r\n        }\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    writeValue(value) {\r\n        this._updateInputValue(value);\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.stateChanges.next();\r\n    }\r\n    /** Focuses the input. */\r\n    focus(options) {\r\n        this._inputValueRef.nativeElement.focus(options);\r\n    }\r\n    _focusChanged(isFocused) {\r\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\r\n            this.focused = isFocused;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    /** Mark the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._cd.markForCheck();\r\n        this.stateChanges.next();\r\n    }\r\n    _isBadInput() {\r\n        let validity = this._inputValueRef.nativeElement.validity;\r\n        return validity && validity.badInput;\r\n    }\r\n    get empty() {\r\n        return !this._inputValueRef.nativeElement.value && !this._isBadInput() &&\r\n            !this.autofilled;\r\n    }\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n    setDescribedByIds(ids) {\r\n        this._ariaDescribedby = ids.join(' ');\r\n    }\r\n    openFilePicker(event) {\r\n        this._inputFileRef.nativeElement.click();\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        this._markAsTouched();\r\n    }\r\n    handleFiles(filelist) {\r\n        if (filelist.length > 0) {\r\n            const files = new Array();\r\n            for (let i = 0; i < filelist.length; i++) {\r\n                files.push(filelist.item(i));\r\n            }\r\n            this._updateInputValue(files);\r\n            this._resetInputFile();\r\n            this._onChange(this.multiple ? files : files[0]);\r\n        }\r\n    }\r\n    /** Handles a click on the control's container. */\r\n    onContainerClick(event) { }\r\n    ;\r\n    _resetInputFile() {\r\n        this._inputFileRef.nativeElement.value = \"\";\r\n    }\r\n    _updateInputValue(files) {\r\n        let text = null;\r\n        if (files) {\r\n            if (Array.isArray(files)) {\r\n                text = this._multiple\r\n                    ? files.map(x => x.name).join(this.separator)\r\n                    : files[0].name;\r\n            }\r\n            else {\r\n                text = files.name != null ? files.name : null;\r\n            }\r\n        }\r\n        this._inputValueRef.nativeElement.value = text;\r\n    }\r\n}\nNgxMatFileInputComponent.ɵfac = function NgxMatFileInputComponent_Factory(t) { return new (t || NgxMatFileInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher)); };\nNgxMatFileInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxMatFileInputComponent, selectors: [[\"ngx-mat-file-input\"]], contentQueries: function NgxMatFileInputComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgxMatFileInputIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function NgxMatFileInputComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputFileRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputValueRef = _t.first);\n    } }, hostAttrs: [1, \"ngx-mat-file-input\"], inputs: { color: \"color\", placeholder: \"placeholder\", separator: \"separator\", id: \"id\", disabled: \"disabled\", multiple: \"multiple\", required: \"required\", value: \"value\", readonly: \"readonly\", accept: \"accept\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"ngx-mat-file-input\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: forwardRef(() => NgxMatFileInputComponent) }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 8, vars: 13, consts: [[\"autocomplete\", \"off\", 1, \"mat-input-element\", \"mat-form-field-autofill-control\", 3, \"disabled\", \"required\"], [\"inputValue\", \"\"], [1, \"mat-form-field-suffix\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"type\", \"button\", 1, \"button-browse\", 3, \"color\", \"disabled\", \"click\"], [\"class\", \"ngx-mat-file-input--default-icon\", 4, \"ngIf\"], [\"type\", \"file\", 1, \"input-file\", 3, \"multiple\", \"accept\", \"change\"], [\"inputFile\", \"\"], [1, \"ngx-mat-file-input--default-icon\"]], template: function NgxMatFileInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelement(0, \"input\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function NgxMatFileInputComponent_Template_button_click_3_listener($event) { return ctx.openFilePicker($event); });\n        ɵngcc0.ɵɵtemplate(4, NgxMatFileInputComponent_mat_icon_4_Template, 2, 0, \"mat-icon\", 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function NgxMatFileInputComponent_Template_input_change_6_listener($event) { return ctx.handleFiles($event.target.files); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"multiple\", ctx.multiple)(\"accept\", ctx.accept);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.MatSuffix, ɵngcc6.NgIf, ɵngcc7.MatIcon], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{display:flex;line-height:18px;height:18px;align-items:center}.ngx-mat-file-input .input-file{display:block;visibility:hidden;width:0;height:0}\"], encapsulation: 2 });\r\n/** @nocollapse */\r\nNgxMatFileInputComponent.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Platform },\r\n    { type: ChangeDetectorRef },\r\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\r\n    { type: NgForm, decorators: [{ type: Optional }] },\r\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\r\n    { type: ErrorStateMatcher }\r\n];\r\nNgxMatFileInputComponent.propDecorators = {\r\n    _inputFileRef: [{ type: ViewChild, args: ['inputFile', { static: true },] }],\r\n    _inputValueRef: [{ type: ViewChild, args: ['inputValue', { static: true },] }],\r\n    _customIcon: [{ type: ContentChild, args: [NgxMatFileInputIcon,] }],\r\n    color: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    id: [{ type: Input }],\r\n    multiple: [{ type: Input }],\r\n    placeholder: [{ type: Input }],\r\n    separator: [{ type: Input }],\r\n    required: [{ type: Input }],\r\n    errorStateMatcher: [{ type: Input }],\r\n    value: [{ type: Input }],\r\n    readonly: [{ type: Input }],\r\n    accept: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMatFileInputComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-mat-file-input',\n                template: \"<input #inputValue autocomplete=\\\"off\\\" class=\\\"mat-input-element mat-form-field-autofill-control\\\" [attr.id]='id'\\r\\n  [attr.placeholder]='placeholder' [disabled]='disabled' [required]='required' [attr.readonly]='readonly || null'\\r\\n  [attr.aria-describedby]='_ariaDescribedby || null' [attr.aria-invalid]='errorState'\\r\\n  [attr.aria-required]='required.toString()'>\\r\\n<div class=\\\"mat-form-field-suffix\\\">\\r\\n  <button matSuffix mat-icon-button [color]=\\\"color\\\" class=\\\"button-browse\\\"  (click)=\\\"openFilePicker($event)\\\" type=\\\"button\\\"\\r\\n   [disabled]=\\\"disabled\\\">\\r\\n    <mat-icon *ngIf=\\\"!_customIcon\\\" class=\\\"ngx-mat-file-input--default-icon\\\">attach_file</mat-icon>\\r\\n    <ng-content select=\\\"[ngxMatFileInputIcon]\\\"></ng-content>\\r\\n  </button>\\r\\n</div>\\r\\n<input type=\\\"file\\\" #inputFile (change)=\\\"handleFiles($event.target.files)\\\" class=\\\"input-file\\\"\\r\\n  [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\">\",\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'class': 'ngx-mat-file-input'\n                },\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: forwardRef(() => NgxMatFileInputComponent) }\n                ],\n                exportAs: 'ngx-mat-file-input',\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{display:flex;line-height:18px;height:18px;align-items:center}.ngx-mat-file-input .input-file{display:block;visibility:hidden;width:0;height:0}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }]; }, { color: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], separator: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], accept: [{\n            type: Input\n        }], _inputFileRef: [{\n            type: ViewChild,\n            args: ['inputFile', { static: true }]\n        }], _inputValueRef: [{\n            type: ViewChild,\n            args: ['inputValue', { static: true }]\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [NgxMatFileInputIcon]\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\n\nclass NgxMatFileInputModule {\r\n}\nNgxMatFileInputModule.ɵfac = function NgxMatFileInputModule_Factory(t) { return new (t || NgxMatFileInputModule)(); };\nNgxMatFileInputModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxMatFileInputModule });\nNgxMatFileInputModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatIconModule,\n            MatFormFieldModule,\n            MatInputModule\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMatFileInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxMatFileInputComponent,\n                    NgxMatFileInputIcon\n                ],\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatIconModule,\n                    MatFormFieldModule,\n                    MatInputModule\n                ],\n                exports: [\n                    NgxMatFileInputComponent,\n                    NgxMatFileInputIcon\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMatFileInputModule, { declarations: function () { return [NgxMatFileInputComponent, NgxMatFileInputIcon]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatInputModule]; }, exports: function () { return [NgxMatFileInputComponent, NgxMatFileInputIcon]; } }); })();\n\nfunction calculFileSize(number) {\r\n    if (number < 1024) {\r\n        return number + 'bytes';\r\n    }\r\n    else if (number >= 1024 && number < 1048576) {\r\n        return (number / 1024).toFixed(1) + 'KB';\r\n    }\r\n    else if (number >= 1048576) {\r\n        return (number / 1048576).toFixed(1) + 'MB';\r\n    }\r\n}\n\n/**\r\n * Validator for size of file\r\n * @param max Max of size of file (in bytes)\r\n */\r\nfunction MaxSizeValidator(max) {\r\n    return (ctrl) => {\r\n        max = Number(max);\r\n        if (isNaN(max)) {\r\n            throw 'MaxSizeValidator: max of size of file is invalid';\r\n        }\r\n        if (!ctrl.value)\r\n            return null;\r\n        let files = ctrl.value;\r\n        if (!Array.isArray(ctrl.value)) {\r\n            files = [ctrl.value];\r\n        }\r\n        if (!files.length)\r\n            return null;\r\n        const add = (a, b) => a + b;\r\n        const sumSize = files.map(x => x.size).reduce(add);\r\n        if (sumSize > max) {\r\n            return {\r\n                maxSize: true\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n}\n\n/**\r\n *\r\n * @param accept Allowable type of file\r\n */\r\nfunction AcceptValidator(accept) {\r\n    return (ctrl) => {\r\n        if (!accept) {\r\n            throw ('AcceptValidator: allowable type of file can not be empty');\r\n        }\r\n        if (ctrl.value == null)\r\n            return null;\r\n        if (!accept.includes(ctrl.value.type)) {\r\n            return {\r\n                accept: true\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n}\n\n/*\r\n * Public API Surface of file-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AcceptValidator, MaxSizeValidator, NgxMatFileInputComponent, NgxMatFileInputIcon, NgxMatFileInputModule, calculFileSize };\n\n//# sourceMappingURL=angular-material-components-file-input.js.map","import { FOUom } from \"../../../group-parameter-mapping/masters/fouom\";\r\nimport { VitalParameters } from \"../../../group-parameter-mapping/masters/vital-parameter\";\r\nimport { Groups } from \"../../../master/group-master/masters/groups\";\r\nimport { Visit } from \"../../../encounter/masters/visit\";\r\nimport { Department } from \"../../../master/department/masters/department\";\r\nimport { LookupEntity } from \"../../../master/lookup-module/masters/lookup-entity\";\r\nimport { BaseEntity } from \"../../../master/masters/base-entity\";\r\nimport { Branch } from \"../../../master/service-center/masters/branch\";\r\nimport { ServiceCenter } from \"../../../master/service-center/masters/service-center\";\r\nimport { Patient } from \"../../../patient/master/patient\";\r\n\r\nexport class VitalSign extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\t\r\n\tcontrolType: LookupEntity =  new LookupEntity;\r\n\tcurrentValue: number;\r\n\tdepartment : Department = new Department;\r\n\tdistinguisherId: number;\r\n\tenteredDateTime= new Date();\r\n\tgroup: Groups  = new Groups();\r\n\tlocation: ServiceCenter = new ServiceCenter;\r\n\tlowerRefRange: number;\r\n\tparameter : VitalParameters = new VitalParameters();\r\n\tparameterValue: string;\r\n\tpatient : Patient = new Patient;\r\n\tremarks: string;\r\n\tsite: Branch = new Branch;\r\n\tuom: FOUom  = new FOUom();\r\n\tupperRefRange: number;\r\n\tvisit: Visit = new Visit();\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { MainService } from '../../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VitalSignService {\r\n    \r\n    \n\tbaseUrl =\"\"\n  constructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl();  }\r\n  \tgetVitalSignList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/vitalSign/get`)\r\n\t}\r\n\tgetVitalSignById(id):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/vitalSign/getById/${id}`)\r\n\t}\r\n\tgetVitalSignListByPatientId(patientId: any):any {\r\n       return this.http.get(`${this.baseUrl}/vitalSign/getByPatientId/${patientId}`)\r\n    }\r\n\t\r\n\tgetVitalSignByGroupId(groupId: number):any {\r\n        return this.http.get(`${this.baseUrl}/vitalSign/getByGroupId/${groupId}`)\r\n    }\r\n\tcreateVitalSign(vitalSign):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/vitalSign/add`,vitalSign)\r\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VitalSignComponent } from './vital-sign.component';\r\n\nconst routes: Routes = [\n\t{path: '', component: VitalSignComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VitalSignRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ParameterToGrpMap } from '../../group-parameter-mapping/masters/group-parameter-mapping';\r\nimport { GroupParameterMappinginService } from '../../group-parameter-mapping/services/group-parameter-mappingin.service';\r\nimport { Patient } from '../../patient/master/patient';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { VitalSign } from './master/vital-sign';\r\nimport { VitalSignService } from './services/vital-sign.service';\r\n\r\n@Component({\r\n  selector: 'app-vital-sign',\r\n  templateUrl: './vital-sign.component.html',\r\n  styleUrls: ['./vital-sign.component.css'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class VitalSignComponent implements OnInit {\r\n\tvitalSignList: Array<VitalSign> = new Array<VitalSign>();\r\n\tvitalSign: VitalSign = new VitalSign;\r\n\tvitalParameterGroupMappingList: Array<ParameterToGrpMap> = [];\r\n\tcurrentValue: Array<number> = new Array<number>();\r\n\tbmi: any = null;\r\n\tgcs: any = null;\r\n\tmap:any = null;\r\n\tpatient = new Patient();\r\n\tgroupId : number;\r\n\t\r\n\t@Input() isFromClinicalDetails : boolean = false;\r\n  constructor(\r\n\tprivate vitalSignService: VitalSignService,\r\n  \tprivate groupParameterMappingService: GroupParameterMappinginService,\r\n  \tprivate dialog: MatDialog\r\n  \t) { }\r\n\r\n  ngOnInit(): void {\r\n\tthis.reloadData();\r\n  }\r\n  ngOnLoad(){\r\n\t\r\n\t}\r\n  \treloadData(){\r\n\t\tthis.patient = JSON.parse(localStorage.getItem('patient'));\r\n\t\r\n\t\tthis.vitalSignService.getVitalSignList().subscribe(data =>{\r\n\t\t\tconsole.log(data,\"VitalSignList\");\r\n\t\t\tthis.vitalSignList = data;\r\n\t\t})\r\n\t\tthis.groupParameterMappingService.getGroupParameterMappingList().subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.vitalParameterGroupMappingList = [];\r\n\t\t\t//console.log(document.getElementById('vitalSign').click())\r\n\t\t})\r\n\t\tconsole.log(window.document.getElementById('vitalSign').click())\r\n\t}\r\n\tonSubmit(vitalSignForm){\r\n\t\t\r\n\t}\r\n\tshowVitalParameterGroupListByGroupId(num){\r\n\t\tthis.groupId = num;\r\n\t\tthis.groupParameterMappingService.getGroupParameterMappingByGroupId(num).subscribe(data =>{\r\n\t\t\tthis.vitalParameterGroupMappingList = data;\r\n\t\t})\r\n\r\n\t}\r\n\tcalculateBMI(vitalSign){\r\n\t\t//console.log(vitalSign.parameter.formula)\r\n\t\tif(vitalSign.parameter.parameterId == 1){\r\n\t\t\tlet formula = vitalSign.parameter.formula;\r\n\t\t\tvar signs = formula.split(\"_\");\r\n\t\t\tvar weight = signs[1];\r\n\t\t\tvar height = signs[3];\r\n\t\t\tvar finalWeight;\r\n\t\t\tlet finalHeight;\r\n\t\t\t//let weight,height= formula.split(\"_\");\r\n\t\t\t//console.log(weight,height)\r\n\t\t\tthis.vitalParameterGroupMappingList.forEach((value,index) =>{\r\n\t\t\t\tif(value.parameter.parameterId == weight){\r\n\t\t\t\t\tfinalWeight = this.currentValue[index];\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == height){\r\n\t\t\t\t\tfinalHeight = this.currentValue[index]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.bmi = (finalWeight/(finalHeight*finalHeight))*10000;\r\n\t\t\tthis.bmi = this.bmi.toFixed(2);\r\n\t\t\t//console.log(this.bmi)\r\n\t\t}\r\n\t\telse if(vitalSign.parameter.parameterId == 2){\r\n\t\t\tconsole.log(vitalSign.parameter.formula);\r\n\t\t}\r\n\t\telse if(vitalSign.parameter.parameterId == 3){\r\n\t\t\tthis.map = 0;\r\n\t\t\tlet formula = vitalSign.parameter.formula;\r\n\t\t\tvar signs = formula.split(\"_\");\r\n\t\t\t//console.log(signs)\r\n\t\t\tvar sys = signs[0];\r\n\t\t\tvar dys = signs[2];\r\n\t\t\tvar finalSys :number =0;\r\n\t\t\tvar finalDys:number = 0;\r\n\t\t\tthis.vitalParameterGroupMappingList.forEach((value,index) =>{\r\n\t\t\t\tif(value.parameter.parameterId == sys){\r\n\t\t\t\t\tfinalSys = Number(this.currentValue[index]);\r\n\t\t\t\t\t//console.log(finalSys)\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == dys){\r\n\t\t\t\t\tfinalDys = Number(this.currentValue[index]);\r\n\t\t\t\t\t//console.log(finalDys+finalSys)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.map = (finalSys + 2*(finalDys))/3\r\n\t\t\tthis.map = this.map.toFixed(2)\r\n\t\t\t//console.log(this.map);\r\n\t\t}\r\n\t\telse if(vitalSign.parameter.parameterId == 4){\r\n\t\t\tlet formula = vitalSign.parameter.formula;\r\n\t\t\tvar signs = formula.split(\"_\");\r\n\t\t\tconsole.log(signs)\r\n\t\t\tvar e = signs[0];\r\n\t\t\tvar v = signs[2];\r\n\t\t\tvar m = signs[4]\r\n\t\t\tvar finalE;\r\n\t\t\tvar finalV;\r\n\t\t\tvar finalM\r\n\t\t\tthis.vitalParameterGroupMappingList.forEach((value,index) =>{\r\n\t\t\t\tif(value.parameter.parameterId == e){\r\n\t\t\t\t\tfinalE = Number(this.currentValue[index]);\r\n\t\t\t\t\tconsole.log(finalE)\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == v){\r\n\t\t\t\t\tfinalV = Number(this.currentValue[index]);\r\n\t\t\t\t\tconsole.log(finalV)\r\n\t\t\t\t}\r\n\t\t\t\tif(value.parameter.parameterId == m){\r\n\t\t\t\t\tfinalM = Number(this.currentValue[index]);\r\n\t\t\t\t\tconsole.log(finalM)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.gcs = finalE+finalV+finalM;\r\n\t\t\tconsole.log(this.gcs)\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tgotoBack(){\r\n\t\thistory.back();\r\n\t}\r\n\tsaveVitalSign(vitalParameterGroupMappingList){\r\n\t\tvitalParameterGroupMappingList.forEach((data,index) =>{\r\n\t\t\tlet vitalSign = new VitalSign();\r\n\t\t\tvitalSign.group = data.group;\r\n\t\t\tvitalSign.parameter = data.parameter;\r\n\t\t\tvitalSign.currentValue=this.currentValue[index];\r\n\t\t\tif(this.currentValue[index] == null){\r\n\t\t\t\tif(data.parameter.parameterId  == 1){\r\n\t\t\t\t\tvitalSign.currentValue = this.bmi;\r\n\t\t\t\t}\r\n\t\t\t\telse if(data.parameter.parameterId  == 3){\r\n\t\t\t\t\tvitalSign.currentValue = this.map;\r\n\t\t\t\t}\r\n\t\t\t\telse if(data.parameter.parameterId  == 4){\r\n\t\t\t\t\tvitalSign.currentValue = this.gcs;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvitalSign.enteredDateTime = new Date();\r\n\t\t\tlet ref = data.parameter.referenceRange.split(\"-\");\r\n\t\t\tvitalSign.lowerRefRange = ref[0];\r\n\t\t\tvitalSign.upperRefRange = ref[1];\r\n\t\t\tvitalSign.controlType = data.parameter.controlType;\r\n\t\t\tvitalSign.department = null\r\n\t\t\tvitalSign.location = null;\r\n\t\t\tvitalSign.patient = this.patient;\r\n\t\t\tvitalSign.site = null;\r\n\t\t\tvitalSign.visit = null;\r\n\t\t\tvitalSign.uom = data.parameter.uom;\r\n\t\t\tthis.storeVitalSign(vitalSign);\r\n\t\t})\r\n\t}\r\n\tstoreVitalSign(vitalSign){\r\n\t\tthis.vitalSignService.createVitalSign(vitalSign).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\talert(\"Vital Sign Updated Successfully\")\r\n\t\t})\r\n\t}\r\n\t/*showFilePath(event){\r\n\t\tconsole.log(event)\r\n\t\tconsole.log(event.target)\r\n\t\tconsole.log(event.target.value)\r\n\t\tconsole.log(event.target.files[0].path)\r\n\t}*/\r\n\tshowVitalSignList(popUp){\r\n\t\tthis.vitalSignService.getVitalSignByGroupId(this.groupId).subscribe(data =>{\r\n\t\t\tconsole.log(data);\r\n\t\t\tthis.vitalSignList = data;\r\n\t\t})\r\n\t\t/*this.vitalSignService.getVitalSignListByPatientId(this.patient.mrn).subscribe(data =>{\r\n\t\t\t\r\n\t\t})*/\r\n\t\tthis.dialog.open(popUp);\r\n\t}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VitalSignRoutingModule } from './vital-sign-routing.module';\r\nimport { VitalSignComponent } from './vital-sign.component';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../material/material.module';\r\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    VitalSignComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    VitalSignRoutingModule,\r\n    PageHeaderModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    MaterialModule,\r\n    NgxMatFileInputModule\r\n  ],\r\n  exports: [\r\n\tVitalSignComponent\r\n]\r\n})\r\nexport class VitalSignModule { }\r\n","import { BaseEntity } from \"../../master/masters/base-entity\";\r\n\r\nexport class FOUOMType extends BaseEntity{\r\n\tid: number;\r\n\tdescription: string;\r\n\tactive : boolean = true;\r\n\tname: string;\r\n}","import { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { FOUOMType } from \"./fouom-type\";\r\n\r\nexport class FOUom extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tid: number;\r\n\tcode: string;\r\n\tname: string;\r\n\tconversionFactor: number;\r\n\tnoOfDecimalPlaces: number;\r\n\tuomType: FOUOMType = new FOUOMType ;\r\n\tactive : boolean = true;\r\n\tderived: boolean  = false;\r\n\tbaseUOMId : string;\r\n\t\r\n}","import { LookupEntity } from \"../../master/lookup-module/masters/lookup-entity\";\r\nimport { BaseEntity } from \"../../master/masters/base-entity\";\r\nimport { FOUom } from \"./fouom\";\r\n\r\nexport class VitalParameters extends BaseEntity {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t}\r\n\tparameterId: number;\r\n\tparameterCode: string;\r\n\tparameterName: string\r\n\tvisitTypeApplicable: LookupEntity = new LookupEntity;\r\n\tdataType: LookupEntity = new LookupEntity;\r\n\tcontrolType: LookupEntity = new LookupEntity;\r\n\tisChartRequired: boolean;\r\n\tformula: string;\r\n\tactive: boolean;\r\n\tuom: FOUom = new FOUom;\r\n\tgenderWise : boolean  = false;\r\n\tageWise: boolean = false;\r\n\tparameterOrder: number;\r\n\treferenceRange: string;\r\n\t\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\nimport { MainService } from '../../main.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupParameterMappinginService {\n\tbaseUrl = \"\"\n  constructor(private http:HttpClient,private mainService: MainService\t\r\n\t) {\r\n\t\tthis.baseUrl = this.mainService.getBaseUrl(); }\r\n\tgetGroupParameterMappingList():any{\r\n\t\treturn this.http.get(`${this.baseUrl}/parameterToGrpMap/get`);\r\n\t}\r\n\tgetGroupParameterMappingById(id):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/parameterToGrpMap/getById/${id}`);\r\n\t}\r\n\tgetGroupParameterMappingByGroupId(id):any{\r\n\t\treturn this.http.get(`${this.baseUrl}/parameterToGrpMap/getByGroupId/${id}`)\r\n\t}\r\n\tcreateGroupParameterMapping(groupParameterMapping):any{\r\n\t\treturn this.http.post(`${this.baseUrl}/parameterToGrpMap/add`,groupParameterMapping);\r\n\t}\r\n\tdeleteGroupParameterMapping(id):any{\r\n\t\treturn this.http.delete(`${this.baseUrl}/parameterToGrpMap/delete/${id}`)\r\n\t}\n}\n","import { BaseEntity } from \"../../masters/base-entity\";\r\n\r\nexport class GroupType extends BaseEntity{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t}\r\n\tgroupTypeId: number;\r\n\tgroupTypeName: string;\r\n\tactive: boolean;\r\n\tlevel: number;\r\n\t\r\n}","import { BaseEntity } from \"../../masters/base-entity\";\r\nimport { GroupType } from \"./group-type\";\r\n\r\nexport class Groups extends BaseEntity{\r\n\tgroupId : number;\r\n\tgroupName: string;\r\n\tdescription: string;\r\n\tgroupType : GroupType = new GroupType;\r\n\tactive: boolean;\r\n\tmapGroupId: number;\r\n\tparentGroupPath: string;\r\n\tsortOrder: number;\r\n\topSalesAccount: number;\r\n\topDiscountAccount: number;\r\n\tipSalesAccount: number;\r\n\tipDiscountAccount: number;\r\n\tserviceCodeType: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aXRhbC1zaWduLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\r\\n<div [@routerTransition] *ngIf = \\\"!isFromClinicalDetails\\\">\\r\\n\\t<app-page-header [mainhead]=\\\"'DoctorsWorkBench'\\\"\\r\\n\\t\\t[mainheadLink]=\\\"'/doctorsWorkbench'\\\" [heading]=\\\"'Vital Sign'\\\"\\r\\n\\t\\t[icon]=\\\"'fa-cog'\\\"></app-page-header>\\r\\n</div>\\r\\n<div class=\\\"card \\\">\\r\\n\\t<div class=\\\"card-head\\\">\\r\\n\\t\\t<nav class=\\\"navbar  bg-dark text-white\\\">\\r\\n\\t\\t\\t<h3>Vital Sign</h3>\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t<img src =\\\"./assets/images/close.ico\\\" matTooltip = \\\"Back\\\" style =\\\"height:35px;width:35px;\\\" (click) = \\\"gotoBack()\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</nav>\\r\\n\\t</div>\\r\\n<!-- \\t<mat-form-field>\\r\\n   <ngx-mat-file-input (change) = \\\"showFilePath($event) [accept] = true\\\">\\r\\n   </ngx-mat-file-input>\\r\\n</mat-form-field>\\r\\n\\t<input matInput type =\\\"File\\\" (change) = \\\"showFilePath($event)\\\"> -->\\r\\n\\t<div class='card-body'>\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-2 \\\">\\r\\n\\t\\t\\t\\t<div class=\\\"card pt-0\\\">\\r\\n\\t\\t\\t\\t\\t<ul ngbNav #nav=\\\"ngbNav\\\" class=\\\"nav-pills\\\" orientation=\\\"vertical\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"vitalsign\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a ngbNavLink id = \\\"vitalSign\\\" (click) = \\\"showVitalParameterGroupListByGroupId(1010)\\\"> Vital Sign </a> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-template ngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card  \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Vital Sign</h2>\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" class =\\\"btn btn-sm btn-warning\\\" (click) = \\\"showVitalSignList(vitalSignPopup)\\\">View All</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class =\\\"btn btn-sm btn-warning\\\" (click) = \\\"saveVitalSign(vitalParameterGroupMappingList)\\\">Save</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table  table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let vitalsign of vitalParameterGroupMappingList; let i =index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\">{{vitalsign.parameter.parameterName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngIf = \\\"vitalsign.parameter.controlType.lookupId != 192; else showImg\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control  \\\"  [(ngModel)] = \\\"currentValue[i]\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #showImg>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of BMI -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\" vitalsign.parameter.parameterId == 1\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Height and Weight first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of Test -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of MAP -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Systolic BP and Diastolic BP \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map!=null && map != 'NaN'\\\">{{map}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of GCS -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter E,V and M first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs!=null && gcs != 'NaN'\\\">{{gcs}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src = \\\"./assets/images/calculator.png\\\" style = \\\"height:25px;width: 25px;\\\" (click) = \\\"calculateBMI(vitalsign)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\"><label *ngIf =\\\"vitalsign.parameter.uom != null\\\">{{vitalsign.parameter.uom.name}}</label></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-2\\\">{{vitalsign.parameter.referenceRange}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class =\\\"col-md-4\\\"><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"  /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"bloodsugar\\\"><a ngbNavLink (click) = \\\"showVitalParameterGroupListByGroupId(89)\\\"> Blood Sugarssss</a> <ng-template\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Blood Sugar</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"accent\\\" class =\\\"btn btn-sm btn-warning\\\">View All</button>&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" class =\\\"btn btn-sm btn-warning\\\">Save</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table  table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let vitalsign of vitalParameterGroupMappingList; let i =index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"height: 10px; width: 10px\\\">{{vitalsign.parameter.parameterName}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div  *ngIf = \\\"vitalsign.parameter.controlType.lookupId != 192; else showImg\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)] = \\\"currentValue[i]\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #showImg>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of BMI -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\" vitalsign.parameter.parameterId == 1\\\"> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Height and Weight first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of Test -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"bmi!=null && bmi != 'NaN'\\\">{{bmi}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of MAP -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter Systolic BP and Diastolic BP \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"map!=null && map != 'NaN'\\\">{{map}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- -----------Div for Calculation of GCS -------------------  -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf =\\\"vitalsign.parameter.parameterId == 4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs == 'NaN'\\\" style =\\\"color:red;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tPlease Enter E,V and M first\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label *ngIf = \\\"gcs!=null && gcs != 'NaN'\\\">{{gcs}}</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src = \\\"./assets/images/calculator.png\\\" style = \\\"height:25px;width: 25px;\\\" (click) = \\\"calculateBMI(vitalsign)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><label *ngIf =\\\"vitalsign.parameter.uom != null\\\">{{vitalsign.parameter.uom.name}}</label></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{vitalsign.parameter.referenceRange}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\"  /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template></li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"painscale\\\"><a ngbNavLink>Pain Scale</a> <ng-template\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white  justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Pain Scale</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"height: 10px; width: 10px\\\">PainScale</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row p-1 m-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" size=5 class=\\\"col-md-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" size=\\\"3\\\" [(ngModel)]=\\\"painScaleValue\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row p-1 m-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale1.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('0')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>0</label> <label> No Hurt</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale2.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('2')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>2</label> <label> Hurts Little Bit</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale3.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('4')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>4</label> <label>Hurts Little More</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale4.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('6')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>6</label> <label>Hurts Even More</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale5.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('8')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>8</label> <label>Hurts Whole Lot</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"./assets/images/painscale6.jpg\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\talter=\\\"painscale1\\\" (click)=\\\"setPainScaleValue('10')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row text-center ml-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>10</label> <label>Hurts Worst</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row p-1 m-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table border border-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td colspan=2>Selected Value : &nbsp;{{painValue}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>0-0 : No Pain</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>1-2 : Mid Pain</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>3-4 : Moderate</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>5-6 : Above Moderate</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>7-8 : Severe</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>9-10 : Worst</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>0.0 - 10.0</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr> -->\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template></li>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<li ngbNavItem=\\\"gcs\\\"><a ngbNavLink>GCS</a> <ng-template\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tngbNavContent>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-head \\\" border=\\\"\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<nav class=\\\"navbar bg-dark text-white  justify-content-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>GCS</h2>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</nav>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-sm \\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Vital Signs</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Current Value</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Unit</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Reference Range</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Remarks</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <tr *ngFor=\\\"let gcs of gcsList\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td style=\\\"height: 10px; width: 10px\\\">{{gcs.vitalSign}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" [(ngModel)]=\\\"gcs.currentValue\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{gcs.unit}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{gcs.referenceRange}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><input id=\\\"typeahead-basic\\\" type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" [(ngModel)]=\\\"gcs.remarks\\\" /></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ng-template></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-10 \\r\\n\\t\\t\\t+\\\">\\r\\n\\t\\t\\t\\t<div [ngbNavOutlet]=\\\"nav\\\" ></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #vitalSignPopup>\\r\\n\\t<div class =\\\"card border\\\">\\r\\n\\t\\t<nav class=\\\"navbar bg-dark text-white\\\">\\r\\n\\t\\t\\t<h3>Vital Sign List</h3>\\r\\n\\t\\t</nav>\\r\\n\\t\\t<div class =\\\"card-body\\\">\\r\\n\\t\\t\\t<table class =\\\"table table-responsive\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr class =\\\"bg-secondary\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th class =\\\"border border-dark\\\">Data/Time-></th>\\r\\n\\t\\t\\t\\t\\t\\t<th *ngFor =\\\"let vitalSig of vitalSignList;let i = index\\\" class =\\\"border border-dark\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{vitalSig.parameter.parameterName}}\\r\\n\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t<tr >\\r\\n\\t\\t\\t\\t\\t\\t<td class =\\\"border border-dark\\\">Date/Time</td>\\r\\n\\t\\t\\t\\t\\t\\t<td class =\\\"border border-dark\\\" *ngFor =\\\"let vitalSig of vitalSignList;let i = index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{vitalSig.currentValue}}\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t<!--  <td *ngFor =\\\"let vitalSign of vitalSignList\\\">{{vitalSign.parameter.parameterName}}</td>-->\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</ng-template>\";"]}